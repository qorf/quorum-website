use Libraries.Web.Page.Division
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.Image
use Libraries.Web.Page.WebTable
use Libraries.Web.Page.TableBody
use Libraries.Containers.Array
use Libraries.Web.Page.TableHeader
use Libraries.Web.Page.Form
use Libraries.Web.Page.Label
use Libraries.Web.Page.Bold
use Libraries.Web.Page.Input
use Libraries.Web.Page.Span
use Libraries.Web.Page.Button
use Libraries.Web.Page.Script
use Libraries.Web.Page.OrderedList
use Libraries.Web.Page.Select
use Libraries.Web.Page.Option


class HoCDataScience5 is HourOfCodeDataScience
    integer ACTIVITY = 5
    text SUBTITLE = "Customizing the Colors"

    action Setup()
// set values for the block ide on this page
        SetPaletteFileName("palette/dataScience5.xml")
        SetCodeForBlocks("html/hourofcode/datascience/datascience5.quorum")
        Setup(ACTIVITY, SUBTITLE, GetIntro(), GetInstructions(), GetBlockIDE(), GetQuestions())
    end

    action GetIntro() returns Division
        text dq = ""
        dq = dq:GetDoubleQuote()
        Division intro
        Preformatter pre

        // tracking pixel for code.org
        //intro:AddImage("https://code.org/api/hour/begin_quorum_astronomy.png", "")
        intro:AddParagraph("")
        intro:AddParagraph("You can select many different columns and factors at the same time. This breaks our data down into more and more groups, which each have their own color assigned so that we can differentiate them in the Chart. 
The first column we select is plotted against each of the other selected columns, and those sets are separated into groups based on the selected factors. So if we select Columns bill_depth and bill_length, and then we select Factors species and island, 
we end up getting 5 total groups of data (Note: not all of the species live on each island). Each of these comparisons is called a Series and is listed in our Legend. The points for each Series have a unique color, that way you can compare the trends. 
In this case, the default colors used are Dark Blue, Light Blue, Green, Teal and Purple. If you don't like these colors, there are many color palettes to choose from.")
        intro:AddParagraph("")
        //CodeBlock cb1
        //cb1:AddText("output " + dq + "telescope" + dq + "")
        //intro:Add(pre:GeneratePreformattedCode(cb1))

        //intro:AddParagraph("in the online code window below and then select the green Run Program button below the editor on the right (second in the tab order).")

        WebTable table = AddWebTable("Sample of Penguins2.CSV file")
        TableBody tableBody = AddTableBody()
        
        Array<text> tableHeaderArray
        tableHeaderArray:Add("species") 
        tableHeaderArray:Add("island")
        tableHeaderArray:Add("bill_depth")
        tableHeaderArray:Add("bill_length") 
        tableHeaderArray:Add("flipper_length")

        TableHeader thead = AddTableHeaderRow(tableHeaderArray)
        table:Add(thead)  

        Array<text> penguinData1
        penguinData1:Add("Adelie")
        penguinData1:Add("Torgersen")
        penguinData1:Add("18.7") 
        penguinData1:Add("39.1") 
        penguinData1:Add("181")
        tableBody:Add(AddTableBodyRow(penguinData1))

        Array<text> penguinData2
        penguinData2:Add("Adelie")
        penguinData2:Add("Biscoe") 
        penguinData2:Add("18.3") 
        penguinData2:Add("37.8") 
        penguinData2:Add("174")
        tableBody:Add(AddTableBodyRow(penguinData2))

        Array<text> penguinData3
        penguinData3:Add("Adelie")
        penguinData3:Add("Dream") 
        penguinData3:Add("18.5") 
        penguinData3:Add("36.8") 
        penguinData3:Add("193")
        tableBody:Add(AddTableBodyRow(penguinData3))

        Array<text> penguinData4
        penguinData4:Add("Gentoo")
        penguinData4:Add("Biscoe") 
        penguinData4:Add("13.2") 
        penguinData4:Add("46.1") 
        penguinData4:Add("211")
        tableBody:Add(AddTableBodyRow(penguinData4))

        Array<text> penguinData5
        penguinData5:Add("Chinstrap")
        penguinData5:Add("Dream") 
        penguinData5:Add("17.9") 
        penguinData5:Add("46.5") 
        penguinData5:Add("192")
        tableBody:Add(AddTableBodyRow(penguinData5))
    
        table:Add(tableBody)
        intro:Add(table)

        return intro

    end

    action GetInstructions() returns Division
        Division instructions
        

        instructions:AddParagraph("")
        instructions:AddParagraph("In the code editor below, we have a program that makes a Chart with two Series. Take code blocks from the palette and place them below where we make the Chart object but before we Display it.")
        OrderedList instructionsList
        instructionsList:AddListItem("<b>Use the block(s) in the palette on the left.</b>")
        instructionsList:AddListItem("<b>Place the 'chart:SetColorPaletteToCalm()' block below the 'ScatterPlot chart = frame:ScatterPlot()' block in the block editor.</b>")
        instructionsList:AddListItem("<b>Run the program.</b>")
        instructionsList:AddListItem("<b>To try other color options: stop the program, delete the block you added to the block editor and place one of the other blocks from the palette in the same location.</b>")
        instructionsList:AddListItem("<b>Use the chart in the canvas to answer the questions in the <i>Activity</i> section.</b>")
        instructionsList:AddClassAttribute("list-decimal list-outside pl-8")
        instructions:Add(instructionsList)  
        instructions:AddParagraph("")

        return instructions
    end

    
    action GetQuestions() returns Division
        Division questions

        AddStylesheet("/style/checkAnswers.css")
        

        questions:AddParagraph("")
        questions:AddParagraph("Use the chart(s) you've created in the <i>Coding</i> section to answer a few questions.")
        questions:AddParagraph("")
        
        Division hiddenStyling
        hiddenStyling:AddClassAttribute("hidden text-green-600 text-red-600 border-green-500 border-red-500")
        questions:Add(hiddenStyling)

        Form questionForm
        questionForm:SetIdentifier("quiz-form")
        questions:Add(questionForm)
        
        
        Division question1
        question1:AddClassAttribute("mb-4")
        questionForm:Add(question1)

        Paragraph question1Paragraph
        question1Paragraph:SetIdentifier("q1-label")
        question1Paragraph:AddClassAttribute("text-lg font-semibold text-gray-700")
        question1Paragraph:AddText("1. Which color palette was easiest to distinguish the different groups?")
        question1:Add(question1Paragraph)

        Paragraph question1Validation
        question1Validation:SetIdentifier("q1-validation")
        question1Validation:AddAttribute("aria-live","polite")
        question1Validation:AddClassAttribute("text-sm mt-1")
        question1:Add(question1Validation)

        Select question1Select
        question1Select:SetIdentifier("q1")
        question1Select:AddAttribute("aria-labelledby","q1-label")
        question1Select:AddAttribute("aria-describedby","q1-validation")
        question1Select:AddClassAttribute("mt-1 block w-full border border-gray-300 rounded-md shadow-sm focus:ring focus:ring-blue-500 focus:border-blue-500 p-2 
                       data-[state=incorrect]:border-red-500 data-[state=incorrect]:focus:ring-red-500 data-[state=incorrect]:focus:border-red-500 
                       data-[state=correct]:border-green-500 data-[state=correct]:focus:ring-green-500 data-[state=correct]:focus:border-green-500")
        question1:Add(question1Select)

        Option question1Option1
        question1Option1:AddAttribute("value","")
        question1Option1:SetSelected(true)
        question1Option1:SetDisabled(true)
        question1Option1:AddText("Choose an option")
        question1Select:Add(question1Option1)

        Option question1Option2
        question1Option2:AddAttribute("value","Default - Colorgorical")
        question1Option2:AddText("Default - Colorgorical")
        question1Select:Add(question1Option2)

        Option question1Option3
        question1Option3:AddAttribute("value","Calm")
        question1Option3:AddText("Calm")
        question1Select:Add(question1Option3)

        Option question1Option4
        question1Option4:AddAttribute("value","Disturbing")
        question1Option4:AddText("Disturbing")
        question1Select:Add(question1Option4)

        Option question1Option5
        question1Option5:AddAttribute("value","Exciting")
        question1Option5:AddText("Exciting")
        question1Select:Add(question1Option5)

        Option question1Option6
        question1Option6:AddAttribute("value","Magma")
        question1Option6:AddText("Magma")
        question1Select:Add(question1Option6)

        Option question1Option7
        question1Option7:AddAttribute("value","Playful")
        question1Option7:AddText("Playful")
        question1Select:Add(question1Option7)

        Option question1Option8
        question1Option8:AddAttribute("value","Serious")
        question1Option8:AddText("Serious")
        question1Select:Add(question1Option8)



        //Question 2
        Division question2
        question2:AddClassAttribute("mb-4")
        questionForm:Add(question2)

        Paragraph question2Paragraph
        question2Paragraph:SetIdentifier("q2-label")
        question2Paragraph:AddClassAttribute("text-lg font-semibold text-gray-700")
        question2Paragraph:AddText("2. What's your favorite color palette?")
        question2:Add(question2Paragraph)

        Paragraph question2Validation
        question2Validation:SetIdentifier("q2-validation")
        question2Validation:AddAttribute("aria-live","polite")
        question2Validation:AddClassAttribute("text-sm mt-1")
        question2:Add(question2Validation)

        Select question2Select
        question2Select:SetIdentifier("q2")
        question2Select:AddAttribute("aria-labelledby","q2-label")
        question2Select:AddAttribute("aria-describedby","q2-validation")
        question2Select:AddClassAttribute("mt-1 block w-full border border-gray-300 rounded-md shadow-sm focus:ring focus:ring-blue-500 focus:border-blue-500 p-2 
                       data-[state=incorrect]:border-red-500 data-[state=incorrect]:focus:ring-red-500 data-[state=incorrect]:focus:border-red-500 
                       data-[state=correct]:border-green-500 data-[state=correct]:focus:ring-green-500 data-[state=correct]:focus:border-green-500")
        question2:Add(question2Select)

        Option question2Option1
        question2Option1:AddAttribute("value","")
        question2Option1:SetSelected(true)
        question2Option1:SetDisabled(true)
        question2Option1:AddText("Choose an option")
        question2Select:Add(question2Option1)

        Option question2Option2
        question2Option2:AddAttribute("value","Default - Colorgorical")
        question2Option2:AddText("Default - Colorgorical")
        question2Select:Add(question2Option2)

        Option question2Option3
        question2Option3:AddAttribute("value","Calm")
        question2Option3:AddText("Calm")
        question2Select:Add(question2Option3)

        Option question2Option4
        question2Option4:AddAttribute("value","Disturbing")
        question2Option4:AddText("Disturbing")
        question2Select:Add(question2Option4)

        Option question2Option5
        question2Option5:AddAttribute("value","Exciting")
        question2Option5:AddText("Exciting")
        question2Select:Add(question2Option5)

        Option question2Option6
        question2Option6:AddAttribute("value","Magma")
        question2Option6:AddText("Magma")
        question2Select:Add(question2Option6)

        Option question2Option7
        question2Option7:AddAttribute("value","Playful")
        question2Option7:AddText("Playful")
        question2Select:Add(question2Option7)

        Option question2Option8
        question2Option8:AddAttribute("value","Serious")
        question2Option8:AddText("Serious")
        question2Select:Add(question2Option8)

        //Question 3
        Division question3
        question3:AddClassAttribute("mb-4")
        questionForm:Add(question3)

        Paragraph question3Paragraph
        question3Paragraph:SetIdentifier("q3-label")
        question3Paragraph:AddClassAttribute("text-lg font-semibold text-gray-700")
        question3Paragraph:AddText("3. What's your least favorite color palette?")
        question3:Add(question3Paragraph)

        Paragraph question3Validation
        question3Validation:SetIdentifier("q3-validation")
        question3Validation:AddAttribute("aria-live","polite")
        question3Validation:AddClassAttribute("text-sm mt-1")
        question3:Add(question3Validation)

        Select question3Select
        question3Select:SetIdentifier("q3")
        question3Select:AddAttribute("aria-labelledby","q3-label")
        question3Select:AddAttribute("aria-describedby","q3-validation")
        question3Select:AddClassAttribute("mt-1 block w-full border border-gray-300 rounded-md shadow-sm focus:ring focus:ring-blue-500 focus:border-blue-500 p-2 
                       data-[state=incorrect]:border-red-500 data-[state=incorrect]:focus:ring-red-500 data-[state=incorrect]:focus:border-red-500 
                       data-[state=correct]:border-green-500 data-[state=correct]:focus:ring-green-500 data-[state=correct]:focus:border-green-500")
        question3:Add(question3Select)

        Option question3Option1
        question3Option1:AddAttribute("value","")
        question3Option1:SetSelected(true)
        question3Option1:SetDisabled(true)
        question3Option1:AddText("Choose an option")
        question3Select:Add(question3Option1)

        Option question3Option2
        question3Option2:AddAttribute("value","Default - Colorgorical")
        question3Option2:AddText("Default - Colorgorical")
        question3Select:Add(question3Option2)

        Option question3Option3
        question3Option3:AddAttribute("value","Calm")
        question3Option3:AddText("Calm")
        question3Select:Add(question3Option3)

        Option question3Option4
        question3Option4:AddAttribute("value","Disturbing")
        question3Option4:AddText("Disturbing")
        question3Select:Add(question3Option4)

        Option question3Option5
        question3Option5:AddAttribute("value","Exciting")
        question3Option5:AddText("Exciting")
        question3Select:Add(question3Option5)

        Option question3Option6
        question3Option6:AddAttribute("value","Magma")
        question3Option6:AddText("Magma")
        question3Select:Add(question3Option6)

        Option question3Option7
        question3Option7:AddAttribute("value","Playful")
        question3Option7:AddText("Playful")
        question3Select:Add(question3Option7)

        Option question3Option8
        question3Option8:AddAttribute("value","Serious")
        question3Option8:AddText("Serious")
        question3Select:Add(question3Option8)
        
        Button questionFormButton
        questionFormButton:SetType("button")
        questionFormButton:SetOnClick("checkAnswers(true)")
        questionFormButton:AddClassAttribute("py-2 px-10 w-fit bg-quorum-blue-100 ml-4 font-bold captitalize rounded-2xl")
        questionFormButton:AddText("Check Answers")
        questionForm:Add(questionFormButton)

        Division resultsArea
        resultsArea:AddAttribute("role","region")
        resultsArea:AddAttribute("aria-live","polite")
        resultsArea:SetIdentifier("result")
        resultsArea:AddClassAttribute("mt-4 text-lg font-semibold")
        questionForm:Add(resultsArea)
        
        Script checkAnswersScript
        checkAnswersScript:AddText("
            
            document.addEventListener('DOMContentLoaded', function() {
                loadSavedAnswers(); // Load saved answers on page load
            });
    
            function saveAnswer(question, value) {
                localStorage.setItem(question, value);
            }
    
            function loadSavedAnswers() {
                // Load dropdown selection
                let savedAnswers = 0
                let savedQ1 = localStorage.getItem('l5q1');
                if (savedQ1) {
                    document.getElementById('q1').value = savedQ1;
                    savedAnswers++;
                }
    
                // Load dropdown selection
                let savedQ2 = localStorage.getItem('l5q2');
                if (savedQ2) {
                    document.getElementById('q2').value = savedQ2;
                    savedAnswers++;
                }
    
                // Load dropdown selection
                let savedQ3 = localStorage.getItem('l5q3');
                if (savedQ3) {
                    document.getElementById('q3').value = savedQ3;
                    savedAnswers++;
                }

                if (savedAnswers > 0)
                    checkAnswers(true);
            }

            // Attach event listeners to save selections
            document.getElementById('q1').addEventListener('change', function () {
                saveAnswer('l5q1', this.value);
                document.getElementById('q1').removeAttribute('data-state');
                document.getElementById('q1-validation').innerText = '';
                document.getElementById('q1-validation').classList.remove('text-green-600');
            });
            
            document.getElementById('q2').addEventListener('change', function () {
                saveAnswer('l5q2', this.value);
                document.getElementById('q2').removeAttribute('data-state');
                document.getElementById('q2-validation').innerText = '';
                document.getElementById('q2-validation').classList.remove('text-green-600');
            });
            
            document.getElementById('q3').addEventListener('change', function () {
                saveAnswer('l5q3', this.value);
                document.getElementById('q3').removeAttribute('data-state');
                document.getElementById('q3-validation').innerText = '';
                document.getElementById('q3-validation').classList.remove('text-green-600');
            });

            function checkAnswers(logging) {
                let score = 0;
                let totalQuestions = 3;
    
                // Correct answers
                const correctAnswers = {
                    q1: '',
                    q2: '',
                    q3: ''
                };
    
                // Reset state before checking answers
                document.querySelectorAll('select').forEach(select => {
                    select.removeAttribute('data-state');
                });
                document.getElementById('q1-validation').innerText = '';
                document.getElementById('q2-validation').innerText = '';
                document.getElementById('q3-validation').innerText = '';
                document.getElementById('q1-validation').classList.remove('text-green-600');
                document.getElementById('q2-validation').classList.remove('text-green-600');
                document.getElementById('q3-validation').classList.remove('text-green-600');
    
                // Question 1 validation (Dropdown)
                let q1_selected = document.querySelector('#q1').value;
                if (q1_selected) {
                    score++;
                    document.getElementById('q1').setAttribute('data-state', 'correct');
                    document.getElementById('q1-validation').innerText = 'Submitted';
                    document.getElementById('q1-validation').classList.add('text-green-600');
                }
    
                // Question 2 validation (Dropdown)
                let q2_selected = document.querySelector('#q2').value;
                if (q2_selected) {
                    score++;
                    document.getElementById('q2').setAttribute('data-state', 'correct');
                    document.getElementById('q2-validation').innerText = 'Submitted';
                    document.getElementById('q2-validation').classList.add('text-green-600');
                }
    
                // Question 3 validation (Dropdown)
                let q3_selected = document.querySelector('#q3').value;
                if (q3_selected) {
                    score++;
                    document.getElementById('q3').setAttribute('data-state', 'correct');
                    document.getElementById('q3-validation').innerText = 'Submitted';
                    document.getElementById('q3-validation').classList.add('text-green-600');
                }
    
                // Display score and feedback
                let resultDiv = document.getElementById('result');
                if (score === totalQuestions) {
                    resultDiv.innerHTML = `<p class='text-green-600'>Thanks for answering.</p>`;
                } else {
                    resultDiv.innerHTML = `<p class='text-red-600'>You've answered ${score} out of ${totalQuestions} questions. Feel free to provide more answers, but they are not required.</p>`;
                }

                //if logging
                //    log_event
            }
        ")
        questions:Add(checkAnswersScript)

        return questions
    end

//    action GetIDE() returns IDE
//        CodeForIDE code
//        code:AddFileUrl("Main.quorum", "html/hourofcode/datascience/datascience4.quorum")
//        IDE ide = AddIDE()
//        ide:SetLightTheme()
//        ide:SetCodeForIDE(code:GetJsonArray())
//        ide:SetIdeTitle("Type your code below...")
//        
//        return ide
//    end

    action GetLocation returns text
        return "hourofcode/datascience" + ACTIVITY + ".html"
    end

    action GetLinkName returns text
        return SUBTITLE
    end

    action GetSectionName returns text
        return "Data Science"
    end

    action GetName returns text
        return SUBTITLE
    end

    action GetShortDescription returns text
        return "how to customize the colors in the Chart."
    end
end
