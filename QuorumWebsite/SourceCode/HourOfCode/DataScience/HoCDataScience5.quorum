use Libraries.Web.Page.Division
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.Image
use Libraries.Web.Page.WebTable
use Libraries.Web.Page.TableBody
use Libraries.Containers.Array
use Libraries.Web.Page.TableHeader
use Libraries.Web.Page.Form
use Libraries.Web.Page.Label
use Libraries.Web.Page.Bold
use Libraries.Web.Page.Input
use Libraries.Web.Page.Span
use Libraries.Web.Page.Button
use Libraries.Web.Page.Script
use Libraries.Web.Page.OrderedList


class HoCDataScience5 is HourOfCodeDataScience
    integer ACTIVITY = 5
    text SUBTITLE = "Customizing the Colors"

    action Setup()
// set values for the block ide on this page
        SetPaletteFileName("quorum/palette/dataScience5.xml")
        SetCodeForBlocks("html/hourofcode/datascience/datascience5.quorum")
        Setup(ACTIVITY, SUBTITLE, GetIntro(), GetInstructions(), GetBlockIDE(), GetQuestions())
    end

    action GetIntro() returns Division
        text dq = ""
        dq = dq:GetDoubleQuote()
        Division intro
        Preformatter pre

        // tracking pixel for code.org
        //intro:AddImage("https://code.org/api/hour/begin_quorum_astronomy.png", "")
        intro:AddParagraph("")
        intro:AddParagraph("You can select many different columns and factors at the same time. This breaks our data down into more and more groups, which each have their own color assigned so that we can differentiate them in the Chart. 
The first column we select is plotted against each of the other selected columns, and those sets are separated into groups based on the selected factors. So if we select Columns bill_depth and bill_length, and then we select Factors species and island, 
we end up getting 5 total groups of data (Note: not all of the species live on each island). Each of these comparisons is called a Series and is listed in our Legend. The points for each Series have a unique color, that way you can compare the trends. 
In this case, the default colors used are Dark Blue, Light Blue, Green, Teal and Purple. If you don't like these colors, there are many color palettes to choose from.")
        intro:AddParagraph("")
        //CodeBlock cb1
        //cb1:AddText("output " + dq + "telescope" + dq + "")
        //intro:Add(pre:GeneratePreformattedCode(cb1))

        //intro:AddParagraph("in the online code window below and then select the green Run Program button below the editor on the right (second in the tab order).")

        WebTable table = AddWebTable("Sample of Penguins2.CSV file")
        TableBody tableBody = AddTableBody()
        
        Array<text> tableHeaderArray
        tableHeaderArray:Add("species") 
        tableHeaderArray:Add("island")
        tableHeaderArray:Add("bill_depth")
        tableHeaderArray:Add("bill_length") 
        tableHeaderArray:Add("flipper_length")

        TableHeader thead = AddTableHeaderRow(tableHeaderArray)
        table:Add(thead)  

        Array<text> penguinData1
        penguinData1:Add("Adelie")
        penguinData1:Add("Torgersen")
        penguinData1:Add("18.7") 
        penguinData1:Add("39.1") 
        penguinData1:Add("181")
        tableBody:Add(AddTableBodyRow(penguinData1))

        Array<text> penguinData2
        penguinData2:Add("Adelie")
        penguinData2:Add("Biscoe") 
        penguinData2:Add("18.3") 
        penguinData2:Add("37.8") 
        penguinData2:Add("174")
        tableBody:Add(AddTableBodyRow(penguinData2))

        Array<text> penguinData3
        penguinData3:Add("Adelie")
        penguinData3:Add("Dream") 
        penguinData3:Add("18.5") 
        penguinData3:Add("36.8") 
        penguinData3:Add("193")
        tableBody:Add(AddTableBodyRow(penguinData3))

        Array<text> penguinData4
        penguinData4:Add("Gentoo")
        penguinData4:Add("Biscoe") 
        penguinData4:Add("13.2") 
        penguinData4:Add("46.1") 
        penguinData4:Add("211")
        tableBody:Add(AddTableBodyRow(penguinData4))

        Array<text> penguinData5
        penguinData5:Add("Chinstrap")
        penguinData5:Add("Dream") 
        penguinData5:Add("17.9") 
        penguinData5:Add("46.5") 
        penguinData5:Add("192")
        tableBody:Add(AddTableBodyRow(penguinData5))
    
        table:Add(tableBody)
        intro:Add(table)

        return intro

    end

    action GetInstructions() returns Division
        Division instructions
        

        instructions:AddParagraph("")
        instructions:AddParagraph("In the code editor below, we have a program that makes a Chart with two Series. Take code blocks from the palette and place them below where we make the Chart object but before we Display it.")
        OrderedList instructionsList
        instructionsList:AddListItem("<b>Use the block(s) in the palette on the left.</b>")
        instructionsList:AddListItem("<b>Place the 'chart:SetColorPaletteToCalm()' block below the 'ScatterPlot chart = frame:ScatterPlot()' block in the block editor.</b>")
        instructionsList:AddListItem("<b>Run the program.</b>")
        instructionsList:AddListItem("<b>To try other color options: stop the program, delete the block you added to the block editor and place one of the other blocks from the palette in the same location.</b>")
        instructionsList:AddListItem("<b>Use the chart in the canvas to answer the questions in the <i>Activity</i> section.</b>")
        instructionsList:AddClassAttribute("list-decimal list-outside pl-8")
        instructions:Add(instructionsList)  
        instructions:AddParagraph("")

        return instructions
    end

    action GetQuestions() returns Division
        Division questions
        
        questions:AddParagraph("")
        questions:AddParagraph("Use the chart(s) you've created in the <i>Coding</i> section to answer a few questions.")
        questions:AddParagraph("")

        Form questionForm
        
        questionForm:SetClassAttribute("questionform")
        questionForm:SetIdentifier("questionform")
        //questionForm:AddAttribute("method", "post")
        //questionForm:SetOnSubmit("checkAnswers(); event.preventDefault();")

        questions:Add(questionForm)
        
        //FieldSet questionSet

        //questionForm:Add(questionSet)
        Division totalCorrect
        totalCorrect:AddAttribute("role","region")
        totalCorrect:AddAttribute("aria-live","polite")
        Span totalCorrectText
        totalCorrectText:SetIdentifier("totalCorrectText")
        totalCorrect:Add(totalCorrectText)
        questionForm:Add(totalCorrect)
        questionForm:AddText("<br>")

        //13.1 21.5 32.1 59.6
        Label question1
        Bold bold_question1
        bold_question1:AddText("1. Which color palette was easiest to distinguish the different groups?")
        question1:Add(bold_question1)
        question1:SetIdentifier("question1")
        question1:AddAttribute("for","input1")
        question1:SetClassAttribute("mx-2")
        
        Input input1
        input1:SetType("text")
        input1:SetClassAttribute("mx-2 p-2 rounded-md border border-neutral-grey-50 aria-[invalid='true']:border-attention-red-100")
        input1:SetIdentifier("input1")

        Division validationDiv1
        validationDiv1:AddAttribute("role","region")
        validationDiv1:AddAttribute("aria-live","polite")
        Span validation1
        validation1:SetIdentifier("validation1")
        validation1:SetClassAttribute("mx-2 text-sm text-red-500 hidden")
        validationDiv1:Add(validation1)

        questionForm:Add(question1)
        questionForm:AddText("<br>")
        questionForm:Add(input1)
        questionForm:AddText("<br>")
        questionForm:Add(validationDiv1)
        questionForm:AddText("<br>")
        
        Label question2
        Bold bold_question2
        bold_question2:AddText("2. What's your favorite color palette?")
        question2:Add(bold_question2)
        question2:SetIdentifier("question2")
        question2:AddAttribute("for","input2")
        question2:SetClassAttribute("mx-2")
        
        Input input2
        input2:SetType("text")
        input2:SetClassAttribute("mx-2 p-2 rounded-md border border-neutral-grey-50 aria-[invalid='true']:border-attention-red-100")
        input2:SetIdentifier("input2")

        Division validationDiv2
        validationDiv2:AddAttribute("role","region")
        validationDiv2:AddAttribute("aria-live","polite")
        Span validation2
        validation2:SetIdentifier("validation2")
        validation2:SetClassAttribute("mx-2 text-sm text-red-500 hidden")
        validationDiv2:Add(validation2)
       
        questionForm:Add(question2)
        questionForm:AddText("<br>")
        questionForm:Add(input2)
        questionForm:AddText("<br>")
        questionForm:Add(validationDiv2)
        questionForm:AddText("<br>")

        Label question3
        Bold bold_question3
        bold_question3:AddText("3. What's your least favorite color palette?")
        question3:Add(bold_question3)
        question3:SetIdentifier("question3")
        question3:AddAttribute("for","input3")
        question3:SetClassAttribute("mx-2")
        
        Input input3
        input3:SetType("text")
        input3:SetClassAttribute("mx-2 p-2 rounded-md border border-neutral-grey-50 aria-[invalid='true']:border-attention-red-100")
        input3:SetIdentifier("input3")

        Division validationDiv3
        validationDiv3:AddAttribute("role","region")
        validationDiv3:AddAttribute("aria-live","polite")
        Span validation3
        validation3:SetIdentifier("validation3")
        validation3:SetClassAttribute("mx-2 text-sm text-red-500 hidden")
        validationDiv3:Add(validation3)
       
        questionForm:Add(question3)
        questionForm:AddText("<br>")
        questionForm:Add(input3)
        questionForm:AddText("<br>")
        questionForm:Add(validationDiv3)
        questionForm:AddText("<br>")

        Button checkAnswers
        checkAnswers:SetType("button")
        checkAnswers:SetOnClick("checkAnswers();")
        checkAnswers:AddText("Submit Answers")
        //pulled these attributes from some other buttons on the site
        checkAnswers:AddClassAttribute("py-2 px-10 w-fit bg-quorum-blue-100 ml-4 font-bold captitalize rounded-2xl")
        //turning off post until the backend is setup, just do frontend validation

        questionForm:Add(checkAnswers)

        Script script
        text quote = ""
        quote = quote:GetDoubleQuote()
        script:SetCode("
        function checkAnswers() {
            var totalCorrect = 0;
            var totalQuestions = 3;

            var input = $('#input1');
            var validation = $('#validation1');
            if (input[0].value === undefined || input[0].value === '') {
                input.removeClass('border-neutral-grey-50 border-green-500')
                input.addClass('border-red-500');
                input.attr('aria-invalid','true');
                validation.removeClass('hidden text-green-500')
                validation.addClass('text-red-500 text-attention-red-100');
                validation.text('Please enter an answer.');
            }
            else {
                input.removeClass('border-neutral-grey-50 border-red-500');
                input.addClass('border-green-500');
                input.attr('aria-invalid','false');
                validation.removeClass('hidden text-red-500 text-attention-red-100')
                validation.addClass('text-green-500');
                validation.text('Correct.');
                totalCorrect++;
            }
//            else {
//                input.removeClass('border-neutral-grey-50 border-green-500')
//                input.addClass('border-red-500');
//                input.attr('aria-invalid','true');
//                validation.removeClass('hidden text-green-500')
//                validation.addClass('text-red-500 text-attention-red-100');
//                validation.text('Incorrect, please try again.');
//            }

            var input = $('#input2');
            var validation = $('#validation2');
            if (input[0].value === undefined || input[0].value === '') {
                input.removeClass('border-neutral-grey-50 border-green-500')
                input.addClass('border-red-500');
                input.attr('aria-invalid','true');
                validation.removeClass('hidden text-green-500')
                validation.addClass('text-red-500 text-attention-red-100');
                validation.text('Please enter an answer.');
            }
            else {
                input.removeClass('border-neutral-grey-50 border-red-500');
                input.addClass('border-green-500');
                input.attr('aria-invalid','false');
                validation.removeClass('hidden text-red-500 text-attention-red-100')
                validation.addClass('text-green-500');
                validation.text('Correct.');
                totalCorrect++;
            }
//            else {
//                input.removeClass('border-neutral-grey-50 border-green-500')
//                input.addClass('border-red-500');
//                input.attr('aria-invalid','true');
//                validation.removeClass('hidden text-green-500')
//                validation.addClass('text-red-500 text-attention-red-100');
//                validation.text('Incorrect, please try again.');
//            }

            var input = $('#input3');
            var validation = $('#validation3');
            if (input[0].value === undefined || input[0].value === '') {
                input.removeClass('border-neutral-grey-50 border-green-500')
                input.addClass('border-red-500');
                input.attr('aria-invalid','true');
                validation.removeClass('hidden text-green-500')
                validation.addClass('text-red-500 text-attention-red-100');
                validation.text('Please enter an answer.');
            }
            else {
                input.removeClass('border-neutral-grey-50 border-red-500');
                input.addClass('border-green-500');
                input.attr('aria-invalid','false');
                validation.removeClass('hidden text-red-500 text-attention-red-100')
                validation.addClass('text-green-500');
                validation.text('Correct.');
                totalCorrect++;
            }
//            else {
//                input.removeClass('border-neutral-grey-50 border-green-500')
//                input.addClass('border-red-500');
//                input.attr('aria-invalid','true');
//                validation.removeClass('hidden text-green-500')
//                validation.addClass('text-red-500 text-attention-red-100');
//                validation.text('Incorrect, please try again.');
//            }
                
            var totalCorrectText = $('#totalCorrectText');
            var message = totalCorrect + ' of ' + totalQuestions + ' correct.'
            totalCorrectText.text(message); 
            if (totalCorrect < totalQuestions) {
                totalCorrectText.removeClass('text-green-500');
                totalCorrectText.addClass('text-red-500 text-attention-red-100');
            }
            else {
                totalCorrectText.removeClass('text-red-500 text-attention-red-100');
                totalCorrectText.addClass('text-green-500');
            }    
        };
        ")

        questions:Add(script)
       

        return questions
    end

//    action GetIDE() returns IDE
//        CodeForIDE code
//        code:AddFileUrl("Main.quorum", "html/hourofcode/datascience/datascience4.quorum")
//        IDE ide = AddIDE()
//        ide:SetLightTheme()
//        ide:SetCodeForIDE(code:GetJsonArray())
//        ide:SetIdeTitle("Type your code below...")
//        
//        return ide
//    end

    action GetLocation returns text
        return "hourofcode/datascience" + ACTIVITY + ".html"
    end

    action GetLinkName returns text
        return SUBTITLE
    end

    action GetSectionName returns text
        return "Data Science"
    end

    action GetName returns text
        return SUBTITLE
    end

    action GetShortDescription returns text
        return "how to customize the colors in the Chart."
    end
end
