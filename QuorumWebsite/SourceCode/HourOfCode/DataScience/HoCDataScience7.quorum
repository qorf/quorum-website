use Libraries.Web.Page.Division
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.Image
use Libraries.Web.Page.WebTable
use Libraries.Web.Page.TableBody
use Libraries.Containers.Array
use Libraries.Web.Page.TableHeader
use Libraries.Web.Page.Form
use Libraries.Web.Page.Label
use Libraries.Web.Page.Bold
use Libraries.Web.Page.Input
use Libraries.Web.Page.Span
use Libraries.Web.Page.Button
use Libraries.Web.Page.Script
use Libraries.Web.Page.OrderedList
use Libraries.Web.Page.Link
use Libraries.Web.Page.FieldSet
use Libraries.Web.Page.Legend
use Libraries.Web.Page.Select
use Libraries.Web.Page.Option


class HoCDataScience7 is HourOfCodeDataScience
    integer ACTIVITY = 7
    text SUBTITLE = "Trying Other Charts"

    action Setup()
// set values for the block ide on this page
        SetPaletteFileName("palette/dataScience7.xml")
        SetCodeForBlocks("html/hourofcode/datascience/datascience7.quorum")
        Setup(ACTIVITY, SUBTITLE, GetIntro(), GetInstructions(), GetBlockIDE(), GetQuestions())
    end

    action GetIntro() returns Division
        text dq = ""
        dq = dq:GetDoubleQuote()
        Division intro
        Preformatter pre

        // tracking pixel for code.org
        //intro:AddImage("https://code.org/api/hour/begin_quorum_astronomy.png", "")
        intro:AddParagraph("")
        Paragraph p1
        p1:AddText("There are a lot of chart types that can help us to answer different questions. Instead of making a Scatter Plot, let's try making some other chart types from the same data. Try making a Bar Chart, Box Plot, 
Histogram and Pie Chart. Each of these charts will show the same data from our ")
        Link link1 = p1:AddLink("Penguins2.csv", "/data/Penguins2.csv")
        link1:AddClassAttribute("underline text-quorum-blue-150")
        p1:AddText(" but presents it in a different way.")
        intro:Add(p1)
        intro:AddParagraph("")
        
        WebTable table = AddWebTable("Sample of Penguins2.CSV file")
        TableBody tableBody = AddTableBody()
        
        Array<text> tableHeaderArray
        tableHeaderArray:Add("species") 
        tableHeaderArray:Add("island")
        tableHeaderArray:Add("bill_depth")
        tableHeaderArray:Add("bill_length") 
        tableHeaderArray:Add("flipper_length")

        TableHeader thead = AddTableHeaderRow(tableHeaderArray)
        table:Add(thead)  

        Array<text> penguinData1
        penguinData1:Add("Adelie")
        penguinData1:Add("Torgersen")
        penguinData1:Add("18.7") 
        penguinData1:Add("39.1") 
        penguinData1:Add("181")
        tableBody:Add(AddTableBodyRow(penguinData1))

        Array<text> penguinData2
        penguinData2:Add("Adelie")
        penguinData2:Add("Biscoe") 
        penguinData2:Add("18.3") 
        penguinData2:Add("37.8") 
        penguinData2:Add("174")
        tableBody:Add(AddTableBodyRow(penguinData2))

        Array<text> penguinData3
        penguinData3:Add("Adelie")
        penguinData3:Add("Dream") 
        penguinData3:Add("18.5") 
        penguinData3:Add("36.8") 
        penguinData3:Add("193")
        tableBody:Add(AddTableBodyRow(penguinData3))

        Array<text> penguinData4
        penguinData4:Add("Gentoo")
        penguinData4:Add("Biscoe") 
        penguinData4:Add("13.2") 
        penguinData4:Add("46.1") 
        penguinData4:Add("211")
        tableBody:Add(AddTableBodyRow(penguinData4))

        Array<text> penguinData5
        penguinData5:Add("Chinstrap")
        penguinData5:Add("Dream") 
        penguinData5:Add("17.9") 
        penguinData5:Add("46.5") 
        penguinData5:Add("192")
        tableBody:Add(AddTableBodyRow(penguinData5))
    
        table:Add(tableBody)
        intro:Add(table)

        return intro

    end

    action GetInstructions() returns Division
        text dq = ""
        dq = dq:GetDoubleQuote()
        Division instructions
        
        instructions:AddParagraph("")
        instructions:AddParagraph("In the code editor below, we have a similar program to the last lesson, except we've removed the code black that makes our chart a Scatter Plot. Add a code block from the palette below and place it above the other blocks that reference <i>chart</i>.")
        OrderedList instructionsList
        instructionsList:AddListItem("<b>Use the block(s) in the palette on the left.</b>")
        instructionsList:AddListItem("<b>Place the 'BarChart chart = frame:BarChart()' block below the 'frame:AddSelectedFactors(" + dq + "island" + dq + ")' block in the block editor.</b>")
        instructionsList:AddListItem("<b>Run the program.</b>")
        instructionsList:AddListItem("<b><i>Hint: You may need to try different Chart types to find the answers to the questions below.</i></b>")
        instructionsList:AddListItem("<b>Use the chart in the canvas to answer the questions in the <i>Activity</i> section.</b>")
        instructionsList:AddListItem("<b>To try other chart types: stop the program, delete the block you added to the block editor and place one of the other blocks from the palette in the same location.</b>")
        instructionsList:AddListItem("<b>Use the new chart in the canvas to answer the questions in the <i>Activity</i> section.</b>")
        instructionsList:AddClassAttribute("list-decimal list-outside pl-8")
        instructions:Add(instructionsList)  
        instructions:AddParagraph("")

        return instructions
    end

    action GetIDE() returns IDE
        CodeForIDE code
        code:AddFileUrl("Main.quorum", "html/hourofcode/datascience/datascience7.quorum")
        IDE ide = AddIDE()
        ide:SetLightTheme()
        ide:SetCodeForIDE(code:GetJsonArray())
        ide:SetIdeTitle("Type your code below...")
        
        return ide
    end

    action GetQuestions() returns Division
        Division questions

        AddStylesheet("/style/checkAnswers.css")
        

        questions:AddParagraph("")
        questions:AddParagraph("Use the chart(s) you've created in the <i>Coding</i> section to answer a few questions.")
        questions:AddParagraph("")
        
        Division hiddenStyling
        hiddenStyling:AddClassAttribute("hidden text-green-600 text-red-600 border-green-500 border-red-500")
        Paragraph hiddenParagraph
        hiddenParagraph:AddClassAttribute("hidden text-green-600 text-red-600")
        questions:Add(hiddenStyling)
        questions:Add(hiddenParagraph)

        Form questionForm
        questionForm:SetIdentifier("quiz-form")
        questions:Add(questionForm)
        
        
        Division question1
        question1:AddClassAttribute("mb-4")
        questionForm:Add(question1)

        Paragraph question1Paragraph
        question1Paragraph:SetIdentifier("q1-label")
        question1Paragraph:AddClassAttribute("text-lg font-semibold text-gray-700")
        question1Paragraph:AddText("1. Which island has the least combined bill length?")
        question1:Add(question1Paragraph)

        Paragraph question1Validation
        question1Validation:SetIdentifier("q1-validation")
        question1Validation:AddAttribute("aria-live","polite")
        question1Validation:AddClassAttribute("text-sm mt-1")
        question1:Add(question1Validation)

        Select question1Select
        question1Select:SetIdentifier("q1")
        question1Select:AddAttribute("aria-labelledby","q1-label")
        question1Select:AddAttribute("aria-describedby","q1-validation")
        question1Select:AddClassAttribute("mt-1 block w-full border border-gray-300 rounded-md shadow-sm focus:ring focus:ring-blue-500 focus:border-blue-500 p-2 
                       data-[state=incorrect]:border-red-500 data-[state=incorrect]:focus:ring-red-500 data-[state=incorrect]:focus:border-red-500 
                       data-[state=correct]:border-green-500 data-[state=correct]:focus:ring-green-500 data-[state=correct]:focus:border-green-500")
        question1:Add(question1Select)

        Option question1Option1
        question1Option1:AddAttribute("value","")
        question1Option1:SetSelected(true)
        question1Option1:SetDisabled(true)
        question1Option1:AddText("Choose an option")
        question1Select:Add(question1Option1)

        Option question1Option2
        question1Option2:AddAttribute("value","Biscoe")
        question1Option2:AddText("Biscoe")
        question1Select:Add(question1Option2)

        Option question1Option3
        question1Option3:AddAttribute("value","Dream")
        question1Option3:AddText("Dream")
        question1Select:Add(question1Option3)

        Option question1Option4
        question1Option4:AddAttribute("value","Torgersen")
        question1Option4:AddText("Torgersen")
        question1Select:Add(question1Option4)



        //Question 2
        Division question2
        question2:AddClassAttribute("mb-4")
        questionForm:Add(question2)

        Paragraph question2Paragraph
        question2Paragraph:SetIdentifier("q2-label")
        question2Paragraph:AddClassAttribute("text-lg font-semibold text-gray-700")
        question2Paragraph:AddText("2. Which island has largest range of bill length values?")
        question2:Add(question2Paragraph)

        Paragraph question2Validation
        question2Validation:SetIdentifier("q2-validation")
        question2Validation:AddAttribute("aria-live","polite")
        question2Validation:AddClassAttribute("text-sm mt-1")
        question2:Add(question2Validation)

        Select question2Select
        question2Select:SetIdentifier("q2")
        question2Select:AddAttribute("aria-labelledby","q2-label")
        question2Select:AddAttribute("aria-describedby","q2-validation")
        question2Select:AddClassAttribute("mt-1 block w-full border border-gray-300 rounded-md shadow-sm focus:ring focus:ring-blue-500 focus:border-blue-500 p-2 
                       data-[state=incorrect]:border-red-500 data-[state=incorrect]:focus:ring-red-500 data-[state=incorrect]:focus:border-red-500 
                       data-[state=correct]:border-green-500 data-[state=correct]:focus:ring-green-500 data-[state=correct]:focus:border-green-500")
        question2:Add(question2Select)

        Option question2Option1
        question2Option1:AddAttribute("value","")
        question2Option1:SetSelected(true)
        question2Option1:SetDisabled(true)
        question2Option1:AddText("Choose an option")
        question2Select:Add(question2Option1)

        Option question2Option2
        question2Option2:AddAttribute("value","Biscoe")
        question2Option2:AddText("Biscoe")
        question2Select:Add(question2Option2)

        Option question2Option3
        question2Option3:AddAttribute("value","Dream")
        question2Option3:AddText("Dream")
        question2Select:Add(question2Option3)

        Option question2Option4
        question2Option4:AddAttribute("value","Torgersen")
        question2Option4:AddText("Torgersen")
        question2Select:Add(question2Option4)


        //Question 3
        Division question3
        question3:AddClassAttribute("mb-4")
        questionForm:Add(question3)

        Paragraph question3Paragraph
        question3Paragraph:SetIdentifier("q3-label")
        question3Paragraph:AddClassAttribute("text-lg font-semibold text-gray-700")
        question3Paragraph:AddText("3. Which bin has the highest frequency for the Torgersen Bill Length subchart?")
        question3:Add(question3Paragraph)

        Paragraph question3Validation
        question3Validation:SetIdentifier("q3-validation")
        question3Validation:AddAttribute("aria-live","polite")
        question3Validation:AddClassAttribute("text-sm mt-1")
        question3:Add(question3Validation)

        Select question3Select
        question3Select:SetIdentifier("q3")
        question3Select:AddAttribute("aria-labelledby","q3-label")
        question3Select:AddAttribute("aria-describedby","q3-validation")
        question3Select:AddClassAttribute("mt-1 block w-full border border-gray-300 rounded-md shadow-sm focus:ring focus:ring-blue-500 focus:border-blue-500 p-2 
                       data-[state=incorrect]:border-red-500 data-[state=incorrect]:focus:ring-red-500 data-[state=incorrect]:focus:border-red-500 
                       data-[state=correct]:border-green-500 data-[state=correct]:focus:ring-green-500 data-[state=correct]:focus:border-green-500")
        question3:Add(question3Select)

        Option question3Option1
        question3Option1:AddAttribute("value","")
        question3Option1:SetSelected(true)
        question3Option1:SetDisabled(true)
        question3Option1:AddText("Choose an option")
        question3Select:Add(question3Option1)

        Option question3Option2
        question3Option2:AddAttribute("value","0 to 20")
        question3Option2:AddText("0 to 20")
        question3Select:Add(question3Option2)

        Option question3Option3
        question3Option3:AddAttribute("value","20 to 40")
        question3Option3:AddText("20 to 40")
        question3Select:Add(question3Option3)

        Option question3Option4
        question3Option4:AddAttribute("value","40 to 60")
        question3Option4:AddText("40 to 60")
        question3Select:Add(question3Option4)



        //Question 4
        Division question4
        question4:AddClassAttribute("mb-4")
        questionForm:Add(question4)

        Paragraph question4Paragraph
        question4Paragraph:SetIdentifier("q4-label")
        question4Paragraph:AddClassAttribute("text-lg font-semibold text-gray-700")
        question4Paragraph:AddText("4. What percentage of the data was from Dream island?")
        question4:Add(question4Paragraph)

        Paragraph question4Validation
        question4Validation:SetIdentifier("q4-validation")
        question4Validation:AddAttribute("aria-live","polite")
        question4Validation:AddClassAttribute("text-sm mt-1")
        question4:Add(question4Validation)

        Select question4Select
        question4Select:SetIdentifier("q4")
        question4Select:AddAttribute("aria-labelledby","q4-label")
        question4Select:AddAttribute("aria-describedby","q4-validation")
        question4Select:AddClassAttribute("mt-1 block w-full border border-gray-300 rounded-md shadow-sm focus:ring focus:ring-blue-500 focus:border-blue-500 p-2 
                       data-[state=incorrect]:border-red-500 data-[state=incorrect]:focus:ring-red-500 data-[state=incorrect]:focus:border-red-500 
                       data-[state=correct]:border-green-500 data-[state=correct]:focus:ring-green-500 data-[state=correct]:focus:border-green-500")
        question4:Add(question4Select)

        Option question4Option1
        question4Option1:AddAttribute("value","")
        question4Option1:SetSelected(true)
        question4Option1:SetDisabled(true)
        question4Option1:AddText("Choose an option")
        question4Select:Add(question4Option1)

        Option question4Option2
        question4Option2:AddAttribute("value","Biscoe")
        question4Option2:AddText("Biscoe")
        question4Select:Add(question4Option2)

        Option question4Option3
        question4Option3:AddAttribute("value","Dream")
        question4Option3:AddText("Dream")
        question4Select:Add(question4Option3)

        Option question4Option4
        question4Option4:AddAttribute("value","Torgersen")
        question4Option4:AddText("Torgersen")
        question4Select:Add(question4Option4)
        
        Button questionFormButton
        questionFormButton:SetType("button")
        questionFormButton:SetOnClick("checkAnswers(true)")
        questionFormButton:AddClassAttribute("py-2 px-10 w-fit bg-quorum-blue-100 ml-4 font-bold captitalize rounded-2xl")
        questionFormButton:AddText("Check Answers")
        questionForm:Add(questionFormButton)

        Division resultsArea
        resultsArea:AddAttribute("role","region")
        resultsArea:AddAttribute("aria-live","polite")
        resultsArea:SetIdentifier("result")
        resultsArea:AddClassAttribute("mt-4 text-lg font-semibold")
        questionForm:Add(resultsArea)
        
        Script checkAnswersScript
        checkAnswersScript:AddText("
            
            document.addEventListener('DOMContentLoaded', function() {
                loadSavedAnswers(); // Load saved answers on page load
            });
    
            function saveAnswer(question, value) {
                localStorage.setItem(question, value);
            }
    
            function loadSavedAnswers() {
                // Load dropdown selection
                let savedAnswers = 0
                let savedQ1 = localStorage.getItem('l7q1');
                if (savedQ1) {
                    document.getElementById('q1').value = savedQ1;
                    savedAnswers++;
                }
    
                // Load dropdown selection
                let savedQ2 = localStorage.getItem('l7q2');
                if (savedQ2) {
                    document.getElementById('q2').value = savedQ2;
                    savedAnswers++;
                }
    
                // Load dropdown selection
                let savedQ3 = localStorage.getItem('l7q3');
                if (savedQ3) {
                    document.getElementById('q3').value = savedQ3;
                    savedAnswers++;
                }
    
                // Load dropdown selection
                let savedQ4 = localStorage.getItem('l7q4');
                if (savedQ4) {
                    document.getElementById('q4').value = savedQ4;
                    savedAnswers++;
                }
                if (savedAnswers > 0)
                    checkAnswers(true);
            }

            // Attach event listeners to save selections
            document.getElementById('q1').addEventListener('change', function () {
                saveAnswer('l7q1', this.value);
                document.getElementById('q1').removeAttribute('data-state');
                document.getElementById('q1').removeAttribute('aria-invalid');
                document.getElementById('q1-validation').innerText = '';
                document.getElementById('q1-validation').classList.remove('text-green-600', 'text-red-600');
            });
            
            document.getElementById('q2').addEventListener('change', function () {
                saveAnswer('l7q2', this.value);
                document.getElementById('q2').removeAttribute('data-state');
                document.getElementById('q2').removeAttribute('aria-invalid');
                document.getElementById('q2-validation').innerText = '';
                document.getElementById('q2-validation').classList.remove('text-green-600', 'text-red-600');
            });
            
            document.getElementById('q3').addEventListener('change', function () {
                saveAnswer('l7q3', this.value);
                document.getElementById('q3').removeAttribute('data-state');
                document.getElementById('q3').removeAttribute('aria-invalid');
                document.getElementById('q3-validation').innerText = '';
                document.getElementById('q3-validation').classList.remove('text-green-600', 'text-red-600');
            });
            
            document.getElementById('q4').addEventListener('change', function () {
                saveAnswer('l7q4', this.value);
                document.getElementById('q4').removeAttribute('data-state');
                document.getElementById('q4').removeAttribute('aria-invalid');
                document.getElementById('q4-validation').innerText = '';
                document.getElementById('q4-validation').classList.remove('text-green-600', 'text-red-600');
            });

            function checkAnswers(logging) {
                let score = 0;
                let totalQuestions = 4;
    
                // Correct answers
                const correctAnswers = {
                    q1: 'Torgersen',
                    q2: 'Biscoe',
                    q3: '40 to 60',
                    q4: 'Biscoe'
                };
    
                // Reset state before checking answers
                document.querySelectorAll('select').forEach(select => {
                    select.removeAttribute('data-state');
                    select.removeAttribute('aria-invalid');
                });
                document.getElementById('q1-validation').innerText = '';
                document.getElementById('q2-validation').innerText = '';
                document.getElementById('q3-validation').innerText = '';
                document.getElementById('q4-validation').innerText = '';
                document.getElementById('q1-validation').classList.remove('text-green-600', 'text-red-600');
                document.getElementById('q2-validation').classList.remove('text-green-600', 'text-red-600');
                document.getElementById('q3-validation').classList.remove('text-green-600', 'text-red-600');
                document.getElementById('q4-validation').classList.remove('text-green-600', 'text-red-600');
    
                // Question 1 validation (Dropdown)
                let q1_selected = document.querySelector('#q1').value;
                if (q1_selected) {
                    if (q1_selected === correctAnswers.q1) {
                        score++;
                        document.getElementById('q1').setAttribute('data-state', 'correct');
                        document.getElementById('q1-validation').innerText = 'Correct';
                        document.getElementById('q1-validation').classList.add('text-green-600');
                    } else {
                        document.getElementById('q1').setAttribute('data-state', 'incorrect');
                        document.getElementById('q1').setAttribute('aria-invalid','true');
                        document.getElementById('q1-validation').innerText = 'Incorrect';
                        document.getElementById('q1-validation').classList.add('text-red-600');
                    }
                }
    
                // Question 2 validation (Dropdown)
                let q2_selected = document.querySelector('#q2').value;
                if (q2_selected) {
                    if (q2_selected === correctAnswers.q2) {
                        score++;
                        document.getElementById('q2').setAttribute('data-state', 'correct');
                        document.getElementById('q2-validation').innerText = 'Correct';
                        document.getElementById('q2-validation').classList.add('text-green-600');
                    } else {
                        document.getElementById('q2').setAttribute('data-state', 'incorrect');
                        document.getElementById('q2').setAttribute('aria-invalid','true');
                        document.getElementById('q2-validation').innerText = 'Incorrect';
                        document.getElementById('q2-validation').classList.add('text-red-600');
                    }
                }
    
                // Question 3 validation (Dropdown)
                let q3_selected = document.querySelector('#q3').value;
                if (q3_selected) {
                    if (q3_selected === correctAnswers.q3) {
                        score++;
                        document.getElementById('q3').setAttribute('data-state', 'correct');
                        document.getElementById('q3-validation').innerText = 'Correct';
                        document.getElementById('q3-validation').classList.add('text-green-600');
                    } else {
                        document.getElementById('q3').setAttribute('data-state', 'incorrect');
                        document.getElementById('q3').setAttribute('aria-invalid','true');
                        document.getElementById('q3-validation').innerText = 'Incorrect';
                        document.getElementById('q3-validation').classList.add('text-red-600');
                    }
                }
    
                // Question 4 validation (Dropdown)
                let q4_selected = document.querySelector('#q4').value;
                if (q4_selected) {
                    if (q4_selected === correctAnswers.q4) {
                        score++;
                        document.getElementById('q4').setAttribute('data-state', 'correct');
                        document.getElementById('q4-validation').innerText = 'Correct';
                        document.getElementById('q4-validation').classList.add('text-green-600');
                    } else {
                        document.getElementById('q4').setAttribute('data-state', 'incorrect');
                        document.getElementById('q4').setAttribute('aria-invalid','true');
                        document.getElementById('q4-validation').innerText = 'Incorrect';
                        document.getElementById('q4-validation').classList.add('text-red-600');
                    }
                }
    
                // Display score and feedback
                let resultDiv = document.getElementById('result');
                if (score === totalQuestions) {
                    resultDiv.innerHTML = `<p class='text-green-600'>You got everything correct.</p>`;
                } else {
                    resultDiv.innerHTML = `<p class='text-red-600'>You got ${score} out of ${totalQuestions} correct. Please try again!</p>`;
                }
            }
        ")
        questions:Add(checkAnswersScript)

        return questions
    end

    action GetLocation returns text
        return "hourofcode/datascience" + ACTIVITY + ".html"
    end

    action GetLinkName returns text
        return  SUBTITLE
    end

    action GetSectionName returns text
        return "Data Science"
    end

    action GetName returns text
        return SUBTITLE
    end

    action GetShortDescription returns text
        return "how to look at data with different Chart types."
    end
end
