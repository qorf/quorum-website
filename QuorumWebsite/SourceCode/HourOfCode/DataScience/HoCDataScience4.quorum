use Libraries.Web.Page.Division
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.Image
use Libraries.Web.Page.WebTable
use Libraries.Web.Page.TableBody
use Libraries.Containers.Array
use Libraries.Web.Page.TableHeader
use Libraries.Web.Page.Form
use Libraries.Web.Page.Label
use Libraries.Web.Page.Bold
use Libraries.Web.Page.Input
use Libraries.Web.Page.Span
use Libraries.Web.Page.Button
use Libraries.Web.Page.Script
use Libraries.Web.Page.OrderedList
use Libraries.Web.Page.Link


class HoCDataScience4 is HourOfCodeDataScience
    integer ACTIVITY = 4
    text SUBTITLE = "Selecting a Factor"

    action Setup()
// set values for the block ide on this page
        SetPaletteFileName("quorum/palette/dataScience4.xml")
        SetCodeForBlocks("html/hourofcode/datascience/datascience4.quorum")
        Setup(ACTIVITY, SUBTITLE, GetIntro(), GetInstructions(), GetBlockIDE(), GetQuestions())
    end

    action GetIntro() returns Division
        text dq = ""
        dq = dq:GetDoubleQuote()
        Division intro
        Preformatter pre

        // tracking pixel for code.org
        //intro:AddImage("https://code.org/api/hour/begin_quorum_astronomy.png", "")
        intro:AddParagraph("")
        Paragraph p1
        p1:AddText("You may have noticed in our ")
        Link link1 = p1:AddLink("Penguins2.csv", "/data/Penguins2.csv")
        link1:AddClassAttribute("underline text-quorum-blue-150")
        p1:AddText(" dataset, some of the columns have values that are numbers (bill_length, bill_depth, flipper_length) and some have values that are text 
(species, island). Let's say we wanted to look at the relationship between bill_depth and bill_length, like we did in Activity 1, but we also want to break that data down into smaller groups based a Factor like species.
 This would show us three comparisons of bill_depth versus bill_length for the Adelie, Gentoo and Chinstrap penguins.")
        intro:Add(p1)
        intro:AddParagraph("")
        //CodeBlock cb1
        //cb1:AddText("output " + dq + "telescope" + dq + "")
        //intro:Add(pre:GeneratePreformattedCode(cb1))

        WebTable table = AddWebTable("Sample of Penguins2.CSV file")
        TableBody tableBody = AddTableBody()
        
        Array<text> tableHeaderArray
        tableHeaderArray:Add("species") 
        tableHeaderArray:Add("island")
        tableHeaderArray:Add("bill_depth")
        tableHeaderArray:Add("bill_length") 
        tableHeaderArray:Add("flipper_length")

        TableHeader thead = AddTableHeaderRow(tableHeaderArray)
        table:Add(thead)  

        Array<text> penguinData1
        penguinData1:Add("Adelie")
        penguinData1:Add("Torgersen")
        penguinData1:Add("18.7") 
        penguinData1:Add("39.1") 
        penguinData1:Add("181")
        tableBody:Add(AddTableBodyRow(penguinData1))

        Array<text> penguinData2
        penguinData2:Add("Adelie")
        penguinData2:Add("Biscoe") 
        penguinData2:Add("18.3") 
        penguinData2:Add("37.8") 
        penguinData2:Add("174")
        tableBody:Add(AddTableBodyRow(penguinData2))

        Array<text> penguinData3
        penguinData3:Add("Adelie")
        penguinData3:Add("Dream") 
        penguinData3:Add("18.5") 
        penguinData3:Add("36.8") 
        penguinData3:Add("193")
        tableBody:Add(AddTableBodyRow(penguinData3))

        Array<text> penguinData4
        penguinData4:Add("Gentoo")
        penguinData4:Add("Biscoe") 
        penguinData4:Add("13.2") 
        penguinData4:Add("46.1") 
        penguinData4:Add("211")
        tableBody:Add(AddTableBodyRow(penguinData4))

        Array<text> penguinData5
        penguinData5:Add("Chinstrap")
        penguinData5:Add("Dream") 
        penguinData5:Add("17.9") 
        penguinData5:Add("46.5") 
        penguinData5:Add("192")
        tableBody:Add(AddTableBodyRow(penguinData5))
    
        table:Add(tableBody)
        intro:Add(table)

        return intro

    end

    action GetInstructions() returns Division
        text dq = ""
        dq = dq:GetDoubleQuote()
        Division instructions
        
        instructions:AddParagraph("")
        instructions:AddParagraph("In the code editor below, we have a program that makes a Chart looking at Bill Depth vs Bill Length. Take code blocks from the palette and place them below where we Load the .csv, but before we make the Chart object.")
        OrderedList instructionsList
        instructionsList:AddListItem("<b>Use the block(s) in the palette on the left.</b>")
        instructionsList:AddListItem("<b>Place the 'frame:AddSelectedFactors(" + dq + "species" + dq +")' block below the 'frame:Load(" + dq + "data/Penguins2.csv" + dq + ")' block in the block editor.</b>")
        instructionsList:AddListItem("<b>Run the program.</b>")
        instructionsList:AddListItem("<b>Use the chart in the canvas to answer the questions in the <i>Activity</i> section.</b>")
        instructionsList:AddClassAttribute("list-decimal list-outside pl-8")
        instructions:Add(instructionsList)  
        instructions:AddParagraph("")

        return instructions
    end

    action GetQuestions() returns Division
        Division questions
        
        questions:AddParagraph("")
        questions:AddParagraph("Use the chart(s) you've created in the <i>Coding</i> section to answer a few questions.")
        questions:AddParagraph("")

        Form questionForm
        
        questionForm:SetClassAttribute("questionform")
        questionForm:SetIdentifier("questionform")
        //questionForm:AddAttribute("method", "post")
        //questionForm:SetOnSubmit("checkAnswers(); event.preventDefault();")

        questions:Add(questionForm)
        
        //FieldSet questionSet

        //questionForm:Add(questionSet)
        Division totalCorrect
        totalCorrect:AddAttribute("role","region")
        totalCorrect:AddAttribute("aria-live","polite")
        Span totalCorrectText
        totalCorrectText:SetIdentifier("totalCorrectText")
        totalCorrect:Add(totalCorrectText)
        questionForm:Add(totalCorrect)
        questionForm:AddText("<br>")

        //13.1 21.5 32.1 59.6
        Label question1
        Bold bold_question1
        bold_question1:AddText("1. What's the largest bill length for the Adelie group?")
        question1:Add(bold_question1)
        question1:SetIdentifier("question1")
        question1:AddAttribute("for","input1")
        question1:SetClassAttribute("mx-2")
        
        Input input1
        input1:SetType("number")
        input1:SetClassAttribute("mx-2 p-2 rounded-md border border-neutral-grey-50 aria-[invalid='true']:border-attention-red-100")
        input1:SetIdentifier("input1")

        Division validationDiv1
        validationDiv1:AddAttribute("role","region")
        validationDiv1:AddAttribute("aria-live","polite")
        Span validation1
        validation1:SetIdentifier("validation1")
        validation1:SetClassAttribute("mx-2 text-sm text-red-500 hidden")
        validationDiv1:Add(validation1)

        questionForm:Add(question1)
        questionForm:AddText("<br>")
        questionForm:Add(input1)
        questionForm:AddText("<br>")
        questionForm:Add(validationDiv1)
        questionForm:AddText("<br>")
        
        Label question2
        Bold bold_question2
        bold_question2:AddText("2. What's the smallest bill length for the Chinstrap group?")
        question2:Add(bold_question2)
        question2:SetIdentifier("question2")
        question2:AddAttribute("for","input2")
        question2:SetClassAttribute("mx-2")
        
        Input input2
        input2:SetType("number")
        input2:SetClassAttribute("mx-2 p-2 rounded-md border border-neutral-grey-50 aria-[invalid='true']:border-attention-red-100")
        input2:SetIdentifier("input2")

        Division validationDiv2
        validationDiv2:AddAttribute("role","region")
        validationDiv2:AddAttribute("aria-live","polite")
        Span validation2
        validation2:SetIdentifier("validation2")
        validation2:SetClassAttribute("mx-2 text-sm text-red-500 hidden")
        validationDiv2:Add(validation2)
       
        questionForm:Add(question2)
        questionForm:AddText("<br>")
        questionForm:Add(input2)
        questionForm:AddText("<br>")
        questionForm:Add(validationDiv2)
        questionForm:AddText("<br>")

        Label question3
        Bold bold_question3
        bold_question3:AddText("3. What's the largest bill depth for the Gentoo group?")
        question3:Add(bold_question3)
        question3:SetIdentifier("question3")
        question3:AddAttribute("for","input3")
        question3:SetClassAttribute("mx-2")
        
        Input input3
        input3:SetType("number")
        input3:SetClassAttribute("mx-2 p-2 rounded-md border border-neutral-grey-50 aria-[invalid='true']:border-attention-red-100")
        input3:SetIdentifier("input3")

        Division validationDiv3
        validationDiv3:AddAttribute("role","region")
        validationDiv3:AddAttribute("aria-live","polite")
        Span validation3
        validation3:SetIdentifier("validation3")
        validation3:SetClassAttribute("mx-2 text-sm text-red-500 hidden")
        validationDiv3:Add(validation3)
       
        questionForm:Add(question3)
        questionForm:AddText("<br>")
        questionForm:Add(input3)
        questionForm:AddText("<br>")
        questionForm:Add(validationDiv3)
        questionForm:AddText("<br>")

        Button checkAnswers
        checkAnswers:SetType("button")
        checkAnswers:SetOnClick("checkAnswers();")
        checkAnswers:AddText("Submit Answers")
        //pulled these attributes from some other buttons on the site
        checkAnswers:AddClassAttribute("py-2 px-10 w-fit bg-quorum-blue-100 ml-4 font-bold captitalize rounded-2xl")
        //turning off post until the backend is setup, just do frontend validation

        questionForm:Add(checkAnswers)

        Script script
        text quote = ""
        quote = quote:GetDoubleQuote()
        script:SetCode("
        function checkAnswers() {
            var totalCorrect = 0;
            var totalQuestions = 3;

            var input = $('#input1');
            var validation = $('#validation1');
            if (input[0].value === undefined || input[0].value === '') {
                input.removeClass('border-neutral-grey-50 border-green-500')
                input.addClass('border-red-500');
                input.attr('aria-invalid','true');
                validation.removeClass('hidden text-green-500')
                validation.addClass('text-red-500 text-attention-red-100');
                validation.text('Please enter an answer.');
            }
            else if (input[0].value >= 45 && input[0].value <= 47) {
                input.removeClass('border-neutral-grey-50 border-red-500');
                input.addClass('border-green-500');
                input.attr('aria-invalid','false');
                validation.removeClass('hidden text-red-500 text-attention-red-100')
                validation.addClass('text-green-500');
                validation.text('Correct.');
                totalCorrect++;
            }
            else {
                input.removeClass('border-neutral-grey-50 border-green-500')
                input.addClass('border-red-500');
                input.attr('aria-invalid','true');
                validation.removeClass('hidden text-green-500')
                validation.addClass('text-red-500 text-attention-red-100');
                validation.text('Incorrect, please try again.');
            }

            var input = $('#input2');
            var validation = $('#validation2');
            if (input[0].value === undefined || input[0].value === '') {
                input.removeClass('border-neutral-grey-50 border-green-500')
                input.addClass('border-red-500');
                input.attr('aria-invalid','true');
                validation.removeClass('hidden text-green-500')
                validation.addClass('text-red-500 text-attention-red-100');
                validation.text('Please enter an answer.');
            }
            else if (input[0].value >= 40 && input[0].value <= 42) {
                input.removeClass('border-neutral-grey-50 border-red-500');
                input.addClass('border-green-500');
                input.attr('aria-invalid','false');
                validation.removeClass('hidden text-red-500 text-attention-red-100')
                validation.addClass('text-green-500');
                validation.text('Correct.');
                totalCorrect++;
            }
            else {
                input.removeClass('border-neutral-grey-50 border-green-500')
                input.addClass('border-red-500');
                input.attr('aria-invalid','true');
                validation.removeClass('hidden text-green-500')
                validation.addClass('text-red-500 text-attention-red-100');
                validation.text('Incorrect, please try again.');
            }

            var input = $('#input3');
            var validation = $('#validation3');
            if (input[0].value === undefined || input[0].value === '') {
                input.removeClass('border-neutral-grey-50 border-green-500')
                input.addClass('border-red-500');
                input.attr('aria-invalid','true');
                validation.removeClass('hidden text-green-500')
                validation.addClass('text-red-500 text-attention-red-100');
                validation.text('Please enter an answer.');
            }
            else if (input[0].value >= 17 && input[0].value <= 18) {
                input.removeClass('border-neutral-grey-50 border-red-500');
                input.addClass('border-green-500');
                input.attr('aria-invalid','false');
                validation.removeClass('hidden text-red-500 text-attention-red-100')
                validation.addClass('text-green-500');
                validation.text('Correct.');
                totalCorrect++;
            }
            else {
                input.removeClass('border-neutral-grey-50 border-green-500')
                input.addClass('border-red-500');
                input.attr('aria-invalid','true');
                validation.removeClass('hidden text-green-500')
                validation.addClass('text-red-500 text-attention-red-100');
                validation.text('Incorrect, please try again.');
            }
              
              
            var totalCorrectText = $('#totalCorrectText');
            var message = totalCorrect + ' of ' + totalQuestions + ' correct.'
            totalCorrectText.text(message); 
            if (totalCorrect < totalQuestions) {
                totalCorrectText.removeClass('text-green-500');
                totalCorrectText.addClass('text-red-500 text-attention-red-100');
            }
            else {
                totalCorrectText.removeClass('text-red-500 text-attention-red-100');
                totalCorrectText.addClass('text-green-500');
            }    
        };
        ")

        questions:Add(script)
       

        return questions
    end

//    action GetIDE() returns IDE
//        CodeForIDE code
//        code:AddFileUrl("Main.quorum", "html/hourofcode/datascience/datascience5.quorum")
//        IDE ide = AddIDE()
//        ide:SetLightTheme()
//        ide:SetCodeForIDE(code:GetJsonArray())
//        ide:SetIdeTitle("Type your code below...")
//        
//        return ide
//    end

    action GetLocation returns text
        return "hourofcode/datascience" + ACTIVITY + ".html"
    end

    action GetLinkName returns text
        return SUBTITLE
    end

    action GetSectionName returns text
        return "Data Science"
    end

    action GetName returns text
        return SUBTITLE
    end

    action GetShortDescription returns text
        return "how to split our data into groups based on Factors."
    end
end
