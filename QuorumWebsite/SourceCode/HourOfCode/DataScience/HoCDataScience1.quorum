use Libraries.Web.Page.Division
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.Image
use Libraries.Web.Page.WebTable
use Libraries.Web.Page.TableBody
use Libraries.Containers.Array
use Libraries.Web.Page.TableHeader
use Libraries.Web.Page.Form
use Libraries.Web.Page.FieldSet
use Libraries.Web.Page.Label
use Libraries.Web.Page.Input
use Libraries.Web.Page.Button
use Libraries.Web.Page.Bold
use Libraries.Web.Page.Script
use Libraries.Web.Page.Span
use Libraries.Web.Page.Style
use Libraries.Web.Page.Link
use Libraries.Web.Page.OrderedList


class HoCDataScience1 is HourOfCodeDataScience
    integer ACTIVITY = 1
    text SUBTITLE = "Displaying a Chart"
    action Setup()
        
// set values for the block ide on this page
        SetPaletteFileName("quorum/palette/dataScience1.xml")
        SetCodeForBlocks("html/hourofcode/datascience/datascience1.quorum")
        Setup(ACTIVITY, SUBTITLE, GetIntro(), GetInstructions(), GetBlockIDE(), GetQuestions())
    end

    action GetIntro() returns Division
        text dq = ""
        dq = dq:GetDoubleQuote()
        Division intro
        Preformatter pre

        // tracking pixel for code.org
        Image image = intro:AddImage("https://code.org/api/hour/begin_quorum_penguin.png", "Tracking Pixel for Code.org")
        image:SetStyle("width: 1px; height: 1px;")
        
        intro:AddParagraph("")
        Paragraph p1
        p1:AddText("Welcome to our Data Science Hour of Code. Today, we are going to use charts to explore data and answer some questions. A dataset is typically a large set of numbers or values. Often, these would be presented in a 
table or spreadsheet. For example, below we have a few sample rows and columns from a file called ")
        Link link1 = p1:AddLink("Penguins1.csv.", "/data/Penguins1.csv")
        link1:AddClassAttribute("underline text-quorum-blue-150")
        p1:AddText(" When you only have a few rows of data, you might be able to examine the table and find some information. However, when you have hundreds of rows, we might want to represent our data in a chart.")
        intro:Add(p1)
        intro:AddParagraph("")
        
        WebTable table = AddWebTable("Sample of Penguins1.CSV file")
        TableBody tableBody = AddTableBody()
        
        Array<text> tableHeaderArray
        tableHeaderArray:Add("bill_depth")
        tableHeaderArray:Add("bill_length")

        TableHeader thead = AddTableHeaderRow(tableHeaderArray)
        table:Add(thead)  

        Array<text> penguinData1
        penguinData1:Add("18.7") 
        penguinData1:Add("39.1") 
        tableBody:Add(AddTableBodyRow(penguinData1))

        Array<text> penguinData2
        penguinData2:Add("18.3") 
        penguinData2:Add("37.8") 
        tableBody:Add(AddTableBodyRow(penguinData2))

        Array<text> penguinData3
        penguinData3:Add("18.5") 
        penguinData3:Add("36.8") 
        tableBody:Add(AddTableBodyRow(penguinData3))

        Array<text> penguinData4
        penguinData4:Add("13.2") 
        penguinData4:Add("46.1") 
        tableBody:Add(AddTableBodyRow(penguinData4))

        Array<text> penguinData5
        penguinData5:Add("17.9") 
        penguinData5:Add("46.5") 
        tableBody:Add(AddTableBodyRow(penguinData5))
    
        table:Add(tableBody)
        intro:Add(table)

        return intro

    end

    action GetInstructions() returns Division
        Division instructions
        text dq = ""
        dq = dq:GetDoubleQuote()
        
        instructions:AddParagraph("")
        instructions:AddParagraph("In the code editor below, we have a program that reads in this file to a DataFrame and makes a Chart. Take code blocks from the palette and place them at the bottom of the program.")
        OrderedList instructionsList
        instructionsList:AddListItem("<b>Use the block(s) in the palette on the left.</b>")
        instructionsList:AddListItem("<b>Place the 'chart:Display()' block below the 'chart:ShowLegend(false)' block at the bottom of the block editor on the right.</b>")
        instructionsList:AddListItem("<b>Run the program.</b>")
        instructionsList:AddListItem("<b>Use the chart in the canvas to answer the questions in the <i>Activity</i> section.</b>")
        instructionsList:AddClassAttribute("list-decimal list-outside pl-8")
        instructions:Add(instructionsList)   
        instructions:AddParagraph("")

        return instructions
    end

    
action GetQuestions() returns Division
        Division questions
//        questions:AddText("<span class='text-red-500'>Red</span>")
//        questions:AddText("<span class='text-green-500'>Green</span>")
//        questions:AddText("<input type='text' class='border-green-500'></span>")
//        questions:AddText("<input type='text' class='text-red-500'></span>")
        
        questions:AddParagraph("")
        questions:AddParagraph("Use the chart(s) you've created in the <i>Coding</i> section to answer a few questions.")
        questions:AddParagraph("")

        Form questionForm
        
        questionForm:SetClassAttribute("questionform")
        questionForm:SetIdentifier("questionform")
        //questionForm:AddAttribute("method", "post")
        //questionForm:SetOnSubmit("checkAnswers(); event.preventDefault();")

        questions:Add(questionForm)
        
        //FieldSet questionSet

        //questionForm:Add(questionSet)
        Division totalCorrect
        totalCorrect:AddAttribute("role","region")
        totalCorrect:AddAttribute("aria-live","polite")
        Span totalCorrectText
        totalCorrectText:SetIdentifier("totalCorrectText")
        totalCorrect:Add(totalCorrectText)
        questionForm:Add(totalCorrect)
        questionForm:AddText("<br>")
        

        //13.1 21.5 32.1 59.6
        Label question1
        Bold bold_question1
        bold_question1:AddText("1. What's the largest bill length?")
        question1:Add(bold_question1)
        question1:SetIdentifier("question1")
        question1:AddAttribute("for","input1")
        question1:SetClassAttribute("mx-2")
        
        Input input1
        input1:SetType("number")
        input1:SetClassAttribute("mx-2 p-2 rounded-md border border-neutral-grey-50 aria-[invalid='true']:border-attention-red-100")
        input1:SetIdentifier("input1")

        Division validationDiv1
        validationDiv1:AddAttribute("role","region")
        validationDiv1:AddAttribute("aria-live","polite")
        Span validation1
        validation1:SetIdentifier("validation1")
        validation1:SetClassAttribute("mx-2 text-sm hidden")
        validationDiv1:Add(validation1)

        questionForm:Add(question1)
        questionForm:AddText("<br>")
        questionForm:Add(input1)
        questionForm:AddText("<br>")
        questionForm:Add(validationDiv1)
        questionForm:AddText("<br>")
        
        Label question2
        Bold bold_question2
        bold_question2:AddText("2. What's the largest bill depth?")
        question2:Add(bold_question2)
        question2:SetIdentifier("question2")
        question2:AddAttribute("for","input2")
        question2:SetClassAttribute("mx-2")
        
        Input input2
        input2:SetType("number")
        input2:SetClassAttribute("mx-2 p-2 rounded-md border border-neutral-grey-50 aria-[invalid='true']:border-attention-red-100")
        input2:SetIdentifier("input2")

        Division validationDiv2
        validationDiv2:AddAttribute("role","region")
        validationDiv2:AddAttribute("aria-live","polite")
        Span validation2
        validation2:SetIdentifier("validation2")
        validation2:SetClassAttribute("mx-2 text-sm hidden")
        validationDiv2:Add(validation2)
       
        questionForm:Add(question2)
        questionForm:AddText("<br>")
        questionForm:Add(input2)
        questionForm:AddText("<br>")
        questionForm:Add(validationDiv2)
        questionForm:AddText("<br>")

        Button checkAnswers
        checkAnswers:SetType("button")
        checkAnswers:SetOnClick("checkAnswers();")
        checkAnswers:AddText("Submit Answers")
        //pulled these attributes from some other buttons on the site
        checkAnswers:AddClassAttribute("py-2 px-10 w-fit bg-quorum-blue-100 ml-4 font-bold captitalize rounded-2xl")
        //turning off post until the backend is setup, just do frontend validation

        questionForm:Add(checkAnswers)
        
        Script script
        text quote = ""
        quote = quote:GetDoubleQuote()
        script:SetCode("
        function checkAnswers() {
            var totalCorrect = 0;
            var totalQuestions = 2;

            var input = $('#input1');
            var validation = $('#validation1');
            if (input[0].value === undefined || input[0].value === '') {
                input.removeClass('border-neutral-grey-50 border-green-500')
                input.addClass('border-red-500');
                input.attr('aria-invalid','true');
                validation.removeClass('hidden text-green-500')
                validation.addClass('text-red-500 text-attention-red-100');
                validation.text('Please enter an answer.');
            }
            else if (input[0].value >= 58 && input[0].value <= 61) {
                input.removeClass('border-neutral-grey-50 border-red-500');
                input.addClass('border-green-500');
                input.attr('aria-invalid',false);
                validation.removeClass('hidden text-red-500 text-attention-red-100')
                validation.addClass('text-green-500');
                validation.text('Correct.');
                totalCorrect++;
            }
            else {
                input.removeClass('border-neutral-grey-50 border-green-500')
                input.addClass('border-red-500');
                input.attr('aria-invalid','true');
                validation.removeClass('hidden text-green-500')
                validation.addClass('text-red-500 text-attention-red-100');
                validation.text('Incorrect, please try again.');
            }

            var input = $('#input2');
            var validation = $('#validation2');
            if (input[0].value === undefined || input[0].value === '') {
                input.removeClass('border-neutral-grey-50 border-green-500')
                input.addClass('border-red-500');
                input.attr('aria-invalid','true');
                validation.removeClass('hidden text-green-500')
                validation.addClass('text-red-500 text-attention-red-100');
                validation.text('Please enter an answer.');
            }
            else if (input[0].value >= 21 && input[0].value <= 22) {
                input.removeClass('border-neutral-grey-50 border-red-500')
                input.addClass('border-green-500');
                input.attr('aria-invalid',false);
                validation.removeClass('hidden text-red-500 text-attention-red-100')
                validation.addClass('text-green-500');
                validation.text('Correct.');
                totalCorrect++;
            }
            else {
                input.removeClass('border-neutral-grey-50 border-green-500')
                input.addClass('border-red-500');
                input.attr('aria-invalid','true');
                validation.removeClass('hidden text-green-500')
                validation.addClass('text-red-500 text-attention-red-100');
                validation.text('Incorrect, please try again.');
            }
            
            var totalCorrectText = $('#totalCorrectText');
            var message = totalCorrect + ' of ' + totalQuestions + ' correct.'
            totalCorrectText.text(message); 
            if (totalCorrect < totalQuestions) {
                totalCorrectText.removeClass('text-green-500');
                totalCorrectText.addClass('text-red-500 text-attention-red-100');
            }
            else {
                totalCorrectText.removeClass('text-red-500 text-attention-red-100');
                totalCorrectText.addClass('text-green-500');
            }
        };
        ")

        questions:Add(script)
       

        return questions
    end
    
//    action GetIDE() returns BlockIDE
//
//        CodeForIDE code
//        code:AddFileUrl("Main.quorum", "html/hourofcode/datascience/datascience1.quorum")
//        BlockIDE ide
//        //ide:SetLightTheme()
//        ide:SetNoCanvasMode(true)
//        ide:SetCodeForIDE(code:GetJsonArray())
//        ide:SetPaletteFile("palette/testPalette.xml")
//        //ide:SetIdeTitle("Type your code below...")
//        ide:Setup(me)
//        
//        return ide
//    end

    action GetLocation returns text
        return "hourofcode/datascience" + ACTIVITY + ".html"
    end

    action GetLinkName returns text
        return SUBTITLE
    end

    action GetSectionName returns text
        return "Data Science"
    end

    action GetName returns text
        return SUBTITLE
    end

    action GetShortDescription returns text
        return "how to display a Chart."
    end
end
