use Libraries.Web.Page.WebPage
use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.MetaData
use Libraries.Web.Page.Division
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.Bold
use Libraries.Web.Page.CodeBlock
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.PreformattedText
use Libraries.Web.Page.Comment
use Libraries.Web.Page.Span
use Libraries.Web.Page.InlineFrame
use Libraries.Web.Page.Header
use Libraries.Web.Page.MainContent
use Libraries.Web.Page.OrderedList
use Libraries.Containers.Array
use Libraries.Web.Page.Section
use Libraries.Web.Page.Link

class ReleaseNotes is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
    Preformatter preformatter //helper
    
    
action QuorumStudio7_1Notes(Section bodyDiv)
        AddHeading(bodyDiv, "Quorum Studio 7.1 and Quorum 13.1: July 8th, 2025", 2)
        bodyDiv:AddParagraph("This is a small bug fix release. For this one, we made small tweaks to the user experience based on feedback since the release of Quorum Studio 7 and the new online Parsons problems.")
        
        Array<text> list1
        list1:Add("Quorum uses an unusual mechanism for managing blocks that allows it to use 
text or blocks in different circumstances or for different users. We fixed an issue 
where, if you went to places like the 
<a href='https://quorumlanguage.com/problems/loops/more-scope.html'>more scope problem</a>, 
it would aggressively make the screen lose all blocks if you drag the bottom line up. 
The problem was related to it incorrectly processing the code, deleting newlines in the process.
")
list1:Add("There is now a mouse over behavior for blocks and its components. This allows mouse users to visually see where a click would land before clicking.
")
list1:Add("Fixed the issue in Quorum Studio where a crash would occur if you dragged from the tray and placed it back into the tray.
")
list1:Add("The big connectors on the left hand side of blocks sure looked visually clickable, right? Well, now they can be. 
")
list1:Add("Those little divots under the blocks sure look ... oh nevermind. The little trapezoidal divots are also now clickable.
")
list1:Add("In large files, there is now more white space at the bottom of the file
")
list1:Add("Fixed an issue where there was a small gap between single line blocks in a multiple line block. We decided not to mind the gap. 
")
list1:Add("Added a more obvious way to know where the focus is for keyboard users that do not have screen reading devices on. Most components already had such features, but we noticed it was missing if you directly overrode the focus properties of labels and then stole the focus. This is now fixed.
")
list1:Add("Added the ability to use the up and down arrow keys inside of the tray. This is true online and offline with one exception. The exception is that in Quorum Studio, because up and down already have a meaning in text fields, you have to press tab to get out of the search field if you do not need it. 
")
list1:Add("Adjusted the look and feel of the Parsons problems pages. Notably, we increased the amount of space in the margins, allowing for more room to actually code. 
")
list1:Add("The online IDE now has a thin border around it. 
")
list1:Add("Changed the Parsons Parsons problems pages to have linkages back to the navigation for the problems as a whole. This gives a better sense of where you are in a bigger context. 
")
list1:Add("Integrated blocks fixes into the online blocks.
")
list1:Add("Fixed a bug where if you used the keyboard to scroll in the block tray, the scrolling region would not follow along.
")
        
        
bodyDiv:Add(GenerateList(list1))
    end
    
    action QuorumStudio7_0Notes(Section bodyDiv)
        AddHeading(bodyDiv, "Quorum Studio 7.0 and Quorum 13.0: June 2nd 2025", 2)
        bodyDiv:AddParagraph("Quorum Studio 7.0 and Quorum 13.0 represent the 2025 major release for the programming language. We focused on many major improvements to the language, to its block representation, and to accessibility across platforms. ")
        AddHeading(bodyDiv, "Block Changes", 3)
        bodyDiv:AddParagraph("A substantial number of changes have been made to the blocks system across the board. The broad reasoning behind these changes was that the team has been doing extensive testing. This includes a wide variety of technical issues, but also tests with pesky humans. After listening to feedback, running studies, and just generally using the system extensively ourselves, we have made a wide variety of targeted adjustments.")
bodyDiv:AddParagraph("Many of the changes could be described as a twisting of the knobs. The overall goal was to not really add that many features, necessarily, but to just sum up and include as much of the wonderful feedback we have received in the last year. These include trying to make the blocks slightly easier to read, easier to know what they mean, and easier to manipulate. We have added syntax highlighting within the blocks, which we think makes it easier to read text values. We have also substantially adjusted the palette. The goal in those changes was to make it more useful and also to make it look nicer. ")
bodyDiv:AddParagraph("We have also improved how we are managing blocks online. In this regard, we have improved memory performance, significantly altered how we manage the shadow-dom for tablets with accessibility, and added support for multiple files online in some instances.")
        AddHeading(bodyDiv, "Quorum Studio Changes",4)
        bodyDiv:AddParagraph("Quorum Studio has seen a number of important changes in this release. The biggest is that we have significantly refined the blocks in a wide variety of ways. Past this, the block palette itself has received many revisions, online and offline. We summarize these changes below:")
        Array<text> list1
        list1:Add("The left hand side of the block palette, instead of plain circles, now includes a set of fonts and graphics that try to better represent what that collection of blocks do. These options are in a vertical list with horizontal labels
")
list1:Add("Options in the palette (when not selected) have no borders or background distinguishable from the palette background color
")
list1:Add("The left hand side of the  palette now uses rounded corners and a highlight when selected
")
list1:Add("Items on the left hand side of the palette now use icons, largely from Font-Awesome, before the label
")
list1:Add("Made small tweaks to the colors on the left hand side of the block palette. They were already accessible, but our goal was to make them look nicer.
")
list1:Add("Removed the blue background from the banner at top of the palette
")
list1:Add("Fixed a variety of issues to make the layout of the palette look visually correct at all magnification levels
")
list1:Add("Removed the word 'Class' from the class name at top in the banner section. Decisions like this probably sound silly, but the idea is that we are tightening up the layout and removing anything that isn't semantically a big priority when you are reading. Our goal is to make it more obvious to users what is important information and what is not
")
list1:Add("Removed the word 'Block' for things like Blank Block. Again, the words were not really helping anyone and this frees up visual space
")
list1:Add("Moved the filter to the top of the layout so it is first in the tab order and visually. This way you can jump to the palette, filter it, and more quickly get into what you are trying to find. We hope this is an improvement especially for keyboard users
")
list1:Add("Removed the word Filter from the filter. Visually, we think it looks just a bit off this way, but it frees up space and hopefully it isn't too jarring. Accessibility systems still have the same labels
")
list1:Add("Remove the word 'Class' from whatever class you are using as well. This frees up visual space and was redundant
")
list1:Add("Removed the variable table. This change came largely from observing people use the blocks and noticing they generally did not use this feature. Because it took up a considerable amount of visual space, we removed it. It is possible that some variation of this feature will come back in the future, but we think we need more evidence on how to make it useful if we do
")
list1:Add("Justified text after the block description. So, for example after Blank (block)
")
list1:Add("Justified text for class descriptions
")
list1:Add("Errors banner now use a different color and use justified text instead of left justified
")
list1:Add("The focus colors in general now have much better contrast. We think it should be more clear now where you are in the palette especially, although this is also true for blocks
")
list1:Add("Added a small label to the action blocks in the palette to show what the various types are and lined them up. 
")
list1:Add("Fixed a weird little graphical glitch where in the blocks tray the divet cuts into the field too much. It looked odd and bugged us.
")
list1:Add("Integrated type information into the advice filter. 
")
        bodyDiv:Add(GenerateList(list1))
        
        
AddHeading(bodyDiv, "Block Editor",4)
        bodyDiv:AddParagraph("Past the block palette, we have also made substantial changes to the block editor itself. Many of these are small, like nip tuck style bug fixes. Others try to make it more visually obvious what something is. As before, all visual adjustments are fully automated, meaning there remains no difference, other than the visual layer, whether you use blocks or text. The choice remains a personal preference.
")
Array<text> list2
        list2:Add("Added a way to expose the semantic meaning of pieces of the blocks inside the visual editor. For example, a block might have a name, a type, a value, or some other piece. Ironically, these have been exposed to screen reader users for a while, but we hadn't considered exposing them to everyone until someone asked
")
list2:Add("Added syntax highlighting in blocks
")
list2:Add("Adjusted the unique selection colors for blocks to make it more obvious what was selected
")
list2:Add("Adjusted the borders for when a block is selected. The idea is that the focus colors have been improved, but there are also now borders. This is yet one more way we are trying to make the focus more obvious
")
list2:Add("Fixed a bug related to layout when the blocks are showing additional information. This was exposed because of the new semantic information presented, but was a bug in general
")
list2:Add("Added the ability to comment out the selected blocks in the editor. The commands are the same in the text editor and the block editor. One thing to note here is that while commenting in and out is theoretically the same idea as in text, it means something different in blocks and there really are some funny edge cases around scope and other issues. We did not try to manage all the crazy edge cases that can come up because we presumed that having this feature at all was a net improvement. Ideas are welcome, but in general we think this is a quality of life improvement for the blocks system
")
list2:Add("Finished an optimization related to line height in the editor that was causing slowdown in large files. We have significantly reduced the time requirement, improving cpu efficiency in this case by 99.286%. The difference is very large and you can feel it when using the new editor. It just feels ... snappier
")
list2:Add("We made keywords in the dark mode block editor about 15% brighter. Technically, the keywords were already WCAG 2.1 AA compliant, but this was a user request and we went for it. The trick is if you go too bright, you lose a sense of color, so we tried to find a balance. The new contrast ratio for these keywords is 9.56 to 1. We think this is interesting even just because it highlights what often isn't taken into account in contrast calculations, which is that some words are more important than others. 
")
list2:Add("Fixed an unusual bug where if you had an action and went into a blank block mode, it would sometimes trigger an incorrect layout
")
list2:Add("Fixed a very odd little bug where if you created if statements in just the right order and in just the right way, there was a way to make a field disappear from the focus traversal. 
")
        bodyDiv:Add(GenerateList(list2))
        
        
AddHeading(bodyDiv, "Online Blocks",4)
        bodyDiv:AddParagraph("We also fixed a wide variety of bugs related to using blocks in online settings. Many of these came from testing with a whole ton of people in the community, including blind children, a ton of adults, random Internet users, and so many others. If this is you, we just cannot thank you enough! Science doesn't make progress without users sharing their thoughts. Online changes included:
")
Array<text> list3
        list3:Add("Fixed a bug in the online editor where if you press enter, then start typing in the new block, after a split second, the first character gets shoved later. This always happened in Firefox and Chrome and was infuriating.  This really annoying bug was squashed.
")
list3:Add("Added multiple file support for blocks in a browser, including accessibility support. When you make a block editor, it has to explicitly say the number of files in advance, but in theory should allow us to put as many files as we want wherever we want on the site. You're welcome, Janusz Chmiel.
")
list3:Add("Added support to the Quorum compiler on the live site
")
list3:Add("Fixed a bug where comments and blank blocks were not working correctly in the online IDE when loaded
")
list3:Add("Fixed a bug where with typing inside of the online editor, there does not appear to be a way to add an action. Oddly enough, the code looked and felt wrong, but was correct in the context of what the compiler returned
")
list3:Add("Added significantly improved accessibility support for tablets. This was unbelievably difficult. Uggh. For those that want to code with blocks online and use a tablet in the classroom or otherwise, please feel free to provide feedback. In the current version, we think it works better in browsers with Android than it does iOS, which seems to react differently to the same code
")
list3:Add("Added carefully controlled changes to the buttons as you run or stop programs
")
list3:Add("Finalized a collection of buttons for the Quorum Blocks toolbar, including hide palette, zoom in, zoom out, hotkeys, full screen, run, and stop. These have been slightly altered
")
list3:Add("Fixed an issue where copy and paste would not work with the system clipboard, which made it so you could not copy back and forth between Quorum Studio and the online environment
")
list3:Add("Massively, and we mean ridiculously, absurdly, massively, improved performance of the block editor and the programs it runs online
")
list3:Add("Changed the name of the block palette to the Tray online. It should probably be adjusted in Quorum Studio as well, but we are leaving it for now as there are bigger fish to fry
")
list3:Add("Fixed a bug where the Mac online editor used the windows hotkeys
")
list3:Add("Fixed a bug where Copy Paste to the actual clipboard from the online editor was not working correctly
")
list3:Add("Fixed a bug where the Tray Separator Line did not work with touch events online
")
list3:Add("Adjusted forms to respond correctly to touch events given all the new changes
")
list3:Add("Fixed a bug where you couldn't use the equivalent of the right click menu in the online editor
")
list3:Add("Fixed a bug where the blocks (or components in games generally) can be larger than editor, which caused web page dimensions to increase, causing horizontal scrollbar to appear
")
list3:Add("Fixed a bug where under some conditions, it was possible for the layout of blocks to get messed up when selecting a field.
")
list3:Add("Added a feature where you can swipe to the left on a block, or drag a block over the palette, to delete it on tablets. You could technically do this by picking the block up before, but in testing people seemed to think this was more intuitive
")
list3:Add("Fixed a bug where the border in full screen mode online had transparency, which allowed it to bleed through to the text below.
")
        bodyDiv:Add(GenerateList(list3))
        
        
AddHeading(bodyDiv, "Quorum To JavaScript Transpiler",3)
        bodyDiv:AddParagraph("Quorum has long had a Quorum to JavaScript Transpiler library system built in. It has stayed relatively constant for years, but this year got a significant upgrade to ECMAScript 6. features. The broad purpose of this change was efficiency in the transpile, which has resulted in a significant improvement to memory performance. We made a collection of these changes especially to improve the use of blocks online. The reason we did this is because our online Parsons problems for data science turned out to be much more popular than we expected and we had to adapt quickly.
")
bodyDiv:AddParagraph("A collection of these features includes:
")
Array<text> list4
        list4:Add("Converted the standard library for Quorum in JavaScript mode to use ECMAScript 6. The purpose is to change the lambda in lambda approach to classes
")
list4:Add("Heavily optimized the JavaScript version of Quorum for memory. For perspective on the magnitude of this change, in November 2024 we were seeing the combination of charts and blocks at around 1.75 gigabytes in size on some machines. By late November, we had hit ballpark 500 megs for the combo. As of Quorum 13.0, similar projects take about 94.6 megabytes in size. So basically, the online footprint for blocks with charts has been reduced by about 94.6% under the conditions of our test.
")
list4:Add("Significantly improved bootup time for many aspects of the JavaScript version of 	Quorum
")
        bodyDiv:Add(GenerateList(list4))
        
        
AddHeading(bodyDiv, "Graphics Engine Upgrade",3)
        bodyDiv:AddParagraph("In this release, we spent considerable time investigating and upgrading the behind the scenes graphics engine. There are multiple purposes in doing this, but the big one is to continue our long-standing investigation into Accessible Starvation and Accessible Graphics. As a secondary point, we are hoping to future-proof Mac support. As a third purpose, we are investigating how far the rabbit hole goes for accessible graphics. Put another way, we want to get the system able to generate very fancy graphics with full accessibility support. This is not some idle goal. If this is achievable, it opens up a great number of additional technologies.
")
bodyDiv:AddParagraph("Overall, this project has involved looking at multiple systems for managing the GPU, but especially Vulkan. This project is not trivial and we expect pieces of it will be solved over a 2-year period, with this one being the first. This release does not actually integrate any of this work and we will detail it more next year, but our hope is to have the basics of this upgrade completed by Quorum 14. We may not make the target, but this would put release for the second half of this in 2026.
")
AddHeading(bodyDiv, "Additional Changes",3)
        bodyDiv:AddParagraph("The following includes a list of small bug fixes and changes in this release:
")
Array<text> list5
        list5:Add("Added center, right, and justified text to the label class. Left justified was previously the only option
")
list5:Add("Added the ability to use colors inside of text fields. 
")
list5:Add("Added the ability to use text styles inside of text fields
")
list5:Add("Fixed a strange little bug in the blocks system causing Quorum to layout the blocks on every frame of animation, which was wrong. On the machine we tested it on, this tiny change alone reduced CPU usage by about 25% in our tests. Quorum Studio is still a bit heavy CPU load wise, but small changes like this over time will help
")
list5:Add("Fixed a bug causing a crash on bootup with Quorum Studio. The crash was esoteric and related to whether files were open in the last run.
")
list5:Add("Fixed an issue in the debugger where all variables were aligned flush left, regardless of depth in the tree structure. This made it visually difficult to tell how variables were organized.
")
list5:Add("Fixed an issue in the debugger where if you set a breakpoint, it would take an incredibly long time to put it in the system. This seemed to happen on even a small file, which made us think it was a bug. Our best estimate for its asymptotic complexity was O (gazillion!^9 * log(gadzooks)). Not really, but it felt that way
")
list5:Add("Fixed a bug where the sorting algorithm used to sort the variables was messed up for arrays. The reason is because it was considering them string names as opposed to index values
")
list5:Add("Fixed an accessibility bug with checkboxes. We thought this bug was more general and was causing checkboxes to return the wrong value to accessibility systems. It turned out, however, that it was related to a strange edge case where the accessibility system   received a checkbox before certain setup calls were created under the hood. The issue was windows only, but unrelated to the native implementation. This fixes bug <a href='https://github.com/qorf/quorum-language/issues/116'>https://github.com/qorf/quorum-language/issues/116</a>. Special thanks to Macintoshuser_2 on discord for finding this one.
")
        bodyDiv:Add(GenerateList(list5))
        
        AddHeading(bodyDiv, "Known Issues", 3)
        bodyDiv:AddParagraph("Using the Send to iOS function is currently broken for newer iOS versions. We're aware of the issue and are working on a fix for a later patch.")
    end
    
    action QuorumStudio6_3Notes(Section bodyDiv)
        AddHeading(bodyDiv, "Quorum Studio 6.3 and Quorum 12.3: December 9th 2024", 2)
        bodyDiv:AddParagraph("This is a bug fix and maintenance release but also contains a few new features. Notably, Spike kits now support a great deal of the sensors and thingies that come with the kit. Past this, this release contains a series of memory and processor optimizations related to graphics. ")
        Array<text> list1
        list1:Add("Changed the LEGO Spike (tm) Quorum adapter to output micropython bytecode. The difference is huge, but it does seem to especially improve bootup time")
list1:Add("Adjusted the way LEGO Spike (tm) materials are compiled, adding a transitive dependency solution so that it is more general purpose. Note that if you use a ton of classes from Quorum that, while this is allowed, it can bloat the size of the bytecode. In practice, this should come up pretty rarely. Even if it does, if you are asking Quorum to compile in a bunch of classes, then it takes more space")
list1:Add("Fixed a bug related to coroutines in Spike. They now await properly without requiring the user to know about the existence of this feature")
list1:Add("Fixed a strange little bug where the transpiled code would not compile if you had a loop with an empty body.")
list1:Add("Added a considerable number of sensors and other features in Spike. This list now includes Button, Color, ColorSensor, Device, Display, DistanceSensor, ForceSensor, Hub, Light, LightMatrix, Motor, Port, Sound, Spike, and a few others.")
list1:Add("Added a considerable amount of documentation in the Spike API. These are not tutorials, but will hopefully help")
list1:Add("By default physics in 2D no longer loads any memory resources. This substantially lowers the memory footprint for code that does not need physics, like charts")
list1:Add("Fixed a bug in Quorum Studio where the smart nav hotkey was clashing with the clean and build key on Windows. ")
list1:Add("Fixed a number of seemingly small issues with memory and CPU optimization related to drawing and charts")
list1:Add("Added the ability to have Bold and Italic fonts in Quorum. It's weird this feature was not in there, but it was not. ")
list1:Add("Changed the default font used in web based Quorum to include bold fonts")
list1:Add("By default in charts, the titles are now bold.")
list1:Add("Made a few small adjustments to the look of charts. These are purely visual changes and there is more to come, but this is the start")
list1:Add("Conducted some light refactoring across the chart system")
        list1:Add("Added a new Hour of Code for Data Science to the Learn page. This Hour of Code makes use of the online blocks system")
list1:Add("Added a loading spinner to the Run button in the online blocks system to signify that there is loading happening in the background")
list1:Add("Significantly improved performance related to the online accessible blocks system in the hour of code. This helps especially in helping it become workable on low power devices")
list1:Add("Gesture support has been added to the online blocks. Now on touch enabled devices you can make use of swipes, taps, and pans to interact with the blocks")
list1:Add("Along with gesture support the online block system has been updated for use with screen readers on mobile devices. Navigation by headings is recommended to find landmarks in the blocks to help navigate and interact with the blocks on those devices")
        bodyDiv:Add(GenerateList(list1))
        bodyDiv:AddParagraph("This release is dedicated to the awesome student project team at the University of Nevada, Las Vegas that helped get the LEGO Spike robots over the finish line. This includes, in no particular order, Bret Benjegerdes, Zachary Wylie, Anh Kiet Cong, Emanuel Pecson, Daniela Pedraza Orenday, and William Luong. Thank you so much for all the hard work you put in!")
    end
    
    action QuorumStudio6_2Notes(Section bodyDiv)
        AddHeading(bodyDiv, "Quorum Studio 6.2 and Quorum 12.2: October 4th 2024", 2)
        bodyDiv:AddParagraph("This is a maintenance release that includes bug fixes and one alpha feature that has been long requested by the community. Specifically, this is the first release to include a preliminary implementation of LEGO Spike (tm) robots from within Quorum. While this is now included in the user interface, the implementation is preliminary and not well tested. We put it out there only so the community can try it and provide feedback. That said, you can now set a property in the project file for Spike, then compile normally. If you build, or clean and build, it will output a micropython file that can be sent to the robot. Similarly, if you press the run button and the robot is physically plugged in, it will attempt to locate it and send it to a slot. The slot the program is sent to can be adjusted in the project properties page and is 0 by default.")
bodyDiv:AddParagraph("Past this pre-alpha feature, the following bug fixes are included:")
        Array<text> list1
        list1:Add("Fixed a gross bug where the 3D scene engine would crash Quorum Studio on bootup. We highly recommend upgrading for this alone if you use that system")
list1:Add("Fixed a few small bugs that could crash Quorum Studio")
list1:Add("Fixed a bug in the Palette that would cause it to incorrectly include private actions in some circumstances")
list1:Add("Adjusted the online blocks system to prevent multiple clicks on the run button as things loaded")
list1:Add("Adjusted how graphics are loaded in the online block editor to better help the memory load. Now, graphics systems like blocks need to retain state as text when unloaded, as opposed to text and graphics state")
list1:Add("Fixed an extremely, unendingly, ridiculously, annoying bug where Quorum Studio would crash if you copy from a very large file.")
list1:Add("Added the ChartDisplayer class. The purpose of this class is to allow for the creation of multiple charts at once and to display them all for browsing or saving. For example, you might create 50 charts, display them, or save them all into accessible formats.")
list1:Add("Added an option to hide sub chart titles, x-axis title and y-axis title rather than only the entire x-axis or y-axis.")
list1:Add("Changed computation of effect size in wilcoxon and mann-whitney u test from z / sqrt(N) to abs(z) / sqrt(N) to ensure a non-negative value.")
list1:Add("Fixed a bug in csv saving that caused it to not save linefeeds in one cell within a text element.")
list1:Add("Made additions to Serial and SerialPort classes for compatibility with LEGO Spike.")
list1:Add("Added classes for ColorSensor, ForceSensor, Hub, LightMatrix, Motor, and Spike into the new Libraries.Robots.Spike package. These classes together allow you to send code to the robot for at least a small collection of features.")
list1:Add("Added a new project for moving a Spike robot into the new project dialog.")
list1:Add("Added a toggle button in the project properties dialog for LEGO Spike (tm)")
list1:Add("Added a new tab for LEGO Spike (tm) with the slot number specified for where to send it to the robot.")
list1:Add("Fixed a bug where Quorum Studio would tell you to use the wrong hotkey to go to the Errors tab when building a project with errors.")
bodyDiv:Add(GenerateList(list1))
bodyDiv:AddParagraph("We want to especially thank Gina Fugate for her patience on the Spike Front and Bret Benhegerdes for figuring out how to send the file to the physical robot. It's not everything the community would want, but it's a start. For those that want to use Spike, please let us know if you have any feature requests, as we are not entirely sure what the community needs.")
        
    end
    
    action QuorumStudio6_1Notes(Section bodyDiv)
        AddHeading(bodyDiv, "QuorumStudio 6.1: June 21st 2024", 2)
        bodyDiv:AddParagraph("Quorum Studio 6.1 adds a few enhancements related to accessibility and some small fixes related to the debugger. This is a minor bug fix release")
        Array<text> list1
        list1:Add("Fixed an off by one issue with breakpoints. This had to do with the system incorrectly calculating a partial line if you are scrolling")
        list1:Add("Sorted the variables in the variables window for the debugger. This bug has annoyed us for years and took almost no time at all to fix. Sometimes a fix is easier than you imagine.")
list1:Add("Enhanced accessibility information for the debugger. Basically what this means is that if you are using a screen reader, the debugger is now smarter about telling you where breakpoints and the debugger line are. ")
list1:Add("Enhanced accessibility information for version control systems. Now if you are using the editor, there is accessibility information sent about it. The idea is that it is now easier to use Quorum with version control systems like Github.")
list1:Add("Significantly increased the speed of the text editor. ")
list1:Add("Added a button under help in Quorum Studio to pop up the log file on various operating systems.")
        list1:Add("Fira monospace font is now available on the web")
list1:Add("Fixed an issue where dragging a block with the mouse cancels keyboard block insertion")
list1:Add("Blocks in the palette are no longer malformed if the palette is opened without any open project tabs")
list1:Add("If the user starts placing a placeholder block with the keyboard, then drags something in, the system no longer thinks it's still in keyboard mode (causing a crash on Enter)")
list1:Add("Added a series of null reference checks for an esoteric crash in InternalRemovePlaceholders in the block renderer")
        list1:Add("It is no longer possible to crash the environment by using the keyboard to insert blocks from the palette with no project tab open")
list1:Add("Blank blocks should no longer disappear when placed at the bottom of a file via the palette")
list1:Add("Dragging a blank block to the editor with the mouse will no longer cause the dragged block to disappear")
list1:Add("Fixed an issue that made it possible to begin inserting a new block via the keyboard when you were already inserting a different block, causing the system to try to add multiple blocks at once")
list1:Add("Fixed a crash that could occur if a block was set to be a Placeholder without being attached to a BlockEnvironment first")
        list1:Add("Fixed an issue that caused accessible level information on scoping blocks to be off by 1")
        bodyDiv:Add(GenerateList(list1))
    end

    action QuorumStudio6_Notes(Section bodyDiv)
        AddHeading(bodyDiv, "QuorumStudio 6 and Quorum 12: May 9th 2024", 2)
        bodyDiv:AddParagraph("This version of Quorum Studio focuses on the next iteration of our accessible blocks system, finalizing the desktop version of the design we originally imagined years ago. This version also puts in the groundwork for the web version of accessible blocks, which we are expecting to come online this summer. The biggest features are that we have completed all of the major affordances for the mouse, added a block palette similar to other blocks technologies, and spent a considerable amount of time fine tuning the blocks so they look, feel, and sound like we want them to, for good or ill. Finally, we include in this version an innovation we are calling scaffolded block programming, which users will observe in a special block palette we call Advice. ")
        
        AddHeading(bodyDiv, "Blocks Improvements", 3)
bodyDiv:AddParagraph("Over the last year of blocks being available, the Quorum community has sent us a considerable number of helpful ideas, and yes some bugs, on how they imagine blocks could be for everyone, including those with disabilities. We have done testing, gathered feedback from adults and young people, and answered more emails than we want to think about. We have consolidated all of this feedback and spent a great deal of time thinking, coding, and frankly just tinkering with blocks to make them what we want them to be. Version 2 of Quorum blocks was written in version 1, so you could realistically say we have now been using blocks to build blocks for more than a year. We hope to iterate for years to come and are getting closer and closer every day to our vision for them. ")
bodyDiv:AddParagraph("The list here is going to be pretty short, covering the big picture, but honestly there are hundreds of small changes across the system and they are way too numerous to put in the notes and have it be meaningful for people. Thus, here is an abridged list of the changes:")
        Array<text> list1
        list1:Add("Added mouse support for the blocks. We always add keyboard support first for accessibility, but we should be pretty close to parity now for traditional blocks systems in terms of other modalities. Many aspects of the blocks can now be used both with screen readers, but also clicked or manipulated in other ways")
list1:Add("Added the ability to move the scope of control statements with the mouse. ")
list1:Add("Made a considerable number of tiny little changes with blocks and the keys and features it supports in an attempt to make them feel simple and more natural")
list1:Add("Made a host of bug fixes related to the blocks. This includes crashes, parsing issues, and really just general touch ups here and there. ")
list1:Add("Dramatically improved logging of the system and especially inside blocks, especially for crashing and other issues")
        bodyDiv:Add(GenerateList(list1))
        
AddHeading(bodyDiv, "Scaffolded Block Programming", 3)
bodyDiv:AddParagraph("As one additional feature for blocks, we have created a new way to interact with blocks that we have not seen in other block languages. This system, which we call Scaffolded Block Programming, can predict based on the cursor certain aspects of what code the user may be wanting to write. Additionally, it can pull up documentation as the user works to provide hints related to the context in which they are working. From the user's perspective, we call this the Advice palette. Another way to think about this is that as you use the environment, it tries to give you information, or advice, on the types of things you can do from there.")
bodyDiv:AddParagraph("This system is new and designed to potentially reduce transitional friction between text and block languages. Part of our design philosophy was making it so you do not need to switch for professional practice, while keeping it simple for children. However, since the system is new, we suspect it could use with a solid round of constructive criticism and feedback from a diverse set of people. While we have made decisions for it around the best available evidence we have so far, we suspect it will get adjustments with more evidence and testing. Here is a rough overview of the kinds of things this system does:")
Array<text> list2
        list2:Add("The horizontal cursor is now a hook for the scaffolds. For example, if the cursor is on a blank block, it will tell you the types of things you can place in that location in the source")
list2:Add("For items in the standard library that are objects, if that class has documentation available, and we admit not all do, a snippet of that documentation will pop up so the user knows what the class does")
list2:Add("If the horizontal cursor is on a primitive, or some other internal Quorum construct (e.g., output, say), it will now provide information on what the command does in the programming language. The broad idea is that it makes it so the user no longer has to lookup commands they do not remember.")
list2:Add("Any item that pops up can be manipulated with the keyboard, mouse, screen reader, or other devices. As always, those with specific accessibility needs are welcome to reach out. We are always willing to learn more about what might help people")
list2:Add("Besides the Advice palette, there are basic, control, and action palettes with various items from the programming language. New ones are relatively easy to add, so ideas are welcome")
        bodyDiv:Add(GenerateList(list2))
        
AddHeading(bodyDiv, "Finch Robot and Micro:bit Support", 3)
        Paragraph finch
        finch:AddText("Due to a generous contribution from ")
        Link finchLink = GenerateDefaultLink()
        finchLink:SetAddress("https://www.birdbraintechnologies.com/")
        finchLink:AddText("Birdbrain technologies")
        finchLink:SetTarget(finchLink:newTab)
        finch:Add(finchLink)
        finch:AddText(", Quorum now supports Finch Robots and Micro:bits. Documentation is forthcoming, but it is hooked into all the normal systems, including blocks and the palette so you can tinker and explore. Big features include:")
        bodyDiv:Add(finch)
Array<text> list3
        list3:Add("Support for normal Finch operations, similar to using it from any other language")
list3:Add("Support for Micro:bit 1 and 2. ")
list3:Add("Desktop Quorum Studio only is supported, on Mac or PC. A web version is theoretically possible to implement, but not supported in this version")
        bodyDiv:Add(GenerateList(list3))
        
AddHeading(bodyDiv, "Website", 3)
bodyDiv:AddParagraph("The website has been completely re-imagined from scratch. Technically, we released it in January, but no notes were given until now. We focused largely on design, with art, different ways of navigating the pages, a new development environment, extra tools, and really just a solid rethinking. We also include here a few notes that were not put out previously. Here are some of the big picture changes, along with new things:")
Array<text> list4
        list4:Add("The website is now 11 billion times more adorable. We did not measure this and would never try, but we stand by this possibly not true claim.")
list4:Add("Switched the backend of the system to use tailwind instead of css. We have no idea what a controlled study would say about this, but we are tinkering")
list4:Add("We re-imagined the online development environments. They have a considerable number of improvements")
list4:Add("Redid the structure of all of the pages to update themselves to the new system. There are way, way too many pages to mention")
list4:Add("Fixed several 404 pages across the system")
list4:Add("Fixed some tailwind related bugs across the system")
        bodyDiv:Add(GenerateList(list4))
        
AddHeading(bodyDiv, "Data Science", 3)
bodyDiv:AddParagraph("For this release, we focused largely on doing more testing with the statistics system and also using it in real-world academic publications. This process has helped us refine it, test it, and frankly get more comfortable doing professional grade statistical analysis in Quorum. Some of the release notes in this section are thus at a level of nerd-dom beyond our usual level of nerd-dom.")
Array<text> list5
        list5:Add("Added several non-parametric tests in CompareCounts to handle paired data and pairwise testing from data in various formats.")
        Link genLink = GenerateDefaultLink()
        genLink:SetTarget(genLink:newTab)
        genLink:SetAddress("https://psycnet.apa.org/record/2003-10163-005")
        genLink:AddText("Generalized Eta")
list5:Add("Switched the standard effect size measure in ANOVA tests to " + genLink:Generate() + ", based on the paper by Olejnik, S., & Algina [1]")
list5:Add("Fixed the construction of the design matrix for certain mixed ANOVAS to avoid singular matrices if possible.")
list5:Add("Fixed CrossTab to fill in 0s if no counts were collected under certain combinations, which is necessary for repeated measures CompareCounts tests.")
list5:Add("Forced the subject identifier to be recognized as a text column to optimize its access.")
list5:Add("Fixed a box plot crash where if no values were in a group it couldn't render, now it just leaves a blank plot area.")
list5:Add("Separated Touch Exploration and Gesture Navigation interaction models, which can now be toggled using SetTouchExplorationEnabled(boolean).")
list5:Add("Fixed a bug in Gesture Navigation on Android so that the number of fingers for swipes are properly recognized.")
list5:Add("Fixed several bugs in Touch Exploration on Android so that focus changes properly as Chart elements gain and lose focus.")
list5:Add("Added 'end of list' information to the end of Chart element descriptions.")
list5:Add("Added a looping feature to Chart element lists (including Chart information, sub charts, series, etc).")
list5:Add("Added the ability to toggle the visual highlighting, using ShowVisualHighlight(boolean), so that screenshots can be taken off just the base Chart.")
list5:Add("Added texturing to the charts as an accessibility enhancement. By default, no textures are on, but if you turn it on, a default set of patterns will be applied in SVG mode. ")
        bodyDiv:Add(GenerateList(list5))
        Paragraph dataRef
        dataRef:AddText("[1] Olejnik, S., & Algina, J. (2003). Generalized Eta and Omega Squared Statistics: Measures of Effect Size for Some Common Research Designs. "+AddItalicFront("Psychological Methods, 8","")+"(4), 434–447. ")
        Link cite = GenerateDefaultLink()
        cite:SetTarget(cite:newTab)
        cite:SetAddress("https://doi.org/10.1037/1082-989X.8.4.434")
        cite:AddText("https://doi.org/10.1037/1082-989X.8.4.434")
        dataRef:Add(cite)
        bodyDiv:Add(dataRef)
        
AddHeading(bodyDiv, "General Bug Fixes and Improvements", 3)
        bodyDiv:AddParagraph("As is normally the case, there are always bug fixes. We have noticed more crash reports than usual with Quorum Studio 5.1 and have spent considerable time knocking these out. We appreciate all the reports and are sorry for the hassle. Many of these were way more difficult to find than we expected, involving some very esoteric internal systems:")
Array<text> list6
        list6:Add("Fixed a bug in Mac OS Sonoma where the system could not build on iOS")
list6:Add("While the numbers vary by machine and architecture, we have added some basic optimizations into overriding the standard library. On some configurations, we have observed reductions by upwards of 60-82% of CPU time. Special thanks to the St. Louis team for their help in testing.")
list6:Add("Fixed an extremely gross and esoteric bug that would cause a spurious compiler error to be thrown when running the compiler with a non-deterministic file ordering where public fields are accessed from outside of a class. This is about as close to English as we can get for this crazy bug. Don't ask how we found it, because it makes even less sense.")
list6:Add("Fixed a bug in the yaml file for the Quorum server where the standard library would not correctly generate the libraries pages")
list6:Add("Fixed a bug in the compiler that would cause a particularly unintuitive error message to come out, even if the compiler generated a better one, in certain circumstances")
list6:Add("Fixed a bug causing the compiler to sometimes ignore a perfectly good identifier name that it could have told you about when you had an error in your own code")
list6:Add("Fixed a bug in the compiler that would sometimes cause the parser to not correctly identify that there was a missing type statement after a returns value")
list6:Add("Fixed a series of bugs in the compiler exposed by the blocks system related to parsing weird stuff as you type. There were a bunch of these, many of which causing unexpected crashes because the compiler architecture just wasn't designed to work that way when it was created. The reason it happened is because we adjusted the adaptive LL * algorithm for a hand-parsed parsing architecture back in Quorum 9. We did that because it allowed us to put the compiler error messages at the 8th grade reading level. This worked fine, but the blocks exposed a bunch of small issues slightly outside of those original design goals")
list6:Add("Fixed a bug in the scene editor causing a crash when you close a file")
list6:Add("Fixed an exceptionally esoteric bug causing a rather large memory leak in the accessibility system on Windows related to setting JNI global references and not freeing them under certain conditions.")
list6:Add("Fixed a bug that caused Quorum Studio, if you load it for the first time, to appear very small. The way this is calculated now by default is for it to be approximately 3/4 of the size of your monitor, which you can override how you see fit. Because it is difficult to know all the permutations of monitors and setups people have, if it looks strange for you, yes you, on bootup for the first time, feel free to get in touch and let us know what your setup was.")
list6:Add("Signed the installer on Windows. We plan to sign the installer on Mac as well, but have not yet finished this work. The lack of signing appeared to be causing the most problems on Windows, so we prioritized finishing that one first.")
        bodyDiv:Add(GenerateList(list6))
    end

    action QuorumStudio5_1Notes(Section bodyDiv)
        AddHeading(bodyDiv, "Quorum Studio 5.1: September 8th 2023", 2)
        bodyDiv:AddParagraph("This is a bug fix release with one large change. First, the biggest change in this mini-release is we have added Voice Over support on Mac OS X. This feature has been a long-time coming and we were finally able to complete the first version of it. We want to especially thank Matt Campbell and his excellent AccessKit technology for this side of the accessibility work. AccessKit allowed us to plugin to accessibility, similar to how we do on Windows, much more quickly and easily than we were expecting.")
        bodyDiv:AddParagraph("To be clear, while Voice Over support seems to be working how we want it to, there are a few known bugs in this first version. Notably, while nearly all of the systems are working how we intend in this design, the version of AccessKit we are using to make this happen is a pre-release and there are a few remaining issues related to roles, especially in trees, tabs, and tables. For example, tabs think they are radio buttons. This is adorable, but clearly a bug. We plan fixes for these issues as we continue working, but decided the community would benefit if we got out a patch now. Known bugs notwithstanding, this new version is dramatically more accessible and block mode is, in our view, really fun to use in the Voice Over screen reader. We would encourage any Mac Voice Over users to provide any feedback they have about the new version.")
        
        Array<text> list1
        list1:Add("Fixed a bug where if you close a tab, it wouldn't ask if you wanted to save under some conditions. We may have missed a few cases, but think we got most of them")
        list1:Add("Fixed a strange bug where the Quorum Studio properties dialog would always think you have overridden the Quorum Standard Library even if you did not")
        list1:Add("Breakpoints in the debugger have had some minor cleanup and bug fixes")
        list1:Add("Undo/Redo has been adjusted heavily in the block editor. Previously, while it was not wrong, the way it moved and generated blocks during undo operations felt confusing, so we adjusted it")
        list1:Add("Fixed a desync bug involving scoping. We also fixed several other desync bugs too esoteric to describe in English.")
        list1:Add("Fixed a bug where if you have two statements in a specific way in a freeform block, you could get a desync bug")
        list1:Add("Fixed a bug where freeform blocks wouldn't properly recognize system actions, blueprint actions, and shared classes")
        list1:Add("Adjusted the way we manage Eigenvalue decomposition for certain kinds of mixed models")
        list1:Add("Fixed several issues with output and statistical tests")
        list1:Add("Added an ExperimentalDesign class. There is no documentation for this yet, as we are experimenting with the design, but we are pushing this live to play around with it")
        list1:Add("Added an action to pass an experimental design to the data frame. This is necessary for some rather complex models where factor selections alone are not sufficient for describing the statistical test you want to run")
        list1:Add("Fixed a bug with network requests related to Get requests")
        list1:Add("Adjusted the accessibility information presented in boxplots")
        list1:Add("Added mouse over support for regression lines")
        list1:Add("Added a way to set borders around the legends in charts")
        list1:Add("Fixed a desync bug in text fields")
        list1:Add("Fixed a chart bug that could cause a crash with long names")
        list1:Add("Fixed a bug in web input that could cause spurious output")
        list1:Add("Fixed a bug causing the residual squares to give the wrong answer in charts under certain circumstances")
        list1:Add("Added Voice Over Support for Mac OS X")
        OrderedList ol = GenerateList(list1)
        bodyDiv:Add(ol)
    end

    action QuorumStudio5_04Notes(Section bodyDiv)
        text listStyle = "list-disc list-outside pl-8"
        AddHeading(bodyDiv, "Quorum Studio 5.0.4: August 8th 2023", 2)
        bodyDiv:AddParagraph("This is a bug fix release for Quorum Studio. Changes come largely from a round of focus groups conducted over the summer with teachers and students.")
        OrderedList list1
        list1:SetClassAttribute(listStyle)
        list1:AddListItem("Fixed an error in the standard deviation and variance equations on the summary statistics page")
        list1:AddListItem("Updated all of the SVGs to be generated in the current version of the library")
        list1:AddListItem("Updated the charts documentation to Quorum-11. They were previously using a slightly older version of the standard library")
        list1:AddListItem("Fixed a weird mouse bug where you can only click on the right hand side of a block but not the left")
        list1:AddListItem("Fixed a bug where some multiple line block parts would not take up more than one line when they needed to. An example would be if you have a conditional expression that takes up multiple lines")
        list1:AddListItem("Adjusted the height of the notches in blocks so they are relative to the total padding size")
        list1:AddListItem("Blocks with errors now correctly respect scaling when drawing and positioning their notches")
        list1:AddListItem("Adjusted all of the colors in dark mode to make them more readable")
        list1:AddListItem("Changed the selection color in light and dark mode to make it more readable")
        list1:AddListItem("Fixed a bug which could make the selection cursor stick around in the block editor when the editor wasn’t focused.")
        list1:AddListItem("Adjusted the code completion window to now accept Tab to do code completion.")
        list1:AddListItem("Fixed an issue where scatterplots on the web render the points incorrectly as squares")
        list1:AddListItem("Added a property to Quorum Studio so that blocks can be rendered thinner in terms of the left bar or the padding above and below a block. The notch scales according to this property as well.")
        list1:AddListItem("Fixed a bug where too many labels were being sent down to the accessibility system")
        list1:AddListItem("Made it possible to click and drag the edges of the project panel and console area to make them bigger or smaller.")
        bodyDiv:Add(list1)
    end

    action QuorumStudio5_03Notes(Section bodyDiv)
        text listStyle = "list-disc list-outside pl-8"
        AddHeading(bodyDiv, "Quorum Studio 5.0.3: July 24th 2023", 2)
        bodyDiv:AddParagraph("This is a bug fix release for Quorum Studio and contains a series of issues with various systems:")
        OrderedList list1
        list1:SetClassAttribute(listStyle)
        list1:AddListItem("Fixed a bug where if Quorum Studio does an update, it would not properly close the application once the updater starts. Note that because this bug was fixed for a future release, the feature will technically only start working in the release after the next release")
        list1:AddListItem("Fixed a bug in rendering blocks where, if you were rendering in the standard library and there were multiple blocks on a line that were previously written in a raw text editor, it could sometimes render the block out of place or too thin")
        list1:AddListItem("Fixed a bug in smart navigation where it would go down, but not up, inside of blocks")
        list1:AddListItem("Added navigate to declaration, a feature in the text editor, into the block editor. This allows the block editor to determine the semantics of the code and jump to a location where the code is declared, which is helpful for looking things up")
        list1:AddListItem("Fixed a bug related to editor hints and compiler errors in blocks where sometimes the hint or error would not show up or would be at the wrong location. While the algorithm is now much simpler and appears to be more accurate, there may be a case lingering where it is still off")
        list1:AddListItem("Fixed a bug where adding a colon into a block’s field causes the cursor to jump back to the start of the field under certain conditions")
        list1:AddListItem("Fixed a bug in the debugger where it was to jumping to the wrong lines inside of blocks")
        list1:AddListItem("Fixed a bug related to Bonferroni corrections on factorial CompareMeansPairwise tests where the number of tests performed was not being correctly computed")
        list1:AddListItem("Fixed a bug where Quorum Studio would not properly exit if a check for updates was issued and the system started the update")
        list1:AddListItem("Fixed a threading bug with the continue button that could sometimes cause a crash related to the debugger visuals under rare circumstances")
        list1:AddListItem("Slightly adjusted the size of the find in project dialog to make it more sensible at more sizes")
        bodyDiv:Add(list1)
    end

    action QuorumStudio5_02Notes(Section bodyDiv)
        text listStyle = "list-disc list-outside pl-8"
        AddHeading(bodyDiv, "Quorum Studio 5.0.2: July 11th 2023", 2)
        bodyDiv:AddParagraph("This is a bug fix release for Quorum Studio and contains a series of issues with various systems:")
        OrderedList list1
        list1:SetClassAttribute(listStyle)
        list1:AddListItem("Fixed a bug where nesting an elseif block inside another elseif block crashes Quorum Studio")
        list1:AddListItem("Fixed an issue where hints would sometimes cause location information to go bonkers, which in turn could lead to de-sync issues with blocks")
        list1:AddListItem("Fixed a bug where numpad enter seems to enter a new-line into a TextBox instead of parsing and adding a FreeformBlock")
        list1:AddListItem("Fixed a bug where, under some conditions, multi-selecting down to the last block and deleting causes a crash")
        list1:AddListItem("Fixed a bug where creating an action from freeform that includes a return type gets bad indices for the return field.")
        list1:AddListItem("Fixed a bug where the Quorum project properties dialog would crash if you have never done an override of the Quorum standard library, which was preventing users from turning blocks mode on and off")
        list1:AddListItem("Fixed a bug causing the input template to have incorrect behavior during parsing inside of a block. ")
        list1:AddListItem("Fixed a bug where the Undo/Redo keys were hooked up, but the buttons on the toolbar were not")
        list1:AddListItem("Fixed a strange and esoteric bug where line numbers were wrong in the line number gutter sometimes")
        list1:AddListItem("Fixed a bug where F3 and SHIFT + F3 were not working in the find dialog in blocks")
        list1:AddListItem("Fixed a bug in the find dialog where the select word was not correctly transferring the copied text at the right time to the dialog")
        list1:AddListItem("Made a speed optimization inside of the classes for ANOVA tests related to the sum of squares calculations")
        list1:AddListItem("Removed a memory and optimization problem inside of the matrix multiplication transform")
        list1:AddListItem("Allowed multiple factors in compare means pairwise")
        list1:AddListItem("Fixed a bug in the concatenation opcode where it was not properly evaluating in the interpreter")
        list1:AddListItem("Fixed several bugs with statistical effect sizes in complex statistical situations. This is an extremely complex topic and we suspect more work needs to be done in this area")
        list1:AddListItem("Changed the AddSelectedFactors and AddSelectedColumns actions to retain ordering by default, based on user feedback")
        bodyDiv:Add(list1)
    end

    action QuorumStudio5_01Notes(Section bodyDiv)
        text listStyle = "list-disc list-outside pl-8"
        AddHeading(bodyDiv, "Quroum Studio 5.0.1: June 26th 2023", 2)
        bodyDiv:AddParagraph("This is a bug fix release for Quorum Studio 5.0.0. The fixes include:")
        OrderedList list1
        list1:SetClassAttribute(listStyle)
        list1:AddListItem("Fixed a crash bug when you use the arrow keys at the top or bottom of the file")
        list1:AddListItem("Fixed a bug in new project dialog where the browse button was incorrectly hooked up")
        bodyDiv:Add(list1)
    end

    action QuorumStudio5_0Notes(Section bodyDiv)
        text listStyle = "list-disc list-outside pl-8"
        AddHeading(bodyDiv, "Quorum Studio 5.0 and Quorum 11.0: June 21st, 2023", 2)
        bodyDiv:AddParagraph("Quorum Studio 5.0 and Quorum 11.0 marks what is perhaps the most significant change in the user interface for the language in many years. Notably, this is the first release of, so-called, Quorum blocks, which adds a blocks-style accessible editor into Quorum Studio as the primary way of writing code. Second, a large and significant amount of change has been done around the user interface components in the language, from charts to buttons, to other controls. This includes visual styling across the board and improvements to accessibility and layout. Finally, we have made significant progress on improving support on mobile phones.")

        AddHeading(bodyDiv, "Data Science",3)
        bodyDiv:AddParagraph("We have made a number of improvements to data science packages broadly in this release. These include:")
        OrderedList list1
        list1:SetClassAttribute(listStyle)
        list1:AddListItem("A number of fixes to charts related to accessibility and the visuals of charts")
        list1:AddListItem("Added more customizable annotations to a variety of charts")
        list1:AddListItem("Added support for principal component analysis, including common rotations like varimax and oblimin.")
        list1:AddListItem("Added a series of common tests and metrics relevant for factor analysis")
        list1:AddListItem("Fixed a bug in data frame filtering where less than equals was broken")
        list1:AddListItem("Broadened data frame filtering so you can use parentheses. How wide to broaden filtering operations for databases or data frames is still an open question, but this particular addition seems reasonable because you cannot complete many common filtering operations without it")
        list1:AddListItem("Created documentation for many common statistical tests, from basic analysis of variance style tests to non-parametric equivalents or factor analysis")
        list1:AddListItem("Added some fixes to the descriptive statistics to avoid false results on non-numerical data.")
        list1:AddListItem("Fixed bugs with columns not preserving types in transform longer and wider")
        list1:AddListItem("Fixed a bug in correlation tables causing it to crash if you have a single correlation in the table")
        list1:AddListItem("Made significant improvements to the SVG system for charts, squashing a series of accessibility issues and making them more robust broadly")
        list1:AddListItem("Fixed a series of issues with accessibility and the shadow-dom implementation")
        list1:AddListItem("Fixed a whole host of small bugs across the data science and charting systems. Many of these are not terribly noticeable, like small changes to calculations or adjustments to graphics, accessibility, or visuals. These relatively small changes across the board makes the system broadly feel more polished than in the last release")
        list1:AddListItem("Changed a series of naming conventions across the data science library")
        list1:AddListItem("Added a number of helper actions into the DataFrame to assist in doing various statistical operations more easily")
        list1:AddListItem("Added actions for the regression models to predict from a separate DataFrame than the fit happened with. We suspect functionality like this will get added throughout the system over time")
        list1:AddListItem("Added tests for multivariate ANOVAs and factorial ANOVAs to the data science library")
        list1:AddListItem("Added more chart options and defaults to cover a wider array of selected columns and factors.")
        list1:AddListItem("Added a set of helper actions for various operations in DataFrame")
        list1:AddListItem("Added support for flowcharts")
        list1:AddListItem("Added support for N-dimensional charts. This works for many kinds of charts if N is considered the factor or selection, but not all chart types")
        list1:AddListItem("Renamed a number of statistical tests to be more in line with the meaning of what those statistical tests accomplish")
        list1:AddListItem("Removed a separate selection from the regression class. It now pulls its selection from the DataFrame, like the rest of the statistical tests and charts")
        list1:AddListItem("Added tests for variance assumptions for use with multivariate factorial ANOVAs. (i.e. Box’s M Test and factorial Levene’s Test)")
        list1:AddListItem("Added more helper actions for various operations in Matrix")
        list1:AddListItem("Added a test to conduct multivariate Linear Regressions")
        list1:AddListItem("Made a significant number of changes to accessibility with charts after testing across many devices and screen readers")
        list1:AddListItem("Added a test to conduct multivariate and factorial repeated measures ANOVA")
        bodyDiv:Add(list1)

        AddHeading(bodyDiv, "Blocks",3)
        bodyDiv:AddParagraph("This is the first release of Quorum that supports, so-called, "+dq+"quorum blocks"+dq+" inside of the Quorum Studio and online editors. Quorum's implementation is highly custom and home-grown, in order to account for accessibility across platforms and devices. While this is version 1 and in many ways we would call it beta, it has a considerable number of features related to using blocks in an editor. We say beta here in part because a few features we had planned for version one were pushed to a later release. An abridged final feature list for version 1 follows:")
        OrderedList list2
        list2:SetClassAttribute(listStyle)
        list2:AddListItem("Quorum blocks is available in Quorum Studio 5.0 and will be available in an online editor after release. Accessibility architectures are different in each place, but are designed to feel somewhat similar. We completed Quorum Studio first because it is easier for us to test in that environment compared to online.")
        list2:AddListItem("Blocks are now the default for all programmers, including us as the development team. By default, plain old text editors are no longer used, but in a pinch you can turn the blocks off, but our intent is for people to use them")
        list2:AddListItem("Created a highly customizable rendering pipeline for blocks inside of an editor. This turned out to be an important efficiency consideration")
        list2:AddListItem("Created a custom accessibility architecture for blocks. Each platform makes assumptions about blocks customized to that modality")
        list2:AddListItem("Changed the gutter architecture to be more flexible than it was. Notably, before they were tied specifically to textboxes")
        list2:AddListItem("Linked Quorum's compiler architecture to the creation of blocks in a whole bunch of strategic ways")
        list2:AddListItem("Added a wide variety of common keyboard affordances for blocks, including basic ones like add, delete, copy, paste, undo, redo, or others")
        list2:AddListItem("Created what we are internally calling a free-form block, which allows users to use common keyboard affordances to temporarily override the affordances of blocks if they want to. This allows users to use blocks more like a text editor when they want to and to use them more like blocks when they want to. In the academic literature, people have called similar concepts many names")
        list2:AddListItem("Created methods whereby freeform blocks automatically turn into the appropriate block types as you move around in the editor")
        list2:AddListItem("Created a mechanism for deletion we are calling 'Least Semantic Distance,' that tries to allow changes to the source code that minimizes what the deletion does to the source code, while retaining the general semantics beyond the deletion")
        list2:AddListItem("Created gutters for blocks for line numbers and Git support. Don't worry, we're sending text to git not little pictures ...")
        list2:AddListItem("Added a variety of templates. These are very similar to auto-complete in a traditional development environment and automate creating blocks in the environment. In the first version, we began with adding templates largely for control structures and core syntax and semantics")
        list2:AddListItem("Added a Find dialog for finding items from blocks")
        list2:AddListItem("Added code completion to blocks")
        list2:AddListItem("Added editor hints to blocks for auto-adjustment of source code. All editor hints supported in the text editor are similarly supported in blocks. This includes features like auto-finding use statements, auto-adjusting return values, and automatically generating getters and setters")
        list2:AddListItem("Added smart navigation keys, stemming from Catie Baker's work. They keys are the same as they have been in Quorum Studio for a long time, but in blocks")
        list2:AddListItem("Added shadowing and many other visual attributes to the blocks. We would like to especially help the Scratch team for their help in thinking through color considerations")
        list2:AddListItem("In the current design, we are using monospace Serif fonts for the blocks. There is considerable debate in the academic literature and, to put it mildly, <a href="+dq+"http://www.afb.org/afbpress/pubjvib.asp?DocID=jvib010703"+dq+">it is not a slam dunk either way</a> in regard to readability for anyone, let alone people that are blind or visually impaired. We made this decision for this release based on technical constraints for this release, but suspect we will revisit the design decision as more evidence comes out in the academic literature")
        bodyDiv:Add(list2)

        AddHeading(bodyDiv, "Quorum Native Libraries", 3)
        bodyDiv:AddParagraph("In this release, we rewrote from scratch the native library system for Quorum that touches the last mile on each operating system. Over the years, we have worked diligently to remove any natives where possible, but some operating system specific features really need a mechanism for calldowns. However, that system has grown organically for many years and in order to support blocks and future support for improvements on Apple, this change was necessary. This is a very complex system and we suspect it will take several release cycles to implement what we have planned here. Current improvements include:")
        OrderedList list3
        list3:SetClassAttribute(listStyle)
        list3:AddListItem("Native support is now in its own repository, quorum-natives")
        list3:AddListItem("On Windows, automation support is only partially complete, although some aspects of it are. Many of the much older libraries, while they still work, need to be moved over to the new approach")
        list3:AddListItem("On Mac, the system is partially automated. The current version still includes ARM support, although building it is still pretty clunky and picky. In the current version, build instructions are documented and we suspect it will get closer to fully automated over time as we make other changes on Mac")
        list3:AddListItem("On iOS, the build is now fully automated. For whatever reason, this system was easier to automate than the others")
        list3:AddListItem("Rewrote font support on iOS devices at the native level, moving it to largely the same system other operating systems are using")
        list3:AddListItem("Removed junk code from the iOS native stack")
        list3:AddListItem("Updated the freetype dependencies in the web assembly connectors for fonts in Quorum online and fixed issues around this system")
        bodyDiv:Add(list3)

        AddHeading(bodyDiv, "Android", 3)
        bodyDiv:AddParagraph("We included in Quorum 11 some changes to mobile support, including Android, especially  improving support for gestures and accessibility through Talkback. Support for Talkback in the first version is imperfect, but many features are supported and this is the first release we have had any support at all. Generally any program quorum generates includes these features automatically, which means if you run an Android program from Quorum, it should be much more accessible than before. Further, we now have a direct pipeline for adjusting Talkback support on this platform, which means it should be easier to make accessibility adjustments in the future.")
        OrderedList list4
        list4:SetClassAttribute(listStyle)
        list4:AddListItem("Added initial support for Talkback")
        list4:AddListItem("Added button support to talkback on Android")
        list4:AddListItem("Added radio button and checkbox support for Android")
        list4:AddListItem("Added basic support for Tree, TextBox and TabPane, although we suspect they need more work")
        list4:AddListItem("Improved gesture support on Android, including adding many defaults for charts. We suspect this will take more work in the future for all user interface controls, but it is a start")
        list4:AddListItem("Added chart support to Talkback on Android")
        list4:AddListItem("Fixed a bug in Android where Quorum would not load on modern tablets")
        list4:AddListItem("Fixed a bug on Android where it would not properly send the code to a tablet on Mac")
        bodyDiv:Add(list4)

        AddHeading(bodyDiv, "Apple Devices",3)
        bodyDiv:AddParagraph("In this release, we rewrote a considerable amount of the iOS pipeline for Quorum and made some improvements to the Mac implementation. This includes basically anything related to the system, like natives, how Quorum Studio integrates in the system, dialogs, and other crucial infrastructure. Needless to say, while many of the changes really just make iOS function correctly under the hood, the bigger point is that this architecture is getting more mature in ways that should make it easier to adjust in the future. Starting in this version, it should be possible to now deploy Apple programs to the App Store, although how to do so is still a little tricky.")
        OrderedList list5
        list5:SetClassAttribute(listStyle)
        list5:AddListItem("Fixed a bug in iOS where it would take an extremely long time to compile for the platform. It still takes a few minutes, but is much better")
        list5:AddListItem("Fixed a bug where you could not load on an ARM processor iOS applications")
        list5:AddListItem("Updated iOS to require version 16.2 or above. This is pretty recent, but the conclusion we came to was that we needed to make a clean break in this system for future proofing")
        list5:AddListItem("Dramatically improved the build system for how ios is managed on the native side. All native libraries are now pre-compiled and their creation is fully automated. This should make it much easier to change this system in the future")
        list5:AddListItem("Upgraded the mobivm dependencies to 2.3.18")
        list5:AddListItem("Updated the FreeType dependencies and changed to the more modern FreeType Native implementation for Mac and iOS")
        list5:AddListItem("Added support for font shadowing on Mac and iOS")
        list5:AddListItem("Fixed a bug where the location information was incorrect for fonts on iOS, both in the simulator and on physical devices")
        list5:AddListItem("Changed Quorum Studio to provide gradle output from a build on iOS. This is hard to read and not user friendly at all, but otherwise you really do not get any logging information from a program. This design decision is, in some ways, the lesser of two evils and we would be unsurprised if we adjusted this to make it more user friendly in the future. For now, though, at least you get feedback that the system is doing something")
        list5:AddListItem("Fixed a bug causing the system properties to incorrectly tell you you were running on an iOS simulator or device when you were not")
        list5:AddListItem("Fixed a bug related to detecting iOS properties on bootup before a game is created")
        list5:AddListItem("Added new bundling properties to the project properties dialog for physical devices like an iPhone or iPad. You can select your device and put in appropriate security credentials, which will allow you to send to the device")
        list5:AddListItem("Conducted a significant amount of refactoring in the mobivm plugins for iOS. This system still needs more cleanup and we plan to balance refactoring and features over the next few years on this operating system")
        list5:AddListItem("Added security properties to the dialog for apple devices to send it to physical devices")
        list5:AddListItem("Fixed a bug causing a crash if a keyboard was enabled ")
        list5:AddListItem("Fixed a bug preventing the accessibility system from receiving any messages from the overall application")
        bodyDiv:Add(list5)

        AddHeading(bodyDiv, "User Interface Updates",3)
        bodyDiv:AddParagraph("Quorum-11 highlights a significant number of changes in regard to the user interface system. We made these changes for many reasons, but first, a big one is that many of the colors and other properties, while accessible, are also subjectively ugly. We wanted to improve these systems to make them look more inline with other modern applications. Second, historically, the user interface libraries have been quite difficult to program. We improve that in this version with the introduction of the Form library. Forms are a new way to make small little applications or dialogs and we suspect they will be especially useful on mobile devices. We also suspect they will be useful in dialogs and, while not really the intent, possibly larger desktop applications. Generally, while we did not run a study for this particular feature, we hypothesize they are much easier to use than the old system of creating user interfaces.")
        bodyDiv:AddParagraph("At the end of the day, the big picture in this release is that we have significantly improved many of the default colors and other properties to make the controls look visually nicer. Many of these changes are subtle and some of the ones for individual controls are listed in their specific section. We have also improved the layout of many controls across the board to try and make them look nicer. These systems might make mobile programming easier, as there are now swappable pages that you can use in your applications on a number of platforms. Overall, the improvements are not yet perfect, but they are quite dramatic. Documentation for how to use this system will be left to future work, as we needed to build it first to figure out how it should work ourselves.")

        AddHeading(bodyDiv, "Forms",4)
        OrderedList list6
        list6:SetClassAttribute(listStyle)
        list6:AddListItem("Added a Form, Page, and Grouping class to represent the new forms library. Forms have a function similar to charts in that you do not need to make a Game, as this is automated behind the scenes.")
        list6:AddListItem("Created shared interfaces for the components so they feel similar when you use the APIs")
        list6:AddListItem("Added a series of helper actions to represent adding something, like a button, field, or some other control")
        list6:AddListItem("Created a set of different kinds of page subclasses that manage layout. The idea is to automate as much of this as possible, similarly to in html where you declare what you are adding to a page but let the system figure out how to position it all")
        list6:AddListItem("Added a default sizing procedure for forms based on fonts as a unit of size in relation to rows")
        list6:AddListItem("Added a series of lazy loading procedures for a variety of systems related to graphics and also accessibility")
        list6:AddListItem("Added a mechanism to share data across a user interface. This system is somewhat similar to the entity component model and is used in the Form and Pages classes, although it is not strictly the same and is intentionally limited, in addition to being typed. For example, you can ask the form to store a primitive value, like an integer or a string, which can be used across a set of pages. Similarly, you can store page specific content only in that page to be used across multiple controls in that page. ")
        list6:AddListItem("Added a variety of helper actions for common things you might want to do in a user interface, like laying things out, changing pictures or icons, or triggering basic sounds. Many of these are really just helper actions for Quorum systems that have long existed, but are designed to make everything feel easier to use.")
        list6:AddListItem("Added a set of groupings and pages for controlling the layout and look and feel")
        list6:AddListItem("Added a standard set of accessibility affordances for these new pages. Because the new system is significantly more constrained than the full user interface library is, this provides the user a relatively small set of accessibility defaults that can be adjusted for common things")
        bodyDiv:Add(list6)

        AddHeading(bodyDiv, "Text Fields and Text Boxes",4)
        OrderedList list7
        list7:SetClassAttribute(listStyle)
        list7:AddListItem("Fixed a bug in text fields where the cursor would get stuck to the left hand side")
        list7:AddListItem("Fixed a bug in text fields where the shift key was not working as expected")
        list7:AddListItem("Fixed a bug in text fields related to switching to the next token")
        list7:AddListItem("Fixed a bug in text fields related to dragging")
        list7:AddListItem("Added a border color to text fields by default")
        list7:AddListItem("Rounded the corners by default on text fields")
        list7:AddListItem("Fixed a bug in text fields where you could not set the font")
        list7:AddListItem("Added a focus highlight color to text fields")
        list7:AddListItem("Fixed an indexing bug related to text fields. They now match the way it is done in textboxes, which was the intent")
        list7:AddListItem("Fixed a bug in Text box where scrolling was tied to an old implementation")
        list7:AddListItem("Fixed a bug in the gutters for Text Box that caused the gutters implementation to be tied only to that control")
        list7:AddListItem("Modernized the textbox class to move it to the more modern input sets and other features. For whatever reason, this control was not updated as it should have been a few releases ago, probably because it's quite complex")
        list7:AddListItem("Fixed several issues with sizing and layout")
        list7:AddListItem("Fixed a bug causing editor hints to cause a crash under some circumstances")
        list7:AddListItem("Fixed several off by one bugs related to line selection in the editor. If others in the community observe another one, let us know, as they are easy to miss")
        list7:AddListItem("Added support to the web version for accessibility with text boxes and fields")
        bodyDiv:Add(list7)

        AddHeading(bodyDiv, "Checkboxes, Toggle Buttons, and Radio Buttons",4)
        OrderedList list8
        list8:SetClassAttribute(listStyle)
        list8:AddListItem("Fixed a bug in checkbox where it was not properly showing a focus highlight")
        list8:AddListItem("Fixed a bug in checkbox where it was not properly lining up the text with the check")
        list8:AddListItem("Changed the look of checkbox to make it look nicer")
        list8:AddListItem("Rounded the corners by default on checkboxes")
        list8:AddListItem("Fixed a bug where the text was not lining up with the buttons")
        list8:AddListItem("Adjusted the colors in radio buttons")
        list8:AddListItem("Fixed a bug with button groups causing toggle buttons to not be included in button groupings")
        list8:AddListItem("Fixed a bug in toggle buttons with the visuals showing incorrectly")
        list8:AddListItem("Fixed several crash bugs in button groups that caused them to be strangely tied to Radio Buttons in ways they were not supposed to be")
        bodyDiv:Add(list8)

        AddHeading(bodyDiv, "Buttons",4)
        OrderedList list9
        list9:SetClassAttribute(listStyle)
        list9:AddListItem("Rounded the corners on buttons")
        list9:AddListItem("Changed the default colors of buttons for many of its default states")
        list9:AddListItem("Fixed a bug where buttons would not properly center their text")
        list9:AddListItem("Fixed a bug where button text would appear at the wrong size by default")
        list9:AddListItem("Fix several bugs with colors, especially in light mode, with buttons")
        list9:AddListItem("Changed the default focus and other colors to make it more visually obvious when something has the focus")
        bodyDiv:Add(list9)

        AddHeading(bodyDiv, "Lists",4)
        OrderedList list10
        list10:SetClassAttribute(listStyle)
        list10:AddListItem("Fixed an issue with lists displaying text outside its bounds")
        list10:AddListItem("Set reasonable defaults for lists in terms of sizing")
        list10:AddListItem("Lists can now scroll in a container")
        list10:AddListItem("Fixed an issue where lists would not properly highlight the selection")
        list10:AddListItem("Fixed several bugs related to accessibility with lists, including online and offline")
        bodyDiv:Add(list10)

        AddHeading(bodyDiv, "Quorum Studio",3)
        OrderedList list11
        list11:SetClassAttribute(listStyle)
        list11:AddListItem("Fixed a bug in toolbar in dark mode that broke colors with the new color changes")
        list11:AddListItem("Changed the backend system for managing iOS applications")
        list11:AddListItem("Added several iOS related properties like signing identities and provisioning keys. These are only relevant if you want to put an iOS app onto a physical device")
        list11:AddListItem("Added a version key to the project properties dialog")
        list11:AddListItem("Changed the project location to a textbox so you can copy paste it to the clipboard")
        list11:AddListItem("Fixed a bug in Quorum Studio where it would not stop a process if generated for iOS")
        list11:AddListItem("Redesigned the Project Properties dialog from scratch using the new Form system. This substantially cut down on the complexity of this dialog, which should make it easier to maintain and look not so strange at different sizes visually")
        list11:AddListItem("Rewrote the Quorum Studio Properties dialog from scratch. It now exposes many more properties and removes the old login system, which was no longer used anyway")
        list11:AddListItem("While blocks are now the default in Quorum Studio and are intended to be used for all applications by design, we have exposed a property to allow you to turn it off")
        list11:AddListItem("Separated the Android and Apple tabs in the project properties dialog")
        list11:AddListItem("Removed the WebServer settings from the project properties dialog. Quorum's new architecture for web servers is a rewrite of the original and is now dramatically more robust, sufficiently so for us to use on our live servers. While this setting was removed, you also no longer need it to run web servers.")
        list11:AddListItem("Rewrote the find in project Dialog from scratch. The dialog no longer appears like it was on an all night bender fighting off an army of angry porcupines")
        list11:AddListItem("Upgraded the find in project dialog, and the Find dialog, to account for blocks mode")
        list11:AddListItem("Upgraded the version of Font Awesome to the latest free version")
        list11:AddListItem("Rewrote the create new project dialog from scratch. Previously, it used a tree and looked visually pretty bad at various zoom scales, despite being accessible. Now, it has a set of tabs and toggle buttons and looks visually quite a bit nicer. ")
        list11:AddListItem("Added a series of additional new project types, including those for mobile, data science, sound, various scenes, and other project ideas. It should now be a bit easier to get started with any of these project types")
        list11:AddListItem("Refactored the new project dialog to make it far less rigid and easier to add new project types in the future")
        bodyDiv:Add(list11)

        AddHeading(bodyDiv, "Other Quorum Standard Library Changes and Fixes",3)
        OrderedList list12
        list12:SetClassAttribute(listStyle)
        list12:AddListItem("Fixed a bug in JavaScript mode that was causing a crash with input statements. Special thanks to Gina Fugate and her students for reporting this one.")
        list12:AddListItem("Fixed an issue related to the use of solo variable declarations. Specifically, there was an edge case where you could use a variable and then toss it off the stack. Technically, this would do no harm, but in evaluating it, it exposed a number of small and unintentional issues in the parser stack, which are also now resolved. Broadly, this change should make it slightly harder to make particular kinds of likely unintended semantic errors")
        list12:AddListItem("Fixed a bug in the parser that was not quite aggressive enough in finding potential user errors on the right hand side of an expression. This wasn't exposed in the test suite and now is")
        list12:AddListItem("Added a few new compiler error categories related to statements and expressions where the parser cannot determine the user's intent")
        list12:AddListItem("Fixed a bug in Process that were causing some applications to output from standard output very slowly through the listener architecture")
        list12:AddListItem("Fixed a gross bug in the font system that was preventing fonts from working at larger sizes. This especially impacted iOS devices, but was true on desktop as well. The web was not impacted")
        list12:AddListItem("Fixed a bug in fonts on the web that caused them to look visually torn under certain conditions.")
        list12:AddListItem("Added font shadow support broadly into fonts across all platforms, in preparation for blocks. We did this in part because the block text was somewhat difficult to read without some outlining and so we chose an approach for the text similar to how closed captioning is often done. This feature should be usable anywhere in a font, but note that the calculations can get a bit wild so turning this setting on may cause a font to look funny for some fonts at some sizes in some locations. While it works just fine, we recommend testing carefully if custom fonts are used")
        list12:AddListItem("Added support for raw socket connections with the SocketConnection class")
        list12:AddListItem("Added some additional security code related to backend web servers")
        list12:AddListItem("Added support for taking screenshots. This is currently limited to web applications, but is a start")
        list12:AddListItem("Added support for loading Base64 representations to images, which makes it easier to load icons and other representations")
        list12:AddListItem("Fixed a bug in code completion causing it to work incorrectly for implicit classes. This bug was supremely annoying in previous versions of Quorum Studio and appears to significantly improve code completion under some circumstances")
        list12:AddListItem("Fixed a variety of small parser bugs causing the system to incorrectly determine the location of a particular programming construct. These small bugs did little harm in previous releases as they would not impact compilation. However, they were causing issues with the new blocks layer, which depends on the synchronization between text and the visuals")
        list12:AddListItem("Fixed a bug in labels in web accessibility that caused it to work through a screen reader differently than we intended")
        list12:AddListItem("Fixed a bug in web accessibility that could sometimes cause screen readers to speak the same information twice")
        list12:AddListItem("Fixed several other small issues in accessibility in relation to accessibility on the web")
        bodyDiv:Add(list12)

        AddHeading(bodyDiv, "Quorum Live Server",3)
        OrderedList list13
        list13:SetClassAttribute(listStyle)
        list13:AddListItem("Fixed a bug that caused the server to hang and not respond if the compiler did not respond to a compilation request")
        list13:AddListItem("Set some more sensible timeouts in the case of problems. Turns out, forever was a little too long to wait")
        list13:AddListItem("Fixed the docker-compose scripts to trigger restarts in the unlikely case of something totally failing")
        list13:AddListItem("Unless we missed a piece, the entire server backend in the live server is now written in Quorum. This includes the database and cache connections, optimizations, server responses (e.g., cookies) and other attributes. This rather dramatically increased performance across the backend")
        bodyDiv:Add(list13)
    end

    action QuorumStudio4_6Notes(Section bodyDiv)
        text listStyle = "list-disc list-outside pl-8"
        AddHeading(bodyDiv, "Quorum Studio 4.6 and Quorum 10.6: January 9th, 2023", 1)
        bodyDiv:AddParagraph("We have created a small maintenance release for Quorum Studio. This release was made because in Quorum 10.5, there was a change to the way shaders and batching worked in the graphics engine, which was causing several interface components to render a bit funny. We like funny as much as the next folk, but this was not intended. While working on those systems, we noticed a number of performance and memory issues that we have now fixed. In internal testing, the performance improvements compared to Quorum 4.0.3 are quite substantial. Notes follow:")
        OrderedList list1
        list1:SetClassAttribute(listStyle)
        list1:AddListItem("Fixed an issue with checkboxes and radio boxes in terms of rendering, which was causing them to look visually like they were not responding. Accessibility was not impacted and they still worked under the hood.")
        list1:AddListItem("Fixed several small graphical and unmemorable glitches in Quorum Studio. We say unmemorable because we cannot really remember what they were, but they annoyed us so we fixed them.")
        list1:AddListItem("Significantly reduced the memory footprint of the Matrix class. The difference is quite large. In internal testing, it is in the ballpark of a 90% reduction, although the actual number depends on the size of the matrix.")
        list1:AddListItem("Removed instantiating Object from the multiple inheritance architecture, rewriting the semantics of what it means in Quorum. Assuming we did not make a mistake, users will not observe any difference in how they use the language, however the memory footprint of Quorum has been significantly reduced because of this change. In Quorum Studio, for example, we are clocking a reduction of about 150 million unneeded objects no longer being created. The objects were small in size, but there were a lot of them, which means that in our internal tests, the memory footprint dropped by about 5%. Other tests, like charts, were more dramatic, with nearly a 35% reduction achievable only by recompiling the same program.")
        list1:AddListItem("Because of the change to the multiple inheritance system, Quorum throws away less useless objects and no longer has to create them, reducing garbage collection. In internal tests, we are noticing about a 25% reduction in the amount of memory reported by the operating system after bootup")
        list1:AddListItem("Completed the multiple inheritance change in JavaScript mode as well. This shrinks the overall rather large uncompressed standard library file by about 1.5%, due to cutting out a series of operations that were no longer needed in this version. The memory optimization impact was not carefully evaluated, but it should have theoretically similar impacts to bytecode modes.")
        list1:AddListItem("On ARM processors for Mac, after all of the optimizations and comparing the Intel version of 4.0.3 to ARM, we are noticing a 57% decrease in bootup time and a 9% drop in CPU usage. ")
        list1:AddListItem("Significantly reduced memory consumption of scatter plots. While it depends on what you pass, in our test, which used an approximately 1200 x 15 sized data frame, this reduced memory consumption by 88.5% and dramatically sped up rendering and loading speeds. While this is nice in general, it also improves screen reader accessibility speed significantly.")
        list1:AddListItem("Because of the inheritance changes, Quorum Studio 4.6 is not binary compatible with previous versions. We have added a double bootstrapping function to Quorum to auto-build Quorum Studio using both an overridden standard library and a source compiler. We recognize this is barely English, but are really just saying that we added some code to make it easier to make breaking changes to the backend compiler in the future and to integrate those automatically in Quorum Studio for usage in our tests.")
        list1:AddListItem("Replaced the table implementation in matrix with the newer DataFrame class behind the scenes")
        list1:AddListItem("Added a VectorColumn for more optimized numerical operations in DataFrames. This removes auto-boxing inside of a frame, which means if this column is used, no undefined values can be allowed. It is a speed trade-off and optional")
        list1:AddListItem("Added an optimization to the Comparison class for default primitive sorting")
        list1:AddListItem("Added support for Comparisons inside of the Vector class")
        list1:AddListItem("Fixed a memory leak in ShaderProgram causing a considerable number of Text objects to be auto-boxed accidentally")
        list1:AddListItem("Changed the Item and Control classes to not instantiate all of its arrays by default, which saves memory")
        list1:AddListItem("By default, the Regression class no longer retains matrices related to the computations it made. This passes all of our internal unit tests and on code inspection, seems ok. The purpose is to reduce memory consumption after the regression is done calculating and this is significant for large files. That said, if for some reason we cannot think of, a user needs that object retained after computation, a flag may be needed to support it, even if the default is to destroy it.")
        list1:AddListItem("Fixed a bug with ChartComparison where it was creating and throwing away extra objects")
        list1:AddListItem("Lowered the default number of vertices used in the Polygon class, as it was not using the vertices for the common case. ")
        list1:AddListItem("Fixed a bug in Polygon that was creating an extra vector that was being thrown away.")
        list1:AddListItem("Fixed a bug where HTML reserved characters were not properly handled when processing SVG images.")
        list1:AddListItem("Fixed an issue where if you were on an ARM chip on Mac, the updater would grab the Intel based version of Quorum Studio. Users need to re-download from the website to fix this, but it should be easier to update from here on")
        list1:AddListItem("Migrated file downloads to github releases. We will be using this system from here forward to reduce server load and just generally more conventional.")
        list1:AddListItem("Removed the final PHP file from the server backend. Quorum now uses only Quorum for hosting Quorum on the Quorum server. ")
        list1:AddListItem("Fixed a bug in Quorum Studio where in the code completion, if you had an empty set returned, it would be too aggressive on showing you an empty window")
        list1:AddListItem("Changed the auto-update scripts to account for the change to github")
        list1:AddListItem("Fixed a bug in text fields where double click was not working")
        list1:AddListItem("Fixed a view in text fields where the view was not correctly updating visually with the cursor in some situations")
        list1:AddListItem("Fixed a bug in text fields where triple click was not working")
        bodyDiv:Add(list1)
    end

    action QuorumStudio4_5Notes(Section bodyDiv)
        text listStyle = "list-disc list-outside pl-8"
        AddHeading(bodyDiv, "Quorum Studio 4.5 and Quorum 10.5: December 7th, 2022", 2)
        bodyDiv:AddParagraph("Quorum Studio 4.5 is the next major version of Quorum Studio and contains a series of enhancements and changes. As our current focus is on especially our move toward adding accessible blocks to the language, in addition to accessible data science, this is an intermediary release along that path. This is also the first release to officially support the M1 mac, as we slowly move toward improving our Mac support. For this first release supporting this chip, those on M1 chips need a separate download on the website and should not use the auto-updater. ")

        AddHeading(bodyDiv, "Accessible Data Science", 3)
        bodyDiv:AddParagraph("We have added support for a considerable number of statistical tests and procedures, along with many bug fixes. We did a considerable amount of refactoring along the way, which means we should be ready by next summer to have users try the statistical aspects of the system")

        OrderedList list1
        list1:SetClassAttribute(listStyle)
        list1:AddListItem("Fixed a host of issues related to charts across the board")
        list1:AddListItem("Added support for a variety of parametric tests, including repeated measures anova, sphericity tests, chi-squared, shapiro-wilk, and others")
        list1:AddListItem("Added support for a variety of non-parametric tests, including Mann-Whitney, Kruskal-Wallis, Friedman, and others")
        list1:AddListItem("Adjusted, improved, and implemented various corrections, like Bonferroni, Tukey, Huynh-Feldt, Games-Howell,and Greenhouse-Geisser")
        list1:AddListItem("Added a set of convenience actions related to obtaining the results of statistical tests")
        list1:AddListItem("Added convenience actions for various kinds of statistical actions, like obtaining correlation matrices")
        list1:AddListItem("Added a helper action for generating scree plots for factor analysis")
        list1:AddListItem("Added a set of tests for factor analysis, including Bartlett, Kaiser-Meyer-Olkin, and others")
        list1:AddListItem("Adjusted and improved Accessibility across many chart types")
        list1:AddListItem("Added a feature for live captioning of charts as you navigate them")
        list1:AddListItem("Fixed many bugs related to statistical actions, which now have much more rigorous testing related to what they output")
        bodyDiv:Add(list1)

        AddHeading(bodyDiv, "Planning for Accessible Blocks", 3)
        bodyDiv:AddParagraph("The Quorum team is targeting adding a block mode to Quorum online and Quorum Studio by approximately Quorum Studio 5 and Quorum 11. Along the way, we have been developing a custom accessible rendering pipeline related to such systems and this includes at least the following features:")
        OrderedList list2
        list2:SetClassAttribute(listStyle)
        list2:AddListItem("Expanded the shader system to account for the design of blocks. This way, you do not need images or SVGs for rendering and it can be done in hardware. ")
        list2:AddListItem("Created a hardware batched rendering system generally, with especially an eye out for blocks. This significantly improves performance for graphics across many systems, but is especially useful for charts and blocks. User interfaces do not yet take advantage of this approach, but may also benefit in the future from it")
        list2:AddListItem("Migrated the code for the scene editing system from Quorum Studio to the Quorum Standard Library. The purpose in this was to have accessible scene editing offline and online, available both inside and outside of Quorum Studio. We hope this technology could make it possible for curriculum like Computer Science Discovery to be fully accessible")
        list2:AddListItem("Integrated a number of fixes to Quorum's shaders, including those impacting Pie Charts on Android")
        bodyDiv:Add(list2)

        AddHeading(bodyDiv, "Database and Web Services", 3)
        bodyDiv:AddParagraph("The Quorum Database library has been a work in progress since publishing our paper on polyglot programming. We are now feature complete with this work and are pushing the system live across our stack. Finishing this system has significantly improved the ability of Quorum to be used in a common docker container for backend web services.  Now that it is finally going live, the most current features include:")
        OrderedList list3
        list3:SetClassAttribute(listStyle)
        list3:AddListItem("We implemented a series of minor bug fixes in the database system. ")
        list3:AddListItem("Pushed the database stack live and replaced any database related code with Quorum")
        list3:AddListItem("Added a series of web service libraries necessary for server side scripting in Quorum")
        list3:AddListItem("Replaced the Quorum live server's PHP system with Quorum, with the exception of the download page, which we didn't bother with this release")
        list3:AddListItem("We have added a considerable amount of documentation for the database system onto the Quorum reference page")
        list3:AddListItem("Because PHP has been replaced with Quorum, Quorum's live server can now service compilation requests an order of magnitude faster than before")
        list3:AddListItem("Added a way to send raw network requests from TCP in the SocketConnection class in Quorum")
        bodyDiv:Add(list3)

        AddHeading(bodyDiv, "General Features", 3)
        bodyDiv:AddParagraph("We made a number of improvements to the system broadly. Big picture, these included:")
        OrderedList list4
        list4:SetClassAttribute(listStyle)
        list4:AddListItem("Added support on mac for the M1 processor to Quorum-language and integrated it additionally into Quorum Studio. This significantly improves speed on this platform. Machines on Intel based chips are still supported")
        list4:AddListItem("Rewrote the native libraries on Mac to considerably clean it up for future development")
        list4:AddListItem("Added preliminary support for the Talkback screen reader on Android. This is a preliminary proof of concept release targeting charts and is not yet feature complete. It is, however, a start and now that we have successfully tapped in, it can be adjusted over time if there is interest from the community")
        list4:AddListItem("Fixed a number of minor issues in the Quorum compiler")
        bodyDiv:Add(list4)
    end

    action QuorumStudio4_0Notes(Section bodyDiv)
        text listStyle = "list-disc list-outside pl-8"
        AddHeading(bodyDiv, "Quorum Studio 4.0 and Quorum 10.0: June 15th, 2022", 2)
        bodyDiv:AddParagraph("Quorum 10.0 and Quorum Studio 4.0 is the 2022 release for the programming language and corresponding development environment. We focused considerably for 10.0 on improvements to the language in regard to making it better for data science. This includes significant improvements to charts, many data science actions, and the database system. Besides this, Quorum 10 includes a significant change to the look and feel of any user interfaces built into the system, including Quorum Studio. There are many new colors across everything and are swappable as light or dark modes. As always, we have continued to tweak and improve accessibility. With this release, we focused on getting the ground work in place for a future Quorum Blocks mode, which involved a great deal of refactoring behind the scenes.")
        AddHeading(bodyDiv, "Data Science Improvements", 3)
        bodyDiv:AddParagraph("We made a number of improvements to how Data Science is done in Quorum for this release. This includes a myriad of changes to the DataFrame class, focusing on creating a set of helper actions and inspired by similar actions in the R programming language. We created these on recommendation from a statistical consultant (thanks, Amelia McNamara!) and plan to continue adding helper actions in the future. Big picture, the idea is, while we can always traverse and adjust a DataFrame manually, we are trying to make using DataFrames less of a hassle.")
        bodyDiv:AddParagraph("For this release, there are several big changes. First, we have continued on our limited polyglot integration by adding actions similar to R's mutate. This allows for the user to create new columns, calculated on the fly, using Quorum's normal syntax. Second, we added/refactored convenience actions for outputting to the screen limited versions of frames and additionally added actions to remove or replace undefined values, in addition to column and row splitting. This does not cover all the transformations we want to add, but it is a start and these are potentially useful.")
        bodyDiv:AddParagraph("Finally, we added a considerable amount of documentation for this release. This includes details on how you make DataFrames, control them, manage charts, and other factors. Detailed notes follow:")
        OrderedList list1
        list1:SetClassAttribute(listStyle)
        list1:AddListItem("Added a GetHeaders action to DataFrame to find all the headers of the columns without traversing them")
        list1:AddListItem("Added a new AddColumn action to DataFrame, which allows you to run a script to calculate the new column. For example, x1 + x2 * 3 would multiply all values in x2, add the values in the row for x1, then make a new column with this value ")
        list1:AddListItem("Added a new action to DataFrame called CalculateColumn(text) that also uses a script, but instead of adding it, returns it")
        list1:AddListItem("Added a convenience action to DataFrame called CalculateMaximumRows. It, perhaps not surprisingly, calculates the maximum number of rows across the columns in the DataFrame ")
        list1:AddListItem("Added a way for DataFrameColumn objects to understand the results from the runtime interpreter. This allows various kinds of mutation and filtering actions by letting sub-classes of the column interpret the results during execution")
        list1:AddListItem("Added two actions to DataFrame to allow for outputting only a portion of a DataFrame. They are ToText(integer) to get a number of rows and ToText(integer, boolean) to output a number of rows with or without a header")
        list1:AddListItem("Added two convenience actions for removing undefined values from a DataFrame. This includes RemoveUndefinedRows and RemoveUndefinedRowsFromSelectedColumns, which remove undefined values either from the entire frame or taking into account selected columns")
        list1:AddListItem("Added two convenience actions for replacing undefined values in DataFrame, similar to the removal actions")
        list1:AddListItem("Added the ability in each column type to replace all its undefined values with a separate value. If the value is not valid for a particular column type, it is ignored")
        list1:AddListItem("Added in the ability to split a column up with a delimiter from the DataFrame")
        list1:AddListItem("Added in the ability to split a data frame by rows, including random splits for selecting random sub-selections of the entire frame")
        list1:AddListItem("Added in a ColumnSplitter class that lets us override how column splitting is handled, while letting the base class handle all the traversals.")
        list1:AddListItem("Added in a way to select rows in a DataFrame. This currently does not impact chart creation or other operations")
        list1:AddListItem("Added in a way to select arbitrary cells in the DataFrame. This currently does not impact chart creation or other operations")
        bodyDiv:Add(list1)
        AddHeading(bodyDiv, "Database Changes", 3)
        bodyDiv:AddParagraph("Quorum 9.5 introduced a new Database system for Quorum and we have continued this work in Quorum 10. While we are using this new system internally for projects, we would argue it is still in beta. That said, we did make a number of improvements to it, including continued work to make that system feel seamless when used across Quorum. In terms of documentation, we have not yet written any, because again we still consider this version a public beta. Ultimately, we are planning on switching the Quorum live and beta servers to this system entirely and once we do, that is the flag for the team that it is ready for production. We will likely write documentation at that point. Notes for the changes and improvements follow:")
        OrderedList list2
        list2:SetClassAttribute(listStyle)
        list2:AddListItem("CreateTable can now add text columns with no size specified. These text columns can store a string with a max length of 65,535")
        list2:AddListItem("Added auto increment to integer columns in a CreateTable query")
        list2:AddListItem("Number, Boolean, DateTime, Date, and Timestamp columns can be added to a CreateTable query")
        list2:AddListItem("The CreateTable query class now has constraints to a column. Examples of constraints are unique, not null, and default values")
        list2:AddListItem("The CreateTable query class now supports setting a column to be the Primary Key. The primary key is a column in the table that has to be unique and cannot be null")
        list2:AddListItem("Added an ignore flag to the Insert query. When the ignore flag is true, if there is an error the insert will not stop execution")
        list2:AddListItem("Insert queries now allow for adding booleans and undefined values")
        list2:AddListItem("Fixed issue causing sorts to be added to Find queries")
        list2:AddListItem("Added HasTable and GetLastInsertedID actions to the Database class. GetLastInsertedID will only work if an insert query has been executed before calling that action")
        list2:AddListItem("QueryResult now supports returning values as a boolean, number, and a DateTime object")
        bodyDiv:Add(list2)
        AddHeading(bodyDiv, "User Interface Library Changes", 3)
        bodyDiv:AddParagraph("The user interface library in Quorum has undergone major changes for Quorum 10. Notably, while the team has put in considerable effort on accessibility in screen readers, visual look and feel of the library has historically lagged behind. In this release, we have re-imagined the  colors, borders, backgrounds, and many other small visual changes. Individually, many of these features are small, but overall they make a difference, we think, in terms of readability, usability, and accessibility. Further, because we want to ultimately have different versions for people with different visual needs and wants, we now include by default a light and dark mode in the system, which can be used in any Quorum generated user interface. Users can also create their own theme, with any visual properties and colors they wish, and apply them across the entire user interface system all at once. Detailed notes follow:")
        OrderedList list3
        list3:SetClassAttribute(listStyle)
        list3:AddListItem("Added a new shader for rendering controls in the user interface")
        list3:AddListItem("Refactored across many of the controls, providing some consistency across the rendering pipeline")
        list3:AddListItem("Added an InterfaceOptions class, which allows all user interface controls to reference standard colors and options")
        list3:AddListItem("Changed all of the major controls to coordinate with the InterfaceOptions class, allowing custom properties and colors to be more uniform everywhere")
        list3:AddListItem("Added Dark and Light modes for all user interface controls into the standard library")
        list3:AddListItem("Fixed a series of small bugs in the user controls where colors and options were hardcoded")
        list3:AddListItem("Added support for rounded corners to many controls")
        list3:AddListItem("Changed the default setting in tabs to use rounded corners")
        list3:AddListItem("Fixed a bug causing borders to look inconsistent in many controls")
        list3:AddListItem("Added a drop-shadow to modal dialogs so that that they look visually more like dialogs")
        list3:AddListItem("Re-imagined all of the default colors inside of the standard user interface controls. They should now be slightly easier to read and identify")
        list3:AddListItem("Adjusted colors and highlights to make the component that has the focus or the selection more visually obvious")
        list3:AddListItem("Added a screen reader feature equivalent to what is called roledescription on the web. This allows us to customize screen reader information in specific ways online. We observe not all screen readers read out the property by default")
        list3:AddListItem("Fixed a bug in tabbed panes where closing the last one on the left-most side would cause the rendered item to retain its rendering if a new item was auto-selected")
        list3:AddListItem("Added a drop-shadow feature to menus, pop-up menus, and dialogs")
        bodyDiv:Add(list3)
        AddHeading(bodyDiv, "Mobile Changes", 3)
        bodyDiv:AddParagraph("For this release, we added a series of default gesture detectors into all supported mobile platforms. These platforms do work slightly differently in regard to how they manage gestures, which ones they support, and other attributes, but Quorum now uses a system that standardizes these. For this release, while gestures are now available, they are not included in the default input sets for each control, as this would take some design work across the systems that is not yet complete. For example, charts, buttons, textboxes, trees, or other controls would likely benefit by having default gestures, but we need to figure out what those should be and write them consistently everywhere. Detailed notes follow:")
        OrderedList list4
        list4:SetClassAttribute(listStyle)
        list4:AddListItem("Added support for gestures to both Android and IOS devices")
        list4:AddListItem("Added gesture support into the InputSets, allowing any user interface control to add default gestures")
        Array<text> gestures
        gestures:Add("Single Tap")
        gestures:Add("Double Tap")
        gestures:Add("Long Press")
        gestures:Add("Pinch (Zooming)")
        gestures:Add("Pan")
        gestures:Add("Swipe")
        list4:AddListItem("Gestures added:" + MakeNestedOrderedList(gestures))
        list4:AddListItem("Added vibration control into iOS mode")
        bodyDiv:Add(list4)
        AddHeading(bodyDiv, "Quorum Studio Changes", 3)
        bodyDiv:AddParagraph("Piggybacking on the new user interface changes in Quorum 10, Quorum Studio 4 incorporates these changes and makes a series of visual improvements. At a high-level, this includes a number of long-standing rasterization issues. Examples include issues with fonts, borders, and background colors, which sometimes were hard-coded around various interface controls in the standard library and in Quorum Studio. This significantly improves the look and feel of Quorum Studio, provides some user options, and slightly raises contrast in both modes. Detailed notes follow:")
        OrderedList list5
        list5:SetClassAttribute(listStyle)
        list5:AddListItem("Added light and dark mode")
        list5:AddListItem("Changed all of the icons in Quorum Studio to account for color modes")
        list5:AddListItem("Changed all of the icons and icon colors in the toolbar. They now can render at any resolution without obvious rasterization")
        list5:AddListItem("Added a new user preference for color mode in the Quorum Studio Properties dialog")
        list5:AddListItem("Fixed the splash screen so that it renders more sensibly at more zoom levels")
        list5:AddListItem("Conducted an accessibility pass and changed all of the colors for all modes. Broadly, the contrast is now higher and everything should be more readable")
        list5:AddListItem("Added in the most recent version of Awesome Font, which is used for rendering the toolbar")
        list5:AddListItem("Updated the project system to use the JSON reader in Quorum 10, which has slightly different rules for processing of arrays")
        list5:AddListItem("Keymaps are now versioned, due to changes in the InputSet system to account for gestures")
        list5:AddListItem("By default, if Quorum Studio loads with a keymap version less than 2, it destroys the file and resets to the default. The reason for this, while mildly annoying if the file is overridden, is that the codes are now calculated differently and not doing this would be much more confusing")
        list5:AddListItem("Fixed a bug in the about box causing it to not be accessible. Special thanks to Amanda Rodda for noticing this problem")
        list5:AddListItem("Significantly improved the check for updates window so that it, oh ... I don't know, actually tells you useful information about what it is doing. Previously, while it did technically update, if anything went wrong it twiddled its thumbs in unhelpful ways")
        list5:AddListItem("Removed the requirement to login to get updates from the update server")
        list5:AddListItem("Added a pop-up window when you try to close a number of tabs that were dirty, warning you that you may lose work")
        list5:AddListItem("Changed all of the colors and icons in the code completion window")
        list5:AddListItem("Fixed a bug in code completion causing the window to close with certain keypresses if there was no code completion options")
        list5:AddListItem("Made the code completion window generally less finicky as you type")
        list5:AddListItem("Added a new entry to code completion that tells you if there are no available options")
        list5:AddListItem("As always, changed some of the splash screen messages for no reason other than Stefik's personal amusement")
        bodyDiv:Add(list5)
        AddHeading(bodyDiv, "Web Changes", 3)
        bodyDiv:AddParagraph("For the web, we continued to work on making Quorum's web library more accessible and usable overall. We also updated the web library to include all of the features in Quorum 10, including shaders, light and dark mode, and other features. Detailed notes follow:")
        OrderedList list6
        list6:SetClassAttribute(listStyle)
        list6:AddListItem("Improved Shadow DOM support in the web libraries")
        list6:AddListItem("Changed the way focus is managed inside of the online development environments")
        list6:AddListItem("Changed Quorum's File class to more sensibly manage data from the web")
        list6:AddListItem("Added multiple file support to the development environment back-end. Technically, you cannot yet use multiple files in the environments, but all of the server side and database work is now completed")
        list6:AddListItem("Significantly optimized and updated Quorum's database backend on the live server")
        list6:AddListItem("Fixed several issues with font loading on the web")
        list6:AddListItem("Fixed the embedded development environments so they embed properly")
        bodyDiv:Add(list6)
        AddHeading(bodyDiv, "Charts", 3)
        bodyDiv:AddParagraph("For charts, our primary goal right now is in making the charting system more mature. Charts are quite complex visually and what methods make them as accessible as possible on each platform is a tricky question. At a high-level, we significantly improved the visuals, interactions, and flexibility of charts overall. We also squashed a considerable number of bugs in the chart system and improved how it renders itself to scalable vector graphics (SVG) files. Detailed notes follow:")
        OrderedList list7
        list7:SetClassAttribute(listStyle)
        list7:AddListItem("Added a regression line to scatter and line plots")
        list7:AddListItem("Added a trendline to the histograms")
        list7:AddListItem("Added the ability to use subtitles on charts")
        list7:AddListItem("Added use of 2 factors/1 column in box and violin plots")
        list7:AddListItem("Added annotations to bar/pie/scatter/and line charts. By default, the pie chart will show a (%) annotation, the other charts’ annotations can be shown using ShowAnnotations(true)")
        list7:AddListItem("Created a system for what is sometimes called a 'facet grid' in languages like R. This included separation by series, which separates the charts into subcharts by color/legend entry, and separate by factor, which separates the charts into subcharts by the factor used.")
        Array<text> svg
        svg:Add("Added viewbox settings to allow for scaling image size dynamically on the web")
        svg:Add("Update the LineChartWriter to use the ChartWriter parent class and updated accessible navigation")
        svg:Add("Added some basic XML escaping to the ToText actions in the SVG classes to fix issues with special characters (e.g., &, <, >, “)")
        list7:AddListItem("Fixed a variety of issues in the SVG rendering of charts" + MakeNestedUnorderedList(svg))
        list7:AddListItem("Reimagined accessibility in charts. We think there are quite a few more improvements that can be made, but also find the system much easier to use in a screen reader now")
        list7:AddListItem("Added borders and visual updates on many aspects of the charts to make them look visually nicer")
        list7:AddListItem("Fixed a number of small layout issues in charts")
        list7:AddListItem("Changed the selection of an item in bar charts and histograms to have a small arrow pointing at a bar instead of an outline.")
        bodyDiv:Add(list7)
        AddHeading(bodyDiv, "Other Changes", 3)
        OrderedList list8
        list8:SetClassAttribute(listStyle)
        list8:AddListItem("Fixed a bug in the compiler causing casting a value from text to a boolean to fail under some circumstances in JavaScript mode. It now correctly throws an error under these circumstances and a test case has been added")
        list8:AddListItem("Fixed a small bug in the compiler causing errors to be thrown as you type in Quorum Studio")
        list8:AddListItem("Fixed a bug in a JavaScript plugin that was incorrectly identifying a not a number as not a not a number. We have concluded that this line in our release notes is confusing, but fun to say and technically accurate, so we're keeping it")
        list8:AddListItem("Fixed an esoteric bug in the font system causing it to only accept font values in ASCII. Look, we were accidentally casting down in low level C to an 8-bit integer, ok? ")
        list8:AddListItem("Fixed a nasty bug in JSON processing related to nested arrays. Unfortunately, this change is not backwards compatible and programs using JSON in Quorum 10 that make use of this feature will need to be updated")
        list8:AddListItem("Added a test case for a mildly complicated nested array in JSON")
        bodyDiv:Add(list8)
        LineBreak break
        bodyDiv:Add(break)
    end

    action QuorumStudio3_5Notes(Section bodyDiv)
        text listStyle = "list-disc list-outside pl-8"
        AddHeading(bodyDiv, "Quorum Studio 3.5 February 4, 2022", 2)
        bodyDiv:AddParagraph("The overall technical architecture for Quorum Studio 4.0 and Quorum 10.0 is significantly different than in previous software releases on the project. In order to get adequate testing before the official release in the summer of 2022, we are putting up a middle of the road version of the technologies to make it easier for our team, and the community, to test everything. As this version of Quorum and Quorum Studio is about half-way between the next version, we are calling these versions Quorum Studio 3.5 and Quorum 9.5.")

        // Shaders
        AddHeading(bodyDiv, "Graphics Shaders and Updates", 3)
        bodyDiv:AddParagraph("For some time, Quorum has used OpenGL for rendering its content. Historically, because Quorum Studio was used across many school systems, we kept the OpenGL version rather old, as some schools use older hardware. Notably, we were using OpenGL 2.1, from 2006. While this system worked well enough to invent much of the accessible graphics pipeline in the language, OpenGL 2.1 used a particular kind of graphics pipeline that is now outdated. Further, OpenGL is having challenges today. Apple has deprecated this system, limits it to OpenGL 4.1 (about 2011 or so), and is quite slow compared to Windows in our testing. Further, OpenGL itself is sometimes being replaced by third parties (e.g., Apple's metal, Vulkan), while others still are maintaining it (e.g., WebGL, Android). The future of OpenGL is thus uncertain and we are preparing for the potential reality where its creators abandon it.")
        bodyDiv:AddParagraph("To try and fix this issue, we have redesigned Quorum's backend for Quorum 9.5. This includes the following changes:")
        OrderedList list1
        list1:SetClassAttribute(listStyle)
        list1:AddListItem("Upgrading to OpenGL 4.1 (desktop), OpenGLES 3.0 (mobile), or WebGL 2.0 (web). Despite the varying version numbers, these are all approximately the same OpenGL version for different platforms.")
        list1:AddListItem("Completed a near rewrite of the graphics system, exposing the raw shader system from within Quorum code.")
        list1:AddListItem("Added a set of raw graphics calls, which gives considerably more control of the graphics pipeline from within Quorum. These calls do largely map to OpenGL, but we have done our best to make them neutral across graphics pipelines. This will change in the future and we hope will become even more neutral over time.")
        list1:AddListItem("Added support for mapping calls into the graphics system, changing, and creating shaders. The idea is that you can set shaders on individual items or control them in a number of other ways. ")
        list1:AddListItem("Added support for geometry and tesselation shaders from within Quorum.")
        list1:AddListItem("Currently, the shader code itself is written in GLSL. We strongly suspect this will change over time, because different platforms have different requirements. Further, even with these changes, writing shaders is difficult, and highly mathematical, so we suspect the team will be thinking of plans related to ease of use in the future as well. Point being, while users can use shaders now, we urge the community not to go nuts in creating GLSL specific dependencies. ")
        list1:AddListItem("Adjusted and improved the graphics primitives that can be used on the system, including in the creation of a new polygon function from Drawable, which allows more sophisticated shapes to be drawn and also allows those shapes to be drawn with less pixelation.")
        bodyDiv:Add(list1)


        // Database
        AddHeading(bodyDiv, "Database Support (Beta)", 3)
        Paragraph dbParagraph
        dbParagraph:AddText("Based on the work of ")
        dbParagraph:AddLink("Drews et al.", "https://dl.acm.org/doi/10.1145/3368089.3409701?cid=81314486348")
        dbParagraph:AddText(", we have implemented a new database system for Quorum. In this version, we consider this system to be in beta. The core approach behind this is described in the paper (the hybrid system, which happened to do best in the experiment) and allows users to write code to connect to, get data from, and send data to, a database system. In the first version, we support ")
        dbParagraph:AddLink("MySQL", "https://www.mysql.com/")
        dbParagraph:AddText(". For those needing different architectures (e.g., postgres), there is an architecture in place where it can be added, but such systems are not yet supported. Here are some of the core features of the system.")
        bodyDiv:Add(dbParagraph)
        OrderedList list2
        list2:SetClassAttribute(listStyle)
        list2:AddListItem("Support for creating, adjusting, and dropping tables")
        list2:AddListItem("Support for logging into databases and closing them")
        list2:AddListItem("Support for many kinds of queries, written through typical Quorum syntax. ")
        list2:AddListItem("Integration of database support into the data science systems, like charts, statistics, and DataFrames. This allows users to query databases and then run calculations on any results without needing custom programming languages or syntax.")
        bodyDiv:Add(list2)

        // Charts
        AddHeading(bodyDiv, "Charts", 3)
        bodyDiv:AddParagraph("As our work continues on Data Science for Quorum, we have made significant improvements to charts. There is a lot more work to do and how to tackle it is a balance. For example, charts need to look correct visually and, as those looks change, each piece needs to be made available in the accessibility system. Further, the charts need to be accessible online and offline and this means we need different modes for different purposes. Each of these features requires careful thinking and time. We expect many releases over the next few years on these features. Recent changes follow:")
        OrderedList list3
        list3:SetClassAttribute(listStyle)
        list3:AddListItem("Added a series of color templates that can be used. Many of the choices made by the team come from evidence in the academic literature [1,2,3], although so far as we can tell, there really is no perfect choice for the defaults. Thus, we have also given the user the ability to change between them, or set their own, as color needs are both partially subjective and vary, at least to a degree, by personal preference.")
        list3:AddListItem("Added the ability to split charts into facets, meaning separate them by factors from a DataFrame. Another way to say this might be to say that we can now automatically separate charts out by variables of interest.")
        list3:AddListItem("Adjusted a host of minor graphical changes to the charts to make them look visually nicer")
        list3:AddListItem("Added customization options for axes, legend position, font size, gridlines, group brackets, and point/line density.")
        list3:AddListItem("Added accessible navigation to charts exported as SVGs (bar chart, histogram, scatterplot, pie chart, violin plot). This work is complicated and a work in progress. ")
        list3:AddListItem("Added support for additional Chart customization features in the SVG export process (visual update, gridlines, vertical/horizontal orientation, stacked/unstacked bars)")
        list3:AddListItem("Added pie charts and donut charts.")
        list3:AddListItem("Added a first step way to embed these charts into other systems accessibly.")
        bodyDiv:Add(list3)

        // Backend
        AddHeading(bodyDiv, "Quorum Backend Changes", 3)
        bodyDiv:AddParagraph("Quorum 9.5 introduces a rewritten backend for managing Quorum Plugins, through the integration of Gradle. For most users, this will not matter, but the key change is that when a user clicks build in Quorum Studio, what the language generates has changed a great deal. Thus, Quorum programs written in version 9.5 are source compatible with previous versions, and technically also generate the same bytecode from the compiler, but they interact with plugins differently. This change greatly simplifies how we connect into third party systems, including the iPhone, Android, and other features. Features include:")
        OrderedList list4
        list4:SetClassAttribute(listStyle)
        list4:AddListItem("Quorum now uses Gradle 7.1 from within the primary build system. Users overriding the standard library (rare for users to do), will now see different messages from the system.")
        list4:AddListItem("Changed QuorumStudio to use JDK 11 by default. The reason for this is, especially, because dependence on JDK 8 on Mac was preventing us from conducting experiments with accessibility on this operating system. Changing this was thus necessary to even begin work on Mac accessibility")
        list4:AddListItem("All plugin and Quorum code remains set to JDK 8 bytecode, not JDK 11, because otherwise it would break compatibility with LEGO mindstorms")
        list4:AddListItem("From Quorum, all plugins are now generated using projects in IntelliJ or the console. This allows users with accessibility needs to write the code in any accessible format they wish, then run the full build from within Quorum Studio or from the console, removing an additional accessibility barrier. This also removes our previous reliance on NetBeans.")
        list4:AddListItem("Fixed a number of small bugs in the compiler, especially related to the new parser architecture introduced in Quorum 9")
        list4:AddListItem("Fixed an extremely annoying bug in the compiler where parameters would not properly propagate their location information, which caused use hints to break and compiler errors to give the wrong location for essentially any error related to parameters")
        list4:AddListItem("Adjusted the standard library scripts to adjust how dependencies are managed, including how JavaScript is generated")
        list4:AddListItem("Quorum's test suite now uses NodeJS to execute")
        bodyDiv:Add(list4)

        // code completion 
        AddHeading(bodyDiv, "Code Completion", 3)
        bodyDiv:AddParagraph("One major improvement in Quorum Studio 3.5 is code completion. While Quorum has had code completion for a while, it has generally been pretty buggy. With the advent of Quorum 9's hand parsing architecture, however, it became much easier for us to control what information can be sent to the code completion system, which in turn made it easier to rewrite it and clean it up. For this reason, code completion in this version is now much more reliable across the board. Some general changes include:")
        OrderedList list5
        list5:SetClassAttribute(listStyle)
        list5:AddListItem("Fixed a bug in code completion causing the return type to not show up properly")
        list5:AddListItem("Fixed a bug in code completion causing many kinds of expressions to not parse correctly and thus give you no information")
        list5:AddListItem("Added chaining to code completion. Not all permutations are yet supported, but the feature covers a significant number of common cases")
        list5:AddListItem("Significantly improved Quorum's ability to understand what would be useful to a user based upon context in the source")
        list5:AddListItem("Improved suggestions, including being able to provide hints for basic primitives, in addition to classes in the standard library, and action calls")
        bodyDiv:Add(list5)

        // iphone 
        AddHeading(bodyDiv, "iPhone Changes", 3)
        bodyDiv:AddParagraph("Quorum has several changes to the iPhone architecture, including:")
        OrderedList list6
        list6:SetClassAttribute(listStyle)
        list6:AddListItem("The addition of Core Haptics to the supported APIs. The implementation is in beta and has not been well tested, but we are including it specifically so we can run experiments on it and improve it. The tricky part here is that we want calls on android for haptics to largely feel similar to those on iPhone, but we need to evaluate this using funky devices called laser doppler vibrometers. Also, laser doppler vibrometer is a fun thing to say. Go ahead. Say it 10 times fast. It's fun.")
        list6:AddListItem("Updated iPhone to the latest MobiVM release through Gradle")
        list6:AddListItem("Updated the Gradle support on iPhone to version 6.9. This is different than standard Quorum, but MobiVM does not yet support 7.1 and this version is sufficient for our needs")
        list6:AddListItem("Our iPhone support has historically had an extremely slow build process, due to the way we are building the native files and converting using MobiVM. This is still true, but we have introduced some primitive caching, which makes repeated builds faster. More work is needed on this system to speed up iPhone support in various contexts, but it is an improvement.")
        list6:AddListItem("Updated the graphics system to use the new shader architecture. We should note that due to inconsistencies in Apple's GLSL implementation on such devices, there are some continued challenges in graphics on such devices")
        bodyDiv:Add(list6)

        // other
        AddHeading(bodyDiv, "Other Features", 3)
        OrderedList list7
        list7:SetClassAttribute(listStyle)
        list7:AddListItem("Added a Serial class to Quorum for Serial port connections or bluetooth. Special thanks to Alex Chavez for the Pull Request for this feature")
        list7:AddListItem("Added a SerialPort class to allow communication on individual, but separate, ports.")
        list7:AddListItem("Added a way to query for available serial ports")
        list7:AddListItem("Made a host of improvements to the DateTime class, which badly needed the attention.")
        list7:AddListItem("Added support for dates into the DataFrame class")
        bodyDiv:Add(list7)

        // website
        AddHeading(bodyDiv, "Quorum Website Upgrade", 3)
        bodyDiv:AddParagraph("We have completed our long-planned upgrade to the Quorum website. This included a rewrite of a whole host of systems and an upgrade from Quorum 6 online to Quorum 9.5. Quorum can now be embedded into third party websites and run from anywhere. Finally, we have begun our experiments with making accessible graphics work in a web browser. This feature will take quite some time to get right, but we have been updating and tweaking the pieces since the initial update in December.")
        OrderedList list8
        list8:SetClassAttribute(listStyle)
        list8:AddListItem("Significantly changed the way you program on the website. This adds syntax highlighting, more hotkeys, and buttons.")
        list8:AddListItem("Added code regions that are still accessible, but visually look better")
        list8:AddListItem("Added code regions automatically in the generated documentation")
        list8:AddListItem("Changed to a new server infrastructure that should be much faster for most users")
        list8:AddListItem("Made the compiler an order of magnitude faster online")
        list8:AddListItem("Placed many of the compilation dependencies behind cloudflare, which should speed things up especially for international users")
        list8:AddListItem("Upgraded the online compiler to Quorum 9.5 ")
        list8:AddListItem("Made it so when you compile a program, you get immediate feedback, instead of jumping to a new page")
        list8:AddListItem("Integrated a graphics region in the online development environments so you can conduct graphics on the same page")
        list8:AddListItem("Upgraded the graphics system online to WebGL 2.0")
        list8:AddListItem("Fixed a host of small bugs in the online version of Quorum")
        bodyDiv:Add(list8)

        AddHeading(bodyDiv, "Known Issues", 3)
        bodyDiv:AddParagraph("We have completed our long-planned upgrade to the Quorum website. This included a rewrite of a whole host of systems and an upgrade from Quorum 6 online to Quorum 9.5. Quorum can now be embedded into third party websites and run from anywhere. Finally, we have begun our experiments with making accessible graphics work in a web browser. This feature will take quite some time to get right, but we have been updating and tweaking the pieces since the initial update in December.")
        OrderedList list10
        list10:SetClassAttribute(listStyle)
        list10:AddListItem("Xcode 13 removed xtrace from the xcrun utility, which means our ability to detect iOS devices is currently broken in that version. This is true for older and newer versions of Quorum Studio")
        list10:AddListItem("Certain graphics applications seem to be throwing an error on M1 mac processors. The error does not appear to impact runtime behavior")
        bodyDiv:Add(list10)

        AddHeading(bodyDiv, "References", 3)
        OrderedList list9
        list9:SetClassAttribute(listStyle)
        list9:AddListItem("Gramazio, C. C., Laidlaw, D. H., & Schloss, K. B. (2017). Colorgorical: Creating discriminable and preferable color palettes for information visualization. IEEE Transactions on Visualization and Computer Graphics, 23(1), 521-530. https://doi.org/10.1109/TVCG.2016.2598918")
        list9:AddListItem("Lyn Bartram, Abhisekh Patra, and Maureen Stone. 2017. Affective Color in Visualization. In Proceedings of the 2017 CHI Conference on Human Factors in Computing Systems (CHI '17). Association for Computing Machinery, New York, NY, USA, 1364-1374. DOI:https://doi.org/10.1145/3025453.3026041")
        list9:AddListItem("Luz Rello and Jeffrey P. Bigham. 2017. Good Background Colors for Readers: A Study of People with and without Dyslexia. In Proceedings of the 19th International ACM SIGACCESS Conference on Computers and Accessibility (ASSETS '17). Association for Computing Machinery, New York, NY, USA, 72-80. DOI:https://doi.org/10.1145/3132525.3132546")
        bodyDiv:Add(list9)
    end

    action QuorumStudio3_0_1Notes(Section bodyDiv)
        text listStyle = "list-disc list-outside pl-8"
        AddHeading(bodyDiv, "Quorum Studio 3.0.1 September 10th, 2021", 2)
        bodyDiv:AddParagraph("This is a small bug fix release. Notes follow:")

        OrderedList qs3NotesList2
        qs3NotesList2:SetClassAttribute(listStyle)
        qs3NotesList2:AddListItem("Fixed a bug causing the 2D palette in Quorum Studio to break. Special thanks to Ko Inamura for the bug report. ")
        qs3NotesList2:AddListItem("Fixed an infuriating bug that caused the toolbar to disappear sometimes when a scrollable table was active. ")
        qs3NotesList2:AddListItem("Fixed a bug causing the layout of a table to twitch and wrap incorrectly on even small resizing changes.")
        qs3NotesList2:AddListItem("Fixed a bug causing tables to crash when using screen readers in certain circumstances.")
        qs3NotesList2:AddListItem("Fixed an issue which could cause textboxes to crash with a screen reader active when deleting text near the end of a file.")
        qs3NotesList2:AddListItem("Fixed a bug causing Quorum Studio to not properly update the icon in the tree when you set a file as the main file. It now correctly changes the color. ")
        bodyDiv:Add(qs3NotesList2)

    end

    action QuorumStudio3_0Notes(Section bodyDiv)
        text listStyle = "list-disc list-outside pl-8"
        AddHeading(bodyDiv, "Quorum Studio 3.0 and Quorum 9.0 July 9th, 2021", 2)
        bodyDiv:AddParagraph("Quorum Studio 3.0 and Quorum 9.0 are the next major upgrades for developing in the Quorum Programming Language. Unlike previous years, we rolled out many crucial additions and features throughout the year. The changes here focus on those made since the last minor update, which was in Quorum Studio 2.3. Note that some of these notes are duplicative of the notes that were emailed to the community, but not put on the website, for Quorum Studio 2.5. We wanted to get beta versions of this material out to the broader community early for feedback and review, given how extensive they are. Thus these notes here include changes from Quorum Studio 2.5 through 3.0.")

        AddHeading(bodyDiv, "Android and iOS support", 3)
        Paragraph androidParagraph
        androidParagraph:AddText("Following the revival of Android Support to Quorum in Quorum Studio 2.3, we have additionally added support for iOS devices. Quorum originally had primitive iOS support in an older version, but this was dropped because the product, RoboVM, that Quorum depended on was discontinued. One group, MobiVM, created an alternative and really knocked it out of the park. We have adapted our content to use MobiVM, starting nearly from scratch on how this system is put together. We would especially like to thank Nicholas Vancise for his contribution to the iOS system in Quorum, which we largely copied from his Github repository. That is available on github: ")
        androidParagraph:AddLink("https://github.com/thenick775/Quorum_iOS_Transpiliation/", "https://github.com/thenick775/Quorum_iOS_Transpiliation/")
        androidParagraph:AddText(". Note that we included this support in the Quorum Studio 2.5 release. This feature is unchanged in 3.0.")
        bodyDiv:Add(androidParagraph)


        AddHeading(bodyDiv, "3D Support in the Quorum Studio Scene Editor", 3)
        bodyDiv:AddParagraph("New in Quorum Studio 3.0, we now have support for 3D in the scene editor. This system, which is accessible, allows us to create 3D items, like models, primitive cubes, and other shapes, when creating games. Like 2D, it uses a very similar system for accessibility, with similar property windows, and other attributes. These changes are now integrated into scene files, so it is backward compatible. However, note that Quorum Studio 3.0 scene files, because they add 3D, require 3.0 or above. We have attempted to make keypresses, navigation, and interaction mimic the 2D system as much as we can, but as always would appreciate feedback as we decide on how to expand the scene system for future releases. Note that a beta version of this feature was placed into Quorum Studio 2.5. Changes since this release include:")
        OrderedList qs3NotesList1
        qs3NotesList1:SetClassAttribute(listStyle)
        qs3NotesList1:AddListItem("Fixes to a series of hotkeys")
        qs3NotesList1:AddListItem("Adjustments to the auditory cues made inside screen readers")
        qs3NotesList1:AddListItem("Added a function to the Matrix4 class to simplify transforms, TransformWorldCoordinate. The TransformWorldCoordinate action takes a 3D point in space (e.g., the location of an Item3D) and applies any movement, rotation, or scaling that's stored in the Matrix4 to that point.")
        qs3NotesList1:AddListItem("Simplified scaling and rotation by storing values for them instead of shoving them in a transform. This was a significant usability issue that made the scene editor hard and the programming hard to use.")
        qs3NotesList1:AddListItem("Changed the palette to include lighting")
        qs3NotesList1:AddListItem("Added a way to add your own models and sounds into the 3d scene editor")
        bodyDiv:Add(qs3NotesList1)

//        OrderedList qs3NotesList1
//        qs3NotesList1:AddListItem("")
//        bodyDiv:Add(qs3NotesList1)

        AddHeading(bodyDiv, "New Quorum Parser", 3)
        Paragraph parserParagraph
        parserParagraph:AddText("Quorum 9.0 includes a brand new parser technology, which replaces our beloved Antlr as a parsing stack. While we love Antlr and it has made Quorum possible for many years, recent evidence from ")
        parserParagraph:AddLink("Becker et. al", "https://www.brettbecker.com/wp-content/uploads/2019/12/becker2019compiler.pdf")
        parserParagraph:AddText("amongst others, has shown strong evidence that the design of compiler error messages needs improvement. This problem is not unique to Quorum, but neither is Quorum exempt from this evidence.")
        bodyDiv:Add(parserParagraph)
        bodyDiv:AddParagraph("This technology provides three big advantages. First, we can control every compiler error message directly, without needing to go through Antlr. Second, this technology can cross-compile itself to the web, which should allow us to improve our web-stack for Quorum over time. Finally, this new technology has been integrated into the standard library and allows us considerably more control over parsing in the language. We suspect that these error messages, and this technology, will be iterated on for several years as we talk to users and collaborate with the research community.")
        bodyDiv:AddParagraph("While we conducted an edit pass on error messages in Quorum Studio 2.5, we did a second pass for 3.0 through all aspects of the compiler. Thus, users will observe new messages across the board. Further, since Quorum Studio 2.5, we have additionally conducted the following changes to our new parser's beta phase:")
        OrderedList qs3NotesList2
        qs3NotesList2:SetClassAttribute(listStyle)
        qs3NotesList2:AddListItem("Using the Flesh-Kincaid metric, we examined every compiler error message in the parser, bringing many of them down from college reading level to approximately 8th grade reading level. Many of these messages could not easily be lowered further without making the meaning of the error message incorrect.")
        qs3NotesList2:AddListItem("Evidence from Daleidens's dissertation showed approximately 70% of compiler errors for Quorum online come from the parser. As such, we've heavily modified the compiler error messages for these errors a second pass. We suspect, as more evidence is gathered, they will be changed further.")
        qs3NotesList2:AddListItem("Did a general edit pass on all error messages, including old ones and rare ones that might occur during semantic analysis.")
        qs3NotesList2:AddListItem("Fixed a bug in the compiler that could, on rare circumstances, cause it to enter an infinite loop if there was exactly the right kind of compiler error in exactly the right kind of spot.")
        qs3NotesList2:AddListItem("Fixed a bug in the compiler that would sometimes cause an exception to be thrown in certain kinds of solo action calls.")
        qs3NotesList2:AddListItem("Fixed a bug in the parser that would cause the system to ignore certain kinds of errors related to incorrect expressions. These kinds of errors now correctly state the problem and provide correct locality.")
        qs3NotesList2:AddListItem("Fixed several files in the compiler that were not in the correct folder. Quorum doesn't actually care, but the standard library generator was angry about it.")
        qs3NotesList2:AddListItem("Fixed a nasty bug in the new parser, which was allowing solo action or parent action calls to be triggered in field blocks. This was intended to be a compiler error and was one in Quorum 8. It has been put back into a compiler error.")
        bodyDiv:Add(qs3NotesList2)

        AddHeading(bodyDiv, "Scientific Notation", 3)
        bodyDiv:AddParagraph("Given the Quorum 9 change to a new parser, we took the opportunity to make a few minor adjustments to the programming language that are long-standing. The most significant is in the addition of scientific notation. Notably, while we normally like to collect evidence on changes before making syntax changes, we observed that our data science system was excruciatingly frustrating to use without scientific notation. This notation is largely standardized internationally, so we decided to adopt it. Thus, we designed a system that looks like so:")
        bodyDiv:AddParagraph("2.0e10")
        bodyDiv:AddParagraph("In the current design, we use standard symbols for scientific notation, with the exception that the e must be lowercase. The reason for this is because of Bonita Sharif's excellent work on readability of code with eye trackers. In discussions, the lower-case e provides a natural separation point compared to the upper case, which we suspect matches her results better than allowing the capital E. Note that scientific notation is allowed only for numbers, but not integers. Future evidence may cause us to alter this design, but given this is a standard that is often taught in schools and used on calculators, we think it is reasonable.")


        AddHeading(bodyDiv, "Quorum Online Changes", 3)
        bodyDiv:AddParagraph("In Quorum 9, we have made major changes to how Quorum outputs JavaScript when it compiles. This feature, likely not well known in the community, is how Quorum allows itself to run online. Notably, we now pre-compile the Quorum 9 standard library and cache it online, sending back only the minimal set of code for each request. This dramatically, and we mean dramatically, increases the speed at which Quorum can issue requests online.")
        bodyDiv:AddParagraph("The broad approach here, given that a number of partners use Quorum online in different ways, will take time to push online, as for it to go live we need to work with our partners and ensure we don't break their work. As such, while these changes are available today, they will not be on the live server until a later date. These changes broadly include the following:")
        OrderedList qs3NotesList3
        qs3NotesList3:SetClassAttribute(listStyle)
        qs3NotesList3:AddListItem("Quorum's standard library is now pre-compiled, like it is on desktop, and this is cached in the browser.")
        qs3NotesList3:AddListItem("Quorum's online development environments no longer need to go to a separate page.")
        qs3NotesList3:AddListItem("The speed at which the compiler can issue requests has been dramatically increased.")
        qs3NotesList3:AddListItem("Quorum now includes a web server mode, replacing our old tomcat server, which allows it to send JavaScript conversion requests over the wire. While this server is general and can technically be used for anything, the implementation is primitive and we urge caution in using it in production environments.")
        qs3NotesList3:AddListItem("Adjusted how Quorum outputs JavaScript to account for a myriad of changes between Quorum 6 and 9. These changes are not backwards compatible, but should require minimal change to get working.")
        qs3NotesList3:AddListItem("Quorum's online development environments now include an embedded graphics canvas.")
        qs3NotesList3:AddListItem("Included font support into the default graphics canvas.")
        qs3NotesList3:AddListItem("Updated the website in most locations to use the new development environment.")
        qs3NotesList3:AddListItem("Added development environments to pages previously without one. This expands what can be done online considerably.")
        qs3NotesList3:AddListItem("Split up the drawing 2D tutorial into 3 separate tutorials. They now have development environments in them as well.")
        qs3NotesList3:AddListItem("Split up the events tutorial into 4 separate tutorials.")
        qs3NotesList3:AddListItem("Reorganized the reference page and split up the games tutorials into a larger series of tracks for particular sub-topics.")
        bodyDiv:Add(qs3NotesList3)

        AddHeading(bodyDiv, "Tooling Changes", 3)
        bodyDiv:AddParagraph("To account for changes to Quorum 9, the debugger and the code completion system have been significantly changed. Major highlights include speed increases in both systems, improvements to readability, and a series of general bug fixes. Stepping over code is now much faster and code completion, at least on our test systems, pops up near instantly. The full list includes:")
        OrderedList qs3NotesList4
        qs3NotesList4:SetClassAttribute(listStyle)
        qs3NotesList4:AddListItem("Fixed a bug in the debugger where the variables window would not properly indent when resized")
        qs3NotesList4:AddListItem("Fixed a bug causing the debugger to execute slowly if any of the stepping keys were pressed, using any input modality")
        qs3NotesList4:AddListItem("Fixed a bug causing breakpoints to not be properly sent to the debugger if it was already running")
        qs3NotesList4:AddListItem("Fixed a bug causing the debugger line to not show up properly if other highlight lines were at the same position")
        qs3NotesList4:AddListItem("Fixed a bug causing the debugger line to disappear in certain circumstances")
        qs3NotesList4:AddListItem("Fixed a bug causing the debugger line to disappear in the standard library in certain circumstances")
        qs3NotesList4:AddListItem("Added a way to prioritize highlight lines into the textbox renderer. This ensures certain lines are always "+dq+"on top"+dq+" visually when rendered. Any Quorum application can now set these priorities in a textbox.")
        qs3NotesList4:AddListItem("Updated the tools dependency in the debugger to a more modern version.")
        qs3NotesList4:AddListItem("Replaced the code completion system with one generated by the new parser architecture. In this first version, it is limited, but this approach provides us a much more powerful way to estimate the likely request being sent by the user. The current version is primitive, but still seems to work better than the old system.")
        qs3NotesList4:AddListItem("Significantly improved the speed in which code completion finishes collecting information")
        qs3NotesList4:AddListItem("Added a new parse listener architecture for code completion, based on Quorum 9's infrastructure. This greatly simplifies changing the code completion system in the future.")
        qs3NotesList4:AddListItem("Fixed a bug causing COMMAND or CTRL + J to not work correctly in standard library files.")
        qs3NotesList4:AddListItem("Fixed a bug causing git annotations to not show up in standard library files")
        qs3NotesList4:AddListItem("Fixed a bug causing spurious editor hints and compiler errors to show up in standard library files")
        qs3NotesList4:AddListItem("Quorum Studio now generates a log file for technical errors. This information now records errors thrown by the system as you code. This information is stored locally only and is not sent to the Quorum team, but provides us much more information about what happens in the field with Quorum Studio if a user runs into trouble.")
        qs3NotesList4:AddListItem("Fixed a bug in code completion causing it to crash under certain circumstances.")
        qs3NotesList4:AddListItem("Fixed a bug in the compiler error window that made it difficult to read the errors, as they were cropped.")
        qs3NotesList4:AddListItem("Fixed a bug where tabbed interfaces would require the user to click on the tab, click off the tab, then click back onto it for it to show up correctly. We did not like this bug. It was not very nice.")
        qs3NotesList4:AddListItem("Fixed a bug where tables could not word wrap properly. This made compiler errors in Quorum Studio very difficult to read.")
        qs3NotesList4:AddListItem("Fixed a bug in trees, radio buttons, and the spreadsheet, where the selection would not show up visually until user interaction had happened. Ironically, this was always working for screen reader users, just not people that can see.")
        qs3NotesList4:AddListItem("Fixed a bug on Windows where if you did an auto-update on a version of Quorum Studio where the standard library had a name or package change on a file, and installed over the system, it would double up on the refactored portions of the standard library.")
        bodyDiv:Add(qs3NotesList4)

        AddHeading(bodyDiv, "Data Science Changes", 3)
        bodyDiv:AddParagraph("Quorum Studio 3.0 and Quorum 9.0 includes a considerable number of improvements to the new Data Science libraries in Quorum. Many minor changes are listed below, but overall we have significantly improved the naming conventions, talked to users of the API on their needs and how they use it, and re-tooled the entire system. Additionally, we conducted a randomized controlled trial on how to do operations like filtering, which ultimately showed that we can serve user's needs by embedding a small domain specific language inside of Quorum, which is for filtering. The rules are the same as Quorum, but the broad idea is that we can conduct simple filtering operations in DataFrame objects without using the Transform system.")
        OrderedList qs3NotesList5
        qs3NotesList5:SetClassAttribute(listStyle)
        qs3NotesList5:AddListItem("Changed the name of TDistribution to HeavyTailNormalDistribution")
        qs3NotesList5:AddListItem("Changed the name of FDistribution to VarianceRatioDistribution")
        qs3NotesList5:AddListItem("Changed the name of CompareColumnToMean to CompareGroupToMean.")
        qs3NotesList5:AddListItem("Updated CompareColumnToMean to naming conventions that have been adopted consistently across all statistical tests")
        qs3NotesList5:AddListItem("Added a few Univariate actions for inverse computations and a parent class.")
        qs3NotesList5:AddListItem("Removed the CompareTwoColumns class, which has been replaced with the more general CompareGroups class.")
        qs3NotesList5:AddListItem("Added a RootFinder class, equivalent to a Brent function.")
        qs3NotesList5:AddListItem("Added a Continued Fraction for Gamma distributions")
        qs3NotesList5:AddListItem("Added a class for calculating the mathematical ErrorFunction, called ErrorAction in quorum.")
        qs3NotesList5:AddListItem("Added several helpers to the Gamma class from Apache Commons")
        qs3NotesList5:AddListItem("Added a class for Normal distributions")
        qs3NotesList5:AddListItem("Fixed a bug in the T Distribution (now HeavyTailNormalDistribution), which caused it to make incorrect calculations as the degrees of freedom approaches infinity. Alternative algorithms need to be investigated for exact values, but it is very close as it is and matches the bug fix in Apache Commons.")
        qs3NotesList5:AddListItem("Added a result called CompareGroupsResult, which gets information back from anova calculations and pairwise calculations.")
        qs3NotesList5:AddListItem("Added pairwise tests and optional Bonferroni calculations into the default CompareGroups class.")
        qs3NotesList5:AddListItem("Added a CompareVariances class, which is equivalent to a Levene's test")
        qs3NotesList5:AddListItem("Added a CorrelateGroups class, which is equivalent to a Pearson correlation")
        qs3NotesList5:AddListItem("Added a CorrelateRanks class, which is equivalent to a Spearman correlation. Note that Spearman correlations are really just a rank transform followed by a Pearson. Because Kendall's tau gives a similar result, only this approach is supported in the standard library in the current version.")
        qs3NotesList5:AddListItem("Modified the regression and other classes to the new naming conventions for distributions.")
        qs3NotesList5:AddListItem("Renamed a number of actions inside the classes for consistency. This includes renaming some of the probability functions to CumulativeDistribution, which matches more common statistical terminology.")
        qs3NotesList5:AddListItem("Added survival, inverse survival, and inverse cumulative distribution actions to the distributions")
        qs3NotesList5:AddListItem("Added a NumberDistribution class to standardize actions across subclasses. We suspect these will grow over time as we flesh out the library, and as such, we want to keep them consistent. While the design comes from Apache Commons, we imagine it will diverge over time as we better learn what naming conventions and designs make sense for people in practice.")
        qs3NotesList5:AddListItem("Fixed a bug causing line feed/new line combinations to fail in reading csv files.")
        qs3NotesList5:AddListItem("Fixed a bug causing the last character of csv files to not be properly read")
        qs3NotesList5:AddListItem("Improved the efficiency of the CSV file reader, significantly boosting its speed for large data sets (tested in the 100MB range).")
        qs3NotesList5:AddListItem("Fixed a bug in charts causing the last row to crash")
        qs3NotesList5:AddListItem("Added line charts with multiple lines and violin plots. Special thanks to Gabriel Contreras, Cody Molisee, and David Van Hack for doing this work")
        qs3NotesList5:AddListItem("Added Scalable Vector Graphic support to charts, so they can be stored to disk.")
        qs3NotesList5:AddListItem("Added a series of windowing functions (kernel functions) for use in Violin Charts")
        qs3NotesList5:AddListItem("Modified DataFrame to account for line charts and violin charts as part of the selection system.")
        qs3NotesList5:AddListItem("Added extra Copy operations to the DataFrameColumns to make it easier to Copy and Sort unique items")
        qs3NotesList5:AddListItem("Added a CrossTab action to DataFrame, which creates a CrossTab DataFrame from two column selections")
        qs3NotesList5:AddListItem("Added a CrossTab Transform class that can calculate the CrossTab Transform to a copy of the DataFrame.")
        qs3NotesList5:AddListItem("Fixed an issue with ScatterPlot to cause it to not respect the ColumnInput selections commonly used amongst all charts and graphs")
        qs3NotesList5:AddListItem("Updated documentation for ScatterPlot to indicate the changes.")
        qs3NotesList5:AddListItem("Fixed an issue with several files in the standard library having incorrect packages.")
        qs3NotesList5:AddListItem("Fixed an issue where CumulativeDistributionAction was misspelled CulumativeDistributionAction in the class name. The standard library scanner was displeased.")
        qs3NotesList5:AddListItem("Moved StatisticsFormatting to the Libraries.Compute.Statistics.Reporting package.")
        qs3NotesList5:AddListItem("Added a multi-column sort function to DataFrame")
        qs3NotesList5:AddListItem("Fixed some of the usability and visuals of Legends")
        qs3NotesList5:AddListItem("Added input options for multiple columns, one factor and two factors in bar charts and histograms")
        qs3NotesList5:AddListItem("Added Bar and BarGroups to allow for unstacked BarCharts")
        qs3NotesList5:AddListItem("Updated the accessibility navigation and text in bar charts and histograms")
        qs3NotesList5:AddListItem("Added input options for multiple columns, one factor or no factors in line charts")
        qs3NotesList5:AddListItem("Added text or numerical factor data in line charts")
        qs3NotesList5:AddListItem("Made some introductory improvements to line density in line charts, although this needs more work.")
        qs3NotesList5:AddListItem("Added input options for multiple columns, first column defaults to x-axis in scatterplots")
        qs3NotesList5:AddListItem("Added text or numerical for all data in scatterplots")
        bodyDiv:Add(qs3NotesList5)

        AddHeading(bodyDiv, "Accessibility Changes", 3)
        OrderedList qs3NotesList6
        qs3NotesList6:SetClassAttribute(listStyle)
        qs3NotesList6:AddListItem("Fixed a bug where selecting to the beginning of the line would select white space when it wasn't supposed to using SHIFT + HOME")
        qs3NotesList6:AddListItem("Added first letter navigation for several components, includings trees, lists, and tree tables")
        qs3NotesList6:AddListItem("Added a property in Quorum Studio to adjust the type ahead speed")
        qs3NotesList6:AddListItem("Added the ability to adjust the first letter navigation speed inside of the game class. This allows people with disabilities a way to control the speed of type ahead in controls")
        qs3NotesList6:AddListItem("Added menu mnemonics and the ability to change them in the standard library")
        qs3NotesList6:AddListItem("Added Mnemonics to Quorum Studio's menus")
        qs3NotesList6:AddListItem("Added the numpad enter key for certain operations")
        bodyDiv:Add(qs3NotesList6)

        AddHeading(bodyDiv, "General Bug Fixes/Changes", 3)
        OrderedList qs3NotesList7
        qs3NotesList7:SetClassAttribute(listStyle)
        qs3NotesList7:AddListItem("Fixed a strange bug in file writing where if you tried to append to a file, it would append to the wrong location under certain circumstances.")
        qs3NotesList7:AddListItem("While we had a temporary hotfix previously, we have officially added support for Big Sur into Quorum and Quorum Studio.")
        qs3NotesList7:AddListItem("Refactored Font loading to remove a strange loading procedure that was causing operating system compatibility problems.")
        qs3NotesList7:AddListItem("Changed Labels so they do not try to load a font in their constructor. Now, if GetFont is called, and no font has been loaded, Label chooses a sensible default. This change allows you to change the default Font loading directories for custom operating system or application installs.")
        qs3NotesList7:AddListItem("Fixed a bug in code completion that caused a crash under strange circumstances")
        qs3NotesList7:AddListItem("Fixed a bug causing Quorum Studio to not properly log a crash under various circumstances")
        qs3NotesList7:AddListItem("Fixed a bug in Quorum Studio causing it to set a main file to a non-quorum file. This was, uh, bad, and not at all what it was supposed to be doing. Children were sad and garden gnomes took over. It's fixed now, Rory and Michael. Special thanks to Amanda too.")
        qs3NotesList7:AddListItem("Reduced the size of the standard plugins in the standard library by 20.7% by removing dependencies related to Antlr.")
        qs3NotesList7:AddListItem("Added a new action called GetSecondsSinceStart, which allows the user to request how long it has been since the game was created.")
        qs3NotesList7:AddListItem("Fixed a long-standing bug in the graphics system causing interface components in a 2D layer to sometimes appear "+dq+"blurry."+dq+" This rather annoying bug would show up especially on non-high res monitors or under certain kinds of screen and zoom resolutions and was especially common on Windows. Any component should now be slightly crisper, but font rendering especially has been considerably improved.")
        bodyDiv:Add(qs3NotesList7)

    end

    action QuorumStudio2_3Notes(Section bodyDiv)
        text listStyle = "list-disc list-outside pl-8"
        AddHeading(bodyDiv, "Quorum Studio 2.3 October 16th, 2020", 2)
        bodyDiv:AddParagraph("Quorum Studio 2.3 is a significant bug fix release and we highly recommend upgrading. Many systems have been worked on. Specifically, this release includes improvements to Android support, code completion, the text editor, and the data science libraries.")
        
        OrderedList list
        list:SetClassAttribute(listStyle)
        list:AddListItem("Fixed a bug in code completion where lines with use statements or package files, but no class yet defined, would incorrectly fail early.")
        list:AddListItem("Fixed a bug in code completion where certain classes would not show up in detecting what actions can be called (e.g., Drawable).")
        list:AddListItem("Fixed a bug in code completion where if you had an action with a particular name, plus a left paren, it would double up and embed the name a second time when you pressed enter.")
        list:AddListItem("Fixed a crash bug in code completion when you have certain characters in the character stream.")
        list:AddListItem("Fixed a bug in filtering where the compiler could get in an intermediate state, due to threading, and the user interface would incorrectly ignore the request.")
        list:AddListItem("Fixed a bug in code completion where the standard library was being incorrectly ignored in certain parse configurations.")
        list:AddListItem("Changed the default functionality in code completion when creating a use statement. It now adds a dot and re-pops the window back up.")
        list:AddListItem("Added context awareness to popup completion in package and use statements. If a completion is at the end, code completion will not add the dot, both for class values and 'all' statements.")
        list:AddListItem("Fixed a bug in code completion where certain classes were not showing up in use and package statements")
        list:AddListItem("Fixed a bug where the root package, Libraries, in Quorum would not show up in code completion.")
        list:AddListItem("Changed the graphics for packages in the code completion interface. They are now orange squares.")
        list:AddListItem("Changed the color of private actions to be magenta and reversed the direction of the arrow.")
        list:AddListItem("Changed the color of actions to be blue in code completion.")
        list:AddListItem("Changed the sorting behavior of code completion for classes and packages. By default, packages now show up before classes and are sorted separately.")
        list:AddListItem("Changed the sorting order in code completion for primitive values, which have been pushed below actions.")
        list:AddListItem("Fixed a bug in code completion where private actions and variables would show up even in situations where they were not supposed to.")
        list:AddListItem("Fixed a bug in code completion where filtering as you type would, all of a sudden, stop providing correct values.")
        list:AddListItem("Fixed a bug in the code completion menu where the system would incorrectly close the window as you are typing and reset the focus.")
        list:AddListItem("Added a feature internally to code completion making it easier to detect the parse configuration currently in the compiler. This makes it easier to detect when the system is managing information in another thread.")
        list:AddListItem("Fixed a bug in code completion where the system would sometimes default to a previously known parse configuration too aggressively.")
        list:AddListItem("Fixed a bug in code completion where parent variables would show more information than they are supposed to. Now, when you type parent: it will show you each parent and any field that is available.")
        list:AddListItem("Fixed a bug in code completion where parents would not filter properly.")
        list:AddListItem("Fixed a bug in code completion where sometimes parents would override standard filters, causing the user to see only parent variables")
        list:AddListItem("Pressing the help keys for items in code completion now reads out any description from the Quorum documentation about the action or field. If that action or field has no description, nothing is read. For many actions, this gives a screen reader user more information on what an action or field can be used for.")
        list:AddListItem("Fixed a bug in the text box where you could not navigate to the defining class for fields")
        list:AddListItem("Fixed a bug in the text box where use locations for variables would not allow you to jump to the definition location")
        list:AddListItem("Fixed a bug in the text box where constructors were being ignored in regard to their jumping behavior")
        list:AddListItem("Added a way to create a folder from the project tree in Quorum Studio.")
        list:AddListItem("Changed the basic ideas behind DataFrameColumn objects. Previously, we were trying to avoid directly iterating over these items, thinking we could avoid it in other ways. In practice, however, it was impractical, and as such these structures have been provided a series of new actions for manipulating them. All previous actions are still supported and we imagine more changes are coming as the broader data science libraries are fleshed out.")
        list:AddListItem("Fixed a bug causing Quorum Studio to fail to send an APK file to android devices on Mac.")
        list:AddListItem("Fixed a bug causing Quorum Studio to issue the wrong Android translation command on Windows.")
        list:AddListItem("Significantly improved the error reporting and console output for Android translation. It now gives you much more information as to what you are doing and tells you whether it succeeded or failed.")
        list:AddListItem("Added a log file for any build from Android. The location is placed in the console after a build.")
        list:AddListItem("Fixed a bug causing applications built in Quorum 8 latest to crash on Android.")
        list:AddListItem("Changed the default Font system to use FreeType on Android. This allows a much wider variety of Quorum's standard library to be used on the platform.")
        list:AddListItem("Fixed a bug causing File IO to sometimes report incorrect information if the files were placed in Android's asset manager folders.")
        list:AddListItem("Added a series of new plugins related to File IO on Android")
        list:AddListItem("Cleaned up the default Android Gradle materials.")
        list:AddListItem("Fixed several bugs in the properties dialog related to asset files on android.")
        list:AddListItem("Fixed a bug causing font colors in buttons to not show up correctly.")
        list:AddListItem("Labels now set their description field for accessibility by default. This way, if a label is told to accept focus events, screen readers have more information.")
        list:AddListItem("Added missing functions to the button class to set the label directly without using the name field.")
        list:AddListItem("Added an action to buttons that allows you to load an image more easily. The action is named LoadImage.")
        list:AddListItem("Fixed several bugs in textbox selection, which were causing a crash under weird conditions related to the home and end keys.")
        list:AddListItem("Fixed an issue where physics objects didn't update the position of children items")
        list:AddListItem("Added a calculation for Skew")
        list:AddListItem("Added a calculation for Kurtosis")
        list:AddListItem("Added a way to gather z-scores for an entire column.")
        list:AddListItem("Added a test for the Pearson Correlation.")
        list:AddListItem("Added a test for the Spearman correlation.")
        list:AddListItem("Added a transform to convert to ranks.")
        list:AddListItem("Added a calculation for Inter-quartile ranges.")
        list:AddListItem("Began changing naming conventions across test classes so that all of them have a consistent format. In this version, this changes the regression class and will impact others over time. These changes do break backward compatibility with the library. Given this library is experimental and documentation will not be written for it until it has gone through more rounds of review, we are pushing up these changes now.")
        list:AddListItem("Changed the variance calculation to automatically calculate a mean if the mean was not set. It is slightly less efficient if calculated this way, but is optional and feels more intuitive. This was requested by a user.")
        list:AddListItem("Added a class for calculating the standard deviation. Technically, you can calculate this from the variance, but having a class by this explicit name was a user request.")
        list:AddListItem("Added custom input classes, ColumnInput and FactorInput, which standardize the way you send information to the various transforms, calculations, and other operations. Not all classes have been converted, but as we continue refining these classes, we suspect they will be.")
        
        bodyDiv:Add(list)
    end

    action QuorumStudio2_2Notes(Section bodyDiv)
        text listStyle = "list-disc list-outside pl-8"
        AddHeading(bodyDiv, "Quorum Studio 2.2 September 8th, 2020", 2)
        bodyDiv:AddParagraph("This release adds in some new features related to data science. Notably, we have added some charting procedures and made some quality of life improvements to the data science libraries as they are developed internally. ")
        
        OrderedList list
        list:SetClassAttribute(listStyle)
        list:AddListItem("Added Bar charts, Histograms, and Scatter Plots. Each of these plots generates graphs that are both accessible and visual. This is an initial release for feedback as our data science libraries are created.")
        list:AddListItem("Added several helper classes for creating plots from a data frame, with names like BarChartCreator, HistogramCreator, and ScatterPlotCreator.")
        list:AddListItem("Added an InterquartileRange class in the statistics packages")
        list:AddListItem("Added a Summarize class in the statistics packages")
        list:AddListItem("Added the ability to save into the DataFrame using a saving architecture.")
        list:AddListItem("Added a ToText action to the DataFrame, which by default outputs any dataframe as CSV format")
        list:AddListItem("Added a way to convert and adjust columns in data frames more easily. The purpose of this was to make it easier to create better transforms")
        list:AddListItem("Fixed a bug in Git support not allowing cloning on Windows")
        list:AddListItem("Fixed a bug in Git support that could cause a crash on certain kinds of diffs.")
        bodyDiv:Add(list)
    end

    action QuorumStudio2_1Notes(Section bodyDiv)        
        text listStyle = "list-disc list-outside pl-8"
        AddHeading(bodyDiv, "Quorum Studio 2.1 August 4th, 2020", 2)
        bodyDiv:AddParagraph("This is a sum up release for a wide variety of changes to Quorum Studio. Note that we did not produce release notes for Quorum Studio 2.0.1 and 2.0.2 and these notes only reflect a summary of changes between that version and 2.1. All of these changes were made during the Microsoft Hack for Good Hackathon in 2020. We focused exclusively on accessibility and based decisions on what to work on on interviews with users at EPIQ 2020 and broad community feedback since the release of Quorum Studio 1.0. There is still more to do, but we feel as if these changes were a huge success. Notably, we were able to conquer most of the major remaining stability issues in the accessibility system. On our end at least, the major components are working much more smoothly, and consistently, with screen readers. Here is the list of changes:")

        OrderedList list
        list:SetClassAttribute(listStyle)
        list:AddListItem("Rewrote the textbox accessibility components. It should now be much faster across the board, in addition to being far easier to maintain.")
        list:AddListItem("Fixed a bug causing textboxes to sometimes get out of sync between the accessibility and graphics system")
        list:AddListItem("Consolidated the native components for text fields and textboxes")
        list:AddListItem("Fixed several bugs in keyboard affordances with the textbox")
        list:AddListItem("Fixed a bug causing several keystrokes to not work properly in text fields")
        list:AddListItem("Made adjustments to the way text fields work in the accessibility system")
        list:AddListItem("Fixed a bug causing Narrator to not work with textboxes")
        list:AddListItem("Fixed bugs related to braille displays and textboxes")
        list:AddListItem("Fixed a bug that could potentially cause screen readers to not recognize Quorum interfaces as a UIA component, forcing you to ALT tab or restart a screen reader")
        list:AddListItem("Fixed a bug in the bootup sequence of Quorum, which was causing a black screen to appear for a short moment")
        list:AddListItem("Fixed a bug in the startup sequence of Quorum causing accessibility to trigger at just slightly the wrong time")
        list:AddListItem("Fixed a bug causing events to fire through the accessibility system before it is ready to process events")
        list:AddListItem("Fixed several bugs in the shutdown of the accessibility system. These could sometimes cause Quorum Studio to hang when it was closed")
        list:AddListItem("Fixed a bug in the scene editor causing items to read inconsistently in screen readers.")
        list:AddListItem("Fixed a bug causing the scene editor to not work correctly in Narrator")
        list:AddListItem("Changed the read properties in the scene editor to try and make it easier to use in a screen reader")
        list:AddListItem("Fixed a bug in the splash screen causing the super adorable phrases to come out at the wrong time or inconsistently")
        list:AddListItem("Changed the loading screen messages to follow semantic prioritization. They are now shorter and easier to understand")
        list:AddListItem("Fixed a bug in the splash screen system that was causing it to send update requests on the wrong thread")
        list:AddListItem("Fixed a bug in the splash screen screen causing the progress bar to read in an irregular fashion. Note that while the properties of the progress bar are correct, screen readers individually choose the exact phrases they read")
        list:AddListItem("Fixed a bug causing cells to state the wrong phrase in tables")
        list:AddListItem("Improved semantic prioritization of cells by changing the read order")
        list:AddListItem("Fixed table keys in tables. Note that each screen reader implements these differently and not all may equally respond to UIA tables or even support table keys")
        list:AddListItem("Fixed a bug causing tree tables to just say " + dq + "Cell" + dq)
        list:AddListItem("Fixed a bug causing the compiler error table to sometimes crash or send you to the wrong spot")
        list:AddListItem("Removed several providers from tables, which were causing them to read slightly strangely")
        list:AddListItem("Changed the default providers for tree table.")
        list:AddListItem("Rewrote from scratch the dialog properties in UIA")
        list:AddListItem("Change the providers and properties dialog boxes sent. Note that these properties are now correct and while all screen readers should properly read them, not all do. We are confident this is a bug in some screen readers, not others. For example, while Narrator does correctly read the box and is compliant with the properties, NVDA 2020.2 appears to connect to the top-most HWND window pointer, thereby incorrectly reading the entire window")
        list:AddListItem("Fixed a bug causing Accessibility notify events to not properly be read. Note that now, for important reasons, any accessibility Notify calls will be ignored in the CreateGame action in a Quorum Game. All calls to this action need to be done after CreateGame has completed.")
        list:AddListItem("Fixed a bug causing NVDA to throw exceptions sometimes in the bootup sequence")
        bodyDiv:Add(list)

        bodyDiv:AddParagraph("All of us on the Quorum team want to give our extra special thanks to Microsoft for hosting us in their Hack For Good Hackathon this year. We would especially like to thank Matt Campbell, who besides being a wonderful person to hack on accessibility with, really helped this patch knock it out of the park. All of us hope you all enjoy the changes as much as we enjoyed hacking on them!")
    end

    action QuorumStudio2Notes(Section bodyDiv)
        text listStyle = "list-disc list-outside pl-8"
        AddHeading(bodyDiv, "Quorum Studio 2.0 July 10th, 2020", 2)
        bodyDiv:AddParagraph("Quorum Studio 2.0 is the first major upgrade to our new development environment for Quorum. It includes major changes and upgrades across the board, which we outline below.")


        AddHeading(bodyDiv, "Scene Editor",3)
        bodyDiv:AddParagraph("Quorum Studio 2.0 includes a way to create accessible 2D games. How to make 2D games accessible is a major challenge and we suspect we could iterate on this design for decades. In the first version, we have focused on a scene and Palette tabs, which live in the project tree, and that allow you to either drag and drop or, with the keyboard, create maps, place characters, and set properties in a scene. Physics and many other things are controllable from a game and Quorum 8 natively understands these scenes in the game engine. These scenes can then be loaded in a native Quorum game. We find it to be much easier to create games in this new version.")
        Paragraph par = bodyDiv:AddParagraph("Besides the features, we have included some default art in the Palette for creating games and have created a series of tutorials on how to use the system. More information about how to use it is located on the ")
        par:AddLink("scene editing tutorial page","/tutorials/Scenes/intro.html")
        par:AddText(". Finally, while 2.0 is adding only 2D support into the grid, 3D support is almost finished and already accessible. We have a few more features to finish there before release and users can expect that 3D support will be added in a few months.")

        AddHeading(bodyDiv, "Git support", 3)
        par = bodyDiv:AddParagraph("We have added basic support for the Git version control system. This includes being able to push and pull repositories from Github or Bitbucket, annotations in the file editor showing file differences, and other operations. We have updated the documentation for Git support on the ")
        par:AddLink("tutorial page","/tutorials/language/teamsAndVersionControl.html")
        par:AddText(".")

        AddHeading(bodyDiv, "Editor Upgrades", 3)
        bodyDiv:AddParagraph("We have significantly improved the editor experience for Quorum Studio 2.0. There are now keyboard navigable annotations that show up in the editor, which indicate information like hints or Git file differences. In addition, we've improved performance and squashed a bunch of bugs in the editor. We have also included some accessibility hotkeys to give screen reader users more information about where they are in the editor. These keys are hooked up to a few other components as well and provide summaries or location info. This is especially useful, we think, in the accessible scene editor.")

        AddHeading(bodyDiv, "Auto-update", 3)
        bodyDiv:AddParagraph("By popular request, we have created an auto-update system for Quorum Studio. In 2.0, you'll need to uninstall/reinstall 1.1 because of changes behind the scenes, but after that, Quorum Studio can update itself from the Quorum Servers. This also includes a 'live on the edge' track. If you are in the beta program, you can always grab the latest build from the Quorum team. This lets you grab exactly the same version our dev team uses when building Quorum Studio and Quorum. To get it, you can set the beta flag in your quorum studio preferences file. So far, this is intentionally not exposed in the user interface so users don't do it accidentally.")

        AddHeading(bodyDiv, "Optimizations", 3)
        bodyDiv:AddParagraph("We have made considerable progress on optimization of Quorum Studio. On our end, small projects end up with a memory footprint in the range of 1 gigabyte for the system. For instances of Quorum Studio with multiple large projects open, like reading multiple versions of Quorum's entire standard library, we are getting in the range of 4.5 gigabytes after a day of continual use. CPU usage at idle is now down on our end to values we see that are comparable to Firefox, Slack, or other utilities. Compared to our older Sodbeans, we have calculated that for small projects we have ballpark a 50% reduction in memory usage overall. These numbers vary by operating system and usage, but the point is that we have made big strides this year and this should help the user experience, especially for those of us without access to high-powered machines. ")

        AddHeading(bodyDiv, "Quorum 8.0",2)
        bodyDiv:AddParagraph("While we will not put out separate notes for Quorum this year, Quorum Studio 2.0 includes Quorum 8. Quorum 8 is largely a bug fix and optimization release. We have continued making the standard library faster, more robust, and more flexible. In addition, we have included integration with scenes right in. Besides this, we have made a considerable number of small changes to the libraries, adding extra actions here and there where we think it makes coding in Quorum just a little bit easier. For optimization, we have integrated a great deal of the improvements on memory and processor consumption into the standard library itself so that all users in the open source community can benefit.")

        AddHeading(bodyDiv, "Bug fixes", 3)
        bodyDiv:AddParagraph("At a high level, we have made significant improvements across a number of systems. This includes, since our beta in the summer of 2019, more than 300 bug fixes either that we found or that were sent to us by members of the community.")

        AddHeading(bodyDiv, "Sodbeans End of Life", 3)
        bodyDiv:AddParagraph("The team has made the executive decision to call 2020 the end of life for Sodbeans. We all enjoyed working on Sodbeans and, while it certainly had plenty of flaws and these are why we built Quorum Studio in the first place, it helped us build a community and changed the way we program in many ways. Notably, we could not realistically have built Quorum without it. We also want to thank the members of the NetBeans community, especially colleagues at Sun/Oracle, the old NetBeans Dream Team, or others like Geertjan Wielenga or Tim Boudreau that helped support us so much over the years. While we are super excited about our new direction and having our own toolchain to directly control accessibility has been a dream for years, we would not be here without that community's help and support and so we wanted to say thank you one last time!")
    end

    action Quorum7Notes(Section bodyDiv)
        text listStyle = "list-disc list-outside pl-8"
        AddHeading(bodyDiv, "Quorum Studio 1.0 December 13th, 2019", 2)
        bodyDiv:AddParagraph("The Quorum team has been hard at work on a new development environment for the programming language, which we have code named Quorum Studio. In these notes, we have outlined some of the initial features. Quorum Studio is large and we do not pretend to document all of the features here, but we hope this will give readers the big picture of the first version. As this project has been in development for several years now, we are incredibly excited to get this to the community.")
    
        AddHeading(bodyDiv, "Quorum Studio Projects", 3)
        bodyDiv:AddParagraph("Quorum Studio has its own project system. Like its predecessor, Sodbeans, we can create, load, close, build, debug, and take other actions on projects. Projects contain properties and preferences, which can be adjusted and customized. This includes simple things, like a project automatically loading into a Mindstorms LEGO robot, to complex things like loading custom plugins. All major actions that can be done in Sodbeans have been ported over to Quorum Studio.")

        AddHeading(bodyDiv, "Quorum Studio Preferences", 3)
        bodyDiv:AddParagraph("Like many development environments, Quorum Studio remembers the way you setup the environment and automatically stores, loads, and adjusts these preferences as you use it. Generally, most major systems in Quorum Studio are automatically plugged into this preferences system and users do not need to do anything to use it. ")


        AddHeading(bodyDiv, "Quorum Studio Installer", 3)
        bodyDiv:AddParagraph("In NetBeans, we had to require behind the scenes and somewhat custom installation of Java and other dependencies, which became complicated as Oracle tightened their license agreements. Eventually, this forced us to recommend users switch to OpenJDK, which made installation even more complicated. Over time, this felt to the development team like this process was getting harder and harder for teachers and students. In Quorum Studio, we bundle the minimal subset of additional dependencies in with the installer on Mac and Windows automatically. Generally, if the installer is used, everything required by Quorum Studio should be included without altering system settings and without any complex additional steps.")

        AddHeading(bodyDiv, "Development", 3)
        bodyDiv:AddParagraph("Quorum Studio offers many industry standard features for software development. This includes user interface elements like tabbed panes, syntax and semantics highlighting editors, console output windows, breakpoints, compiling, and debugging. We have remapped many of the default hotkeys away from the defaults in NetBeans to make them more intuitive. Normally, we are now using the first letter of an operation as a mnemonic. For example, running a program would be COMMAND + R on Mac or CTRL + R on Windows. Many other hotkeys have been default remapped similarly.")


        AddHeading(bodyDiv, "Editing", 3)
        bodyDiv:AddParagraph("Editing source code in Quorum Studio has many common features, like syntax highlighting, semantics highlighting, editor hints, code completion, and other features. There are new editor hints compared to Sodbeans, like automatically generating getters and setters, and old ones are retained, like automatically generating use statements. Some of the color choices are now slightly different, like the use of purple to imply constructs that have a matching component (e.g., if and end).")

        AddHeading(bodyDiv, "Accessibility", 3)
        bodyDiv:AddParagraph("As always, the Quorum team cares deeply about accessibility. Quorum Studio is built on the hardware accelerated graphics platform in Quorum itself, which automatically connects down for accessibility (e.g., to screen readers). Besides screen reader connections, we have smart zooming features, keyboard shortcuts for a great deal of operations, and have worked hard to make navigating around the environment accessible and intuitive. In our first release, we only support screen readers on the Windows 10 platform. If we are lucky, we'll be able to raise enough capital to add other platforms over time. ")

        AddHeading(bodyDiv, "Quorum 7.5", 2)
        bodyDiv:AddParagraph("While we normally put out new versions of Quorum once per year, this year we are making an exception and putting out Quorum 7.5. By far, the biggest changes are significant additions to the user interface libraries, which form the foundation of Quorum Studio. This includes, especially, a near complete rewrite of the accessibility backend. Some of the major changes include altering how the graphics system connects to the accessibility systems and adding a variety of helper actions for providing context to the accessibility system. For example, it is possible to now directly ask a user interface component to send an accessibility event, even if the on-screen graphics is doing something different. This, and many other features, is incredibly useful for a wide variety of potential applications. ")

        AddHeading(bodyDiv, "A Quorum environment written in Quorum", 3)
        bodyDiv:AddParagraph("Quorum Studio is written in Quorum 7.5 from the ground up. The development environment we are using to build Quorum studio is also, you guessed it, Quorum Studio. This means that at this point we are eating our own dog food for the full pipeline, including for evolving the pipeline. To put this in perspective, Quorum's compiler is written in Quorum, our standard library is in Quorum, and now our development environment is too. As we have slowly built up and built out our environments, this has made it easier for us long-term to make progress on the project as a whole and to cut our reliance on third party tools, which cannot always be relied on for accessibility.")


        AddHeading(bodyDiv, "Sodbeans deprecation", 3)
        bodyDiv:AddParagraph("While we are excited about the release of Quorum Studio, with it comes just a tiny bit of sadness with the official deprecation of Sodbeans. While Sodbeans was always just a NetBeans derivative, with some accessibility enhancements and Quorum support, it was never as accessible as we wanted. It helped us start a community, but over time NetBeans was showing its age and was actively standing in the way of the innovations we wanted to make. As such, with the release of Quorum Studio, our development team has made the switch internally and we now use it exclusively for Quorum development. Further, NetBeans is no longer supported for the Quorum programming language and we do not plan to maintain it further. Schools and community partners can continue using it as they see fit, of course, but we suspect many partners will also make the change as Quorum Studio gets off the ground and matures over time.")

        AddHeading(bodyDiv, "Thank you", 3)
        bodyDiv:AddParagraph("As a final note, we want to provide a thank you to the community. Building this technology was a long, multi-year process. It took way longer to invent than we imagined and there were considerable technical and human challenges along the way. A ton of community members participated in our beta programs, many of you before Quorum Studio was really ready for prime time. Especially, we would like to thank Sina Bahram (Prime Access Consulting), Matt Campbell (Microsoft), Ameer Armaly (Google), and all of the amazing teachers at the 2019 Experience Programming in Quorum workshop. Crucially, we also want to thank the National Science Foundation, which made it possible to fund this crazy adventure in the first place. Your feedback and support, whether through financing or feedback, was essential and we truly cannot thank you all enough. ")

        AddHeading(bodyDiv, "Quorum 7.0 July 12th, 2019", 2)
        bodyDiv:AddParagraph("Quorum 7.0, and its corresponding sister release, 
        Quorum Studio 1.0 Beta, is a far-reaching and massive update to the 
        programming language. Many systems have been adjusted and changed with 
        many new libraries being added as well. At a high level, this includes: 
        1) significant changes to how accessibility is handled internally, 
        2) finishing off and in some cases rewriting many aspects of the user 
        interface libraries, and 3) significant optimization efforts across 
        the board. Many of these changes were created in order to make Quorum 
        Studio work effectively and be accessible. We will not outline all of 
        the changes, as there are too many, but these notes will provide a 
        high level overview.")

        UnorderedList featureList
        featureList:SetClassAttribute(listStyle)
        bodyDiv:Add(featureList)

        
        UnorderedList accessibility
        accessibility:SetClassAttribute(listStyle)
        ListItem accessibilityListItem = featureList:AddListItem("Accessibility Changes: Across the board, accessibility has received a major rewrite this release, in part to support Quorum Studio, but also to make games more accessible. Some changes will be discussed in the user interface section, but we highlight others here. Like previous releases, as of now we only have funding to support writing native operating system calls for accessibility on Windows. ")

        accessibilityListItem:Add(accessibility)
        accessibility:AddListItem("Significantly improved delays in the accessibility system. These were caused in part because of a bug in Windows (confirmed to us privately by Microsoft), which the team found a workaround for. Notably, in Quorum, vsync must be off for proper accessibility support, including any games written by users of Quorum. We realize this makes no sense, but it works and appears to be a bug in Microsoft's opengl implementation.")
        accessibility:AddListItem("Significantly improved the speed of many components in an attempt to make interface components (e.g., buttons, 3D models) smooth to use with a screen reader. This is tricky because the animation and the operating must 'sync up' in how they connect. This means newer computers with faster frame rates, while counterintuitive, could be more accessible.")
        accessibility:AddListItem("Significantly improved the UIA implementation of many components. This causes them to read more effectively in various screen readers. Not all components are perfect and we are still working on some of them, but it is a significant improvement across the board.")
        accessibility:AddListItem("Fully bypassed the Java Access Bridge. It is no longer used, in any capacity, in Quorum and has been replaced with our own accessibility architecture. This system is what makes it possible for us to create Quorum Studio.")
        accessibility:AddListItem("Improved how we connect with specifically NVDA. Other screen readers do not work as well and are harder to test with because they are not open source.")
        accessibility:AddListItem("Created a new system to automatically organize graphical components semantically. Items can now declare to be an 'accessible parent' which organizes them internally for a screen reader. This provides the programmer a good deal of control in organizing components for a screen reader.")

        ListItem interfaceListItem = featureList:AddListItem("User Interface Changes: The changes to the user interface system in Quorum 7 are so large that we cannot possibly list them all here. We will try to balance giving the big picture of the changes, while also mentioning some low level features. Overall, many components were added to accessibility and a great deal of graphical changes have been added as well.")
        UnorderedList interface
        interface:SetClassAttribute(listStyle)
        interfaceListItem:Add(interface)

        ListItem textBoxItem = interface:AddListItem("TextBox: Textboxes have been significantly improved across the board.")
        UnorderedList textbox
        textbox:SetClassAttribute(listStyle)
        textbox:AddListItem("Textboxes can now optionally have a 'gutter' for things like line numbers")
        textbox:AddListItem("Textboxes now have styling options, for things like underlines in the box")
        textbox:AddListItem("Textbox has significantly improved accessibility support across the board")
        textbox:AddListItem("Textboxes can now optionally switch to the next focused component with tab")
        textbox:AddListItem("Textboxes now use custom rendering, new in Quorum 7. This dramatically improves performance for this component. We estimate a 10x increase in performance for this component")


        interface:AddListItem("TabPane: Added focus targets so that when the panes or the tabs get focus, keyboard users are placed someplace sensible by default, chosen by the component. We also added a hotkey to kill a tab by default, which is CTRL + W or APPLE + W. Finally, we added Accessibility support for tab panes, which were missing last release")
        interface:AddListItem("Buttons: We made a number of minor improvements to buttons, including in layout, accessibility, and graphics")
        interface:AddListItem("Layout: We rewrote the layout system from scratch to make it easier to use. By default, most components now use a flow layout, like the web")
        interface:AddListItem("Checkboxes have been added as a new component")
        interface:AddListItem("Radio Buttons have been added as a new component")
        interface:AddListItem("Lists have also been added")
        interface:AddListItem("Tree: Trees now have icons and improved accessibility support")
        interface:AddListItem("Text Fields are now in the build as well. By default they have one line and move focus when tab is pressed.")
        interface:AddListItem("Menu: Menus in Quorum were buggy and they have been significantly improved in general. This includes improved accessibility support and a wide variety of other issues related to keyboard navigation, clicking, shortcuts, and other features")
        interface:AddListItem("ScrollPane: This component was rewritten to account for changes throughout the rest of the system. It should now do a better job of controlling and clipping items within it.")
        interface:AddListItem("Dialog: There are now dialogs, both modal and non-modal in Quorum, including accessibility support and default behaviors.")
        interface:AddListItem("File Chooser: Added a component for choosing files and folders")
        interface:AddListItem("Spreadsheet: This is a new component that acts as a table")
        interface:AddListItem("Tree Table: This component is similar to a properties window")
        interface:AddListItem("Smart Zoom: Added an interface scaling system to zoom in and out without pixelation")
        interface:AddListItem("Keyboard support: We have spent considerable time on keyboard support in the primary components. This is to make sure that if you are building a user interface that a keyboard user can get around.")

        ListItem optimizationsListItem = featureList:AddListItem("Optimizations: In initial testing of Quorum Studio, we observed it was far too slow and we thus spent considerable time optimizing the graphics engine. This takes several forms:")
        UnorderedList optimization
        optimization:SetClassAttribute(listStyle)
        optimizationsListItem:Add(optimization)

        optimization:AddListItem("Significant improvements to memory usage, which considerably, and in some cases massively, reduces the amount of garbage collection Quorum does behind the scenes")
        optimization:AddListItem("Significant improvements to physics and its memory optimizations")
        optimization:AddListItem("Significant improvements to memory optimization in certain components, especially the textbox")
        optimization:AddListItem("Significant improvements to render speed for the textbox. Internally, we are seeing an approximate 10x improvement to render speed")
        optimization:AddListItem("Significant improvements to memory optimization across the graphics engine in general")
        optimization:AddListItem("Significant speed improvements in the game engine broadly. ")
        optimization:AddListItem("Change the default font system to use image sheets on a per font level. This speeds up textboxes significantly.")

        ListItem documentationListItem = featureList:AddListItem("Documentation changes: We made a wide variety of changes across the board to our documentation. We highlight some of the biggest changes that went onto the site below:")
        UnorderedList documentation
        documentation:SetClassAttribute(listStyle)
        documentationListItem:Add(documentation)

        documentation:AddListItem("Per request of the College Board, we made a number of accessibility improvements on the site. This included quite a few changes to the Computer Science Principles web pages")
        documentation:AddListItem("Added quite a few new tutorials on the interface system")
        documentation:AddListItem("Did an edit pass on all of the existing user interface tutorials, updating them to Quorum 7 and simplifying them quite a bit. ")
        documentation:AddListItem("Added in some accessibility relevant information into the interface tutorials, accounting for the new accessibility system in Quorum 7")
        documentation:AddListItem("Rewrote the android setup tutorial and updated it to the new version")
        documentation:AddListItem("Added a tutorial on vibration in android")

        ListItem androidListItem = featureList:AddListItem("Android: We did not change a lot on Android this year, but we did make some improvements.")
        UnorderedList android
        androidListItem:Add(android)

        android:AddListItem("Significantly improved the Android vibration libraries to account for measurements on human perception taken with a Laser Doppler Vibrometer")
        android:AddListItem("After analysis and code reviews, we significantly changed the Android vibration library's interfaces. This breaks backward compatibility, but the team thinks it will make it easier to use in practice. Part of the reason is that it was previously easy to create vibration patterns that humans cannot perceive, which we evaluated in formal studies. This is now harder to do accidentally.")
        android:AddListItem("Added a variety of default vibration patterns to the library that can be used out of the box. We think this will make it easier to create vibration patterns that are known to be perceptually distinct")

        ListItem quorumListItem = featureList:AddListItem("Quorum language changes: While we avoid breaking backward compatibility broadly, as those familiar with the project are aware, since Quorum is an evidence-based language, we are up front that we may choose to break it once per year. This year, we made a number of changes that are not compatible with Quorum 6 and these changes were made because of critical performance improvements that were needed for Quorum Studio. Other minor language changes are listed below.")
        UnorderedList quorum
        quorum:SetClassAttribute(listStyle)
        quorumListItem:Add(quorum)

        quorum:AddListItem("The object class has removed the CompareResult class and been replaced with an integer. We are unclear from a human factors perspective which was easier to use, but creating CompareResult objects was a major bottleneck on various operations in the game engine. We did not really want to change it, but we felt like we had to. Users now just have to 'know' that a 1, 0, or -1 indicates the relationship between objects given in a compare.")
        quorum:AddListItem("Made a variety of memory optimizations. This included making some specialized arrays that handle memory differently. Unfortunately, this temporarily breaks the JavaScript side of the game engine, which means online support will remain at Quorum 6 until we can complete the work. This, again, was crucial for performance in Quorum Studio and dramatically reduces the memory footprint in the game engine. We mention it here because these changes were core to the compiler.")
        quorum:AddListItem("Added specialized arrays for particular types. We think a better solution would include changes to Quorum's type system, but this removes the performance bottlenecks we've encountered and may be re-evaluated in Quorum 8 or 9.")
        quorum:AddListItem("Fixed a number of minor compiler bugs. ")
        quorum:AddListItem("Updated the bootstrapping process for Quorum 7, which has also been fully automated in Quorum Studio 1. This is incompatible with bootstrapping in Quorum 6 and earlier and we highly recommend anyone bootstrapping to use Quorum 7 to bootstrap Quorum 7, as switching between the two is highly non-trivial.")
    end

    action Quorum6_07_Notes(Section bodyDiv)
        AddHeading(bodyDiv, "Quorum 6.0.5 - 6.0.7 July 21st, 2018", 2)
        Array<text> quorum6Patch2List
        quorum6Patch2List:Add("Fixed an extraordinarily rare, but nasty, compiler bug triggered by hash resizing in transitive dependencies.")
        quorum6Patch2List:Add("Fixed a bug in the 3D camera related to mouse and touch input.")
        quorum6Patch2List:Add("Improved performance of the array class.")
        quorum6Patch2List:Add("Fixed a variety of bugs in the JSON classes.")
        quorum6Patch2List:Add("Added binary file downloads into the network reader.")
        quorum6Patch2List:Add("Set the default network request to chunk mode.")
        bodyDiv:Add(GenerateList(quorum6Patch2List))
    end

    action Quorum6_01_Notes(Section bodyDiv)
        AddHeading(bodyDiv, "Quorum 6.0.1 - 6.0.4 July 14th, 2018", 2)
        Array<text> quorum6Patch1List
        
        
        quorum6Patch1List:Add("Fixed a bug in Quorum 6 where we accidentally turned off the speech engine both offline and online.")
        quorum6Patch1List:Add("Fixed a few bugs in the new accessibility system for Windows 10 64 bit on the native level.")
        quorum6Patch1List:Add("Fixed a crash bug in the new accessibility manager class.")
        quorum6Patch1List:Add("Removed debug output from the accessibility manager.")
        bodyDiv:Add(GenerateList(quorum6Patch1List))
    end

    action Quorum6_Notes(Section bodyDiv)
        AddHeading(bodyDiv, "Quorum 6.0 July 2nd, 2018", 2)
        bodyDiv:AddParagraph("Quorum 6 is part of a two-year release cycle for the 
        language, adding a great deal of new backend materials, a new user interface 
        library, significantly improved accessibility support, android support, basic 
        network services support, and other features. Because many of the feature 
        requests for our usual yearly cycle were so large, some we implemented about 
        half in the first year. This is especially true for user interface support, 
        with a good chunk of important interface elements included now, including the 
        backend, with the rest planned for Quorum 7.")
        bodyDiv:AddParagraph("Further, as part of Quorum 6, we are hard at work on a 
        new Integrated Development Environment (IDE) for the language, which we have 
        code named Quorum Studio. The reason we did this is several-fold. First, by 
        building our own interface libraries, we can directly control the accessibility 
        pipeline, providing us far more freedom in research than was ever possible 
        using NetBeans and Swing. Second, we also want to provide a way for the 'output' 
        of the code people write to be natively accessible, even for highly graphical 
        2D or 3D content. Finally, NetBeans itself was moved to the Apache Foundation 
        from Oracle. From a licensing and governance perspective, that's reasonable, 
        but whether the environment will be financially supported, and for how long, 
        is uncertain. As such, while NetBeans will not be supported in Quorum 7 and 
        beyond, we expect all future releases of Quorum to be available in the console, 
        on the web, and on the desktop in Quorum Studio.")
        bodyDiv:AddParagraph("Below is a list of all major features in Quorum 6. As 
        usual, the list abridged to provide the highlights:")
        
        text listStyle = "list-disc list-outside pl-8"
        UnorderedList quorum6List
        quorum6List:AddClassAttribute(listStyle)
        bodyDiv:Add(quorum6List)
        
        ListItem quorum6AndroidItem = quorum6List:AddListItem("Android Support: We have 
        added support for Android devices. In order to use it, you must accept the 
        license agreement from Google and download their development libraries. Once 
        this is complete, Quorum can convert itself to an Android compatible binary 
        and run on a device. Primary features are:")
        
        UnorderedList quorum6AndroidList
        quorum6AndroidList:AddClassAttribute(listStyle)
        quorum6AndroidItem:Add(quorum6AndroidList)
        
        quorum6AndroidList:AddListItem("Game and graphics support: Normal game events, including all of the new features, are now support on Android")
        quorum6AndroidList:AddListItem("Vibration controller support: This is a custom Vibration library designed to allow for various kinds of vibration events and patterns.")
        quorum6AndroidList:AddListItem("Soft Keyboard Support: This includes basic support for opening a keyboard and letting a user type into it")
        quorum6AndroidList:AddListItem("Font system: We have our own internal Font system for Android, as part of our goal to remove the FreeType library, which cannot be used across all our supported platforms.")
        quorum6AndroidList:AddListItem("Sound: Android devices only support Stereo sound, so far as we can tell, but sound is supported on these devices as well.")
        
        
        ListItem quorum6InterfaceItem = quorum6List:AddListItem("User Interface Library: We have developed a custom user interface library for Quorum, based on our own toolkit. The broad purpose of this was, besides it being a top request, that it allows to create our own accessibility libraries inside of Quorum's game engine, which bypasses Java's accessibility libraries on desktop and gives us considerably more control.")
            
        UnorderedList quorum6InterfaceList
        quorum6InterfaceList:AddClassAttribute(listStyle) 
        quorum6InterfaceItem:Add(quorum6InterfaceList)
        ListItem quorum6InterfaceSubListItem = quorum6InterfaceList:AddListItem("A wide variety of widgets are supported in this release, with the rest scheduled for Quorum 7. For Quorum 6, this includes:")
        
        UnorderedList quorum6InterfaceSubList
        quorum6InterfaceSubList:AddClassAttribute(listStyle)   
        quorum6InterfaceSubListItem:Add(quorum6InterfaceSubList)
        quorum6InterfaceSubList:AddListItem("Libraries.Interface.Controls components, like Textboxes, Scrollpanes, Menus, Buttons, Tab Panes, and Trees")
        quorum6InterfaceSubList:AddListItem("Libraries.Interface.Events, for knowing when the selection, focus, events, or other properties change in a user interface")
        quorum6InterfaceSubList:AddListItem("Libraries.Interface.Selections contains a variety of classes for getting the current selection from components. For example, this might tell you what node in a tree is selected or what part of a text editor is selected.")
        quorum6InterfaceSubList:AddListItem("Libraries.Interface.Vibration can be used on supported mobile platforms to cause the device to vibrate")
        quorum6InterfaceSubList:AddListItem("Libraries.Interface.Behaviors is a package for many of the default behaviors seen in user interface components")
        quorum6InterfaceSubList:AddListItem("Libraries.Interface.Layouts lays out the components into sensible configurations. It attempts to be screen size responsive, but more work is needed in this package.")
        quorum6InterfaceSubList:AddListItem("Libraries.Interface.Mobile currently only contains one class, for the soft keyboard, but is a placeholder in case the community wants to add more in the future for other sensors.")
        quorum6InterfaceSubList:AddListItem("Libraries.Interface.View allows you to make different looks for components without them being part of the event infrastructure")
        quorum6InterfaceSubList:AddListItem("Besides these packages, we have added a significant number of support classes for routing events, actions for components, and other things. The InputSet and InputTable classes are relevant for these.")
        
        
        ListItem quorum6InterfaceAccessibilityListItem = quorum6InterfaceList:AddListItem("Custom accessibility engine for the widgets. This allows the user to customize their games with accessibility support, allowing out of the box screen reader support. ")
        
        UnorderedList quorum6InterfaceAccessibilityList
        quorum6InterfaceAccessibilityList:AddClassAttribute(listStyle)
        quorum6InterfaceAccessibilityListItem:Add(quorum6InterfaceAccessibilityList)
        quorum6InterfaceAccessibilityList:AddListItem("Currently, this is routed through UI Automation control on Windows. We hope to add other platforms for accessibility in the future.")
        quorum6InterfaceAccessibilityList:AddListItem("Most interface elements are supported")
        quorum6InterfaceAccessibilityList:AddListItem("Users can create custom components in games, like 3D models, and make them accessible by declaring them to be 'custom' graphics objects. ")
        
        
        ListItem quorum6CompilerItem = quorum6List:AddListItem("Quorum Compiler Improvements: Significant improvements have been made to the Quorum programming language itself, focusing on performance.")
        UnorderedList quorum6CompilerList
        quorum6CompilerList:AddClassAttribute(listStyle)
        quorum6CompilerItem:Add(quorum6CompilerList)
        quorum6CompilerList:AddListItem("Build times inside of NetBeans or Quorum Studio are significantly improved, sometimes by 20x or more. This is caused by a new build caching system in the compiler and improvements to a variety of algorithms.")
        quorum6CompilerList:AddListItem("Clean and Build, even though it rebuilds everything, is still faster than before")
        quorum6CompilerList:AddListItem("Several improvements to code completion in the development environment")
        quorum6CompilerList:AddListItem("Significant performance improvements to parsing performance inside of NetBeans or Quorum Studio")
        quorum6CompilerList:AddListItem("Quorum now outputs the jar file and cached versions of the standard libraries and standard plugins files. These must be included in any distribution of the binaries")
        quorum6CompilerList:AddListItem("The console compiler has also seen performance improvements, although they are less drastic then inside the development environment. The reason is because the console cannot cache in quite the same way.")
        
        
        ListItem quorum6NetworkingItem = quorum6List:AddListItem("Networking Support: This release offers the beginning of Networking support for Quorum. As a first step, we have added a library somewhat like AJAX, with the intent of letting the user consume online services (e.g., google maps, spreadsheets) and using them in their applications. We built this as part of a separate National Science Foundation grant called IDATA.")
        UnorderedList quorum6NetworkingList
        quorum6NetworkingList:AddClassAttribute(listStyle)
        quorum6NetworkingItem:Add(quorum6CompilerList)
        quorum6NetworkingList:AddListItem("Basic Network messages, events, and responses are supported")
        quorum6NetworkingList:AddListItem("Support included for Quorum on the web and on desktop")
        quorum6NetworkingList:AddListItem("Added a custom JSON parsing architecture, heavily abstracted, for reading and writing into that data format.")
        quorum6NetworkingList:AddListItem("Added support for the Skynet robotic telescope system, both on desktop and on the web.")
        
        
        ListItem quorum6DocumentationItem = quorum6List:AddListItem("Lessons, Tutorials, and Documentation: We've improved documentation again.")
        UnorderedList quorum6DocumentationList
        quorum6DocumentationList:AddClassAttribute(listStyle)
        quorum6DocumentationItem:Add(quorum6DocumentationList)
        
        ListItem quorum6DocumentationListItem = quorum6DocumentationList:AddListItem("We added a variety of new tutorials for the user interface library. These include:")
        UnorderedList quorum6DocumentationInterfaceList
        quorum6DocumentationInterfaceList:AddClassAttribute(listStyle)
        quorum6DocumentationListItem:Add(quorum6DocumentationInterfaceList)
        quorum6DocumentationInterfaceList:AddListItem("Overview")
        quorum6DocumentationInterfaceList:AddListItem("Behaviors")
        quorum6DocumentationInterfaceList:AddListItem("Buttons")
        quorum6DocumentationInterfaceList:AddListItem("Trees")
        quorum6DocumentationInterfaceList:AddListItem("Text Boxes")
        quorum6DocumentationInterfaceList:AddListItem("Tab Panes")
        quorum6DocumentationInterfaceList:AddListItem("Menus")
        quorum6DocumentationInterfaceList:AddListItem("Scroll Panes")
        quorum6DocumentationInterfaceList:AddListItem("Focus")
        quorum6DocumentationInterfaceList:AddListItem("InputSets")
        quorum6DocumentationInterfaceList:AddListItem("Layouts")
        
        
        ListItem quorum6NetworkingListItem = quorum6DocumentationList:AddListItem("Added new tutorials for the networking systems")
        UnorderedList quorum6DocumentationNetworkingList
        quorum6DocumentationNetworkingList:AddClassAttribute(listStyle)
        quorum6NetworkingListItem:Add(quorum6DocumentationNetworkingList)
        quorum6DocumentationNetworkingList:AddListItem("Overview")
        quorum6DocumentationNetworkingList:AddListItem("GET Method")
        quorum6DocumentationNetworkingList:AddListItem("POST Method")
        quorum6DocumentationNetworkingList:AddListItem("Request Message")
        quorum6DocumentationNetworkingList:AddListItem("Skynet")
        
        
        ListItem quorum6DocumentationJSONListItem = quorum6DocumentationList:AddListItem("New JSON data tutorials")
        UnorderedList quorum6DocumentationJSONList
        quorum6DocumentationJSONList:AddClassAttribute(listStyle)
        quorum6DocumentationJSONListItem:Add(quorum6DocumentationJSONList)
        quorum6DocumentationJSONList:AddListItem("Overview")
        quorum6DocumentationJSONList:AddListItem("Primitives")
        quorum6DocumentationJSONList:AddListItem("Arrays")
        quorum6DocumentationJSONList:AddListItem("Nesting")
        quorum6DocumentationJSONList:AddListItem("Reading")
        quorum6DocumentationJSONList:AddListItem("Writing")
        
        quorum6DocumentationList:AddListItem("Added documentation for the Physics and Collision systems. This was previously missing in Quorum 5. Over time, we hope to go back and correct missing documentation issues for more systems in Quorum.")
        quorum6DocumentationList:AddListItem("Began working on a computer science principles course modeled after the one by Code.org.")
        
        ListItem quorum6MiscItem = quorum6List:AddListItem("Miscellaneous additional changes: These changes include general additions that have had an impact in various ways.")
        UnorderedList quorum6MiscList
        quorum6MiscList:AddClassAttribute(listStyle)
        quorum6MiscItem:Add(quorum6CompilerList)
        quorum6MiscList:AddListItem("Added a Matrix class in Libraries.Compute for conducting matrix operations or transformations.")
        quorum6MiscList:AddListItem("Added a matrix transformation set of libraries and a way to add your own")
        quorum6MiscList:AddListItem("Added a new Sort action in Array to allow you to pass a Comparison object. The idea is to allow you to sort the array in different ways.")
        quorum6MiscList:AddListItem("In addition to significant performance improvements in the compiler, we also fixed a variety of bugs. ")
        quorum6MiscList:AddListItem("Added a way to load in a Matrix into the Drawable class. It's useful for people wanting to load in pixel values (greyscale).")
        quorum6MiscList:AddListItem("wanting to load in pixel values (greyscale).
        Upgraded our backend graphics library from LWJGL2 to LWJGL3.")
        quorum6MiscList:AddListItem("Constants in the keyboard event class have changed slightly due to our graphics upgrade.")
        quorum6MiscList:AddListItem("The screen resolution class has been adjusted because of the change to LWJGL3.")
        quorum6MiscList:AddListItem("Added an OnExit action in Game, allowing users to react to the window closing. Returning false from this action prevents the window from closing.")
        
        bodyDiv:AddParagraph("Finally, because our release cycle this year is unusual 
        and we are at the halfway point for parts of the project, there are several 
        known issues. This list this thus includes a few known bugs that will be fixed 
        in a patch as well as some features that are being worked on currently.")
        
        UnorderedList quorum6List2
        quorum6List2:AddClassAttribute(listStyle)
        bodyDiv:Add(quorum6List2)
        quorum6List2:AddListItem("Android: Debugging support is available for Android, but the code for uploading Android apps to the app store, through what is called a signed APK, is not yet complete. We are nearly finished with this and expect it will come out in a patch.")
        quorum6List2:AddListItem("User interfaces: Several commonly used user interface features are not finished yet. In some cases, the backend for these features is finished, but not the user-facing or accessibility code. These include Lists, Checkboxes, Radio Buttons, and Tables")
        quorum6List2:AddListItem("Accessibility: Out of the box accessibility support is only available on Windows in Quorum 6. Self-voicing apps can be made quite easily by listening to the events on the backend, but accessibility systems on Mac, Linux, and elsewhere are not compatible with each other in their native programming languages/environments and will require significantly more labor. We welcome external teams interested in collaboration for their particular platform to get in touch.")
        quorum6List2:AddListItem("Android Tutorials: We are still finishing up the tutorials on how to use Android Devices with Quorum. We suspect they will come out before our National Conference (Experience Programming in Quorum).")
        quorum6List2:AddListItem("iPhone support has been disabled for now and the tutorial is off the website. Unfortunately, the tool we were using, called RoboVM, was purchased by a third party and made closed source. Alternative versions are appearing, but we do not support them at this time. Given Apple's recent announcement of deprecating OpenGL, iPhone support for Quorum in the future is unclear.")
        quorum6List2:AddListItem("Android devices do not support 3D audio by default, including distance attenuation, doppler, or listener positioning. Android only supports panning between the left and right channels.")
        
    end

    action Quorum_5_Notes(Section bodyDiv)
        AddHeading(bodyDiv, "Quorum Patches", 2)
        bodyDiv:AddParagraph("This is a list of patches pushed to live. For small patches
            pushed by the team, we sometimes write notes for the last several. This 
            should be considered an abridged list of changes.")
        AddHeading(bodyDiv, "Quorum 5.0.13 September 15th, 2017", 2)
        bodyDiv:AddParagraph("We made a small patch to Quorum this week and additionally upgraded the website. These changes included:")
        Array<text> quorum5a1a3
        quorum5a1a3:Add("Added a module dependency system to Quorum, so that we can reference other Quorum projects from within a project.")
        quorum5a1a3:Add("Fixed a bug on Mac OS X causing working directories in file types to give an incorrect folder while using Quorum in the debugger.")
        quorum5a1a3:Add("Added an online project system to the website.")
        quorum5a1a3:Add("The save and load buttons on the website now work differently. Specifically, they now load or save a project that can be shared with others, made public or private, or deleted from the profile page.")
        quorum5a1a3:Add("Projects built in an online environment can now be embedded on other websites using the embed button.")
        quorum5a1a3:Add("Added a forgot password link in the login page.")
        quorum5a1a3:Add("Add a profile page for storing and referencing all of your online Quorum projects.")
        quorum5a1a3:Add("Fixed a few other minor issues on the website (e.g., broken links, typos).")
        bodyDiv:Add(GenerateList(quorum5a1a3))
        bodyDiv:AddParagraph("We would like especially thank Sarah Judd at Girls Who Code for helping us in the design of the new project system.")
        
        
        AddHeading(bodyDiv, "Quorum 5.0.11 June 2nd, 2017", 2)
        bodyDiv:AddParagraph("We fixed a bug on Desktop that caused the IsPlaying action in Audio to crash if used while streaming AudioSamples.")
        
        AddHeading(bodyDiv, "Quorum 5.0 June 1st, 2017", 2)
        bodyDiv:AddParagraph("Quorum 5 is the next significant update to the programming 
            language. Notable enhancements include a new physics system for 2D and 3D 
            games and a new digital signal processing engine. Finally, we have 
            significantly improved web support and now much of the language can be run 
            in a browser, on iPhone, or on Desktop.")

        text listStyle = "list-disc list-outside pl-8"
        UnorderedList quorum5List
        quorum5List:SetClassAttribute(listStyle)
        ListItem quorum5PhysicsItem = quorum5List:AddListItem("Embedded Physics: We now include a physics system that 
            allows more control over real-time games. This system, inspired in part by 
            the open source projects Box2D and Bullet, is unified to be similar across 
            different kinds of games, using our own architecture. It  allows the 
            developer to use common physics properties such as force, restitution 
            (bounciness), and friction to move objects in more realistic ways. Further, 
            the system includes a system of joints to represent complex physical 
            interactions (e.g., ropes, springs).")
        UnorderedList quorum5PhysicsList
        quorum5PhysicsList:SetClassAttribute(listStyle)
        quorum5PhysicsList:AddListItem("Games may use built-in physics simulation for both 2D and 3D games.")
        quorum5PhysicsList:AddListItem("The new physics engine allows for consistent 
                physical behavior to be applied across all items on a layer, such as 
                gravity and realistic collision behavior.")
        quorum5PhysicsList:AddListItem("Using physics does not require understanding 
                the related mathematics and is intended to be used even by high-school 
                aged people.")
        quorum5PhysicsList:AddListItem("A series of tutorials on how to use the physics system has been added. ")
        
        quorum5PhysicsItem:Add(quorum5PhysicsList)
        
        
        ListItem quorum5DSPListItem = quorum5List:AddListItem("Digital Sound Improvements: We now include a digital signal processing engine with real-time support for manipulating audio on the web or desktop. This system provides low level access to sound samples and a variety of support actions.")
        UnorderedList quorum5DSPList
        quorum5DSPList:SetClassAttribute(listStyle)
        quorum5DSPList:AddListItem("Added the AudioSamples class, which can be used to 
            manually interact with low level audio data.")
        quorum5DSPList:AddListItem("Added a queued audio system that allows users to 
            supply and adjust audio data while it is in use in real time.")
        quorum5DSPList:AddListItem("Added microphone support to the audio system.")
        quorum5DSPList:AddListItem("Added controls to the Audio class, which allow the 
            programmer to adjust how far sound can be heard from an audio source’s position and how quickly its volume decreases over distance.")
        quorum5DSPListItem:Add(quorum5DSPList)
        
        
        ListItem quorum5WebsiteListItem = quorum5List:AddListItem("Quorum on the Web: We have finished a major initiative to allow Quorum to convert itself to JavaScript. The broad purpose is to allow people using Quorum to create applications and put them up on their personal websites, in addition to making more of Quorum runnable online.")
        UnorderedList quorum5WebsiteList
        quorum5WebsiteList:SetClassAttribute(listStyle)
        quorum5WebsiteList:AddListItem("Finished a Quorum to JavaScript converter that allows a vast majority of the specification to be run online. One exception is that errors do not provide quite the same information as they do on desktop platforms.")
        quorum5WebsiteList:AddListItem("Games written in Quorum can now be deployed to the web.")
        quorum5WebsiteList:AddListItem("Most audio features, including the new digital signal processing libraries, are now supported on the web. A small number of Sound libraries (i.e. the MIDI libraries) are still only available on Desktop.")
        quorum5WebsiteList:AddListItem("Some of the online development environments now support running games from within the browser. Online environments that support the feature contain an OpenGL canvas (basically a big box) below the environment. We only include the box for environments where it is relevant to the tutorial or lesson.")
        quorum5WebsiteList:AddListItem("There are a few differences with programs compiled to the web, which we have minimized as much as we can. For example, Labels are not yet supported in games and the files are loaded differently in some cases due to JavaScript's loading mechanism within a browser.")
        quorum5WebsiteListItem:Add(quorum5WebsiteList)
        
        ListItem quorum5QuorumWebListItem = quorum5List:AddListItem("Website Changes: We have finished a major overhaul of the website. Notably, all content is now organized into a set of organized tracks. We made this decision both from community feedback and analytics data on how people are using the website.")
        UnorderedList quorum5QuorumWebList
        quorum5QuorumWebList:SetClassAttribute(listStyle)
        quorum5QuorumWebList:AddListItem("While remaining accessible, we have significantly improved the 'look' of the Quorum website to be more modern.")
        ListItem valueWeblist = quorum5QuorumWebList:AddListItem("There are now four tracks for curriculum:")
        UnorderedList quorum5TrackList
        quorum5TrackList:SetClassAttribute(listStyle)
        quorum5TrackList:AddListItem("Core: This track includes foundational information about computer science.")
        quorum5TrackList:AddListItem("Visual: This track focuses on creating highly visual applications.")
        quorum5TrackList:AddListItem("Audio: This track focuses on creating auditory or musical applications.")
        quorum5TrackList:AddListItem("Robotics: This track, which gears somewhat younger than the others, is based around LEGO robotics using the Mindstorms toolkit.")
        valueWeblist:Add(quorum5TrackList)
        
        quorum5QuorumWebList:AddListItem("The site has been significantly reorganized, based in large part from looking at analytics data on how users are engaging with the material")
        quorum5QuorumWebList:AddListItem("The reference page has been re-organized to make material easier to find.")
        quorum5QuorumWebList:AddListItem("Improved the online development environment to better support games and audio.")
        quorum5QuorumWebListItem:Add(quorum5QuorumWebList)
        
        ListItem quorum5LessonListItem = quorum5List:AddListItem("Lesson Improvements: We have made significant improvements to the online lessons and tutorials used for learning or teaching Quorum. This includes:")
        UnorderedList quorum5LessonList
        quorum5LessonList:SetClassAttribute(listStyle)
        quorum5LessonList:AddListItem("The addition of online development environments embedded into many lessons.")
        quorum5LessonList:AddListItem("Making the overall mapping to Computer Science Principles more obvious as a whole.")
        quorum5LessonList:AddListItem("Added a mapping to common core.")
        quorum5LessonList:AddListItem("Improvements to the text and content of many lessons. Some were modified and improved, while others were rewritten from scratch.")
        quorum5LessonList:AddListItem("Made it more obvious how lessons 'could be' ordered for learners or teachers.")
        quorum5LessonListItem:Add(quorum5LessonList)
        
        ListItem quorum5GeneralGameListItem = quorum5List:AddListItem("General Game Engine Changes")
        UnorderedList quorum5GeneralGameList
        quorum5GeneralGameList:SetClassAttribute(listStyle)
        quorum5GeneralGameList:AddListItem("Multiple full screen resolutions are now supported through the ScreenResolution class, and the game window may now be resized or made full screen while the game is running.")
        quorum5GeneralGameList:AddListItem("Skyboxes have been added to the game libraries. Skyboxes are a way to make games appear more like a virtual world, effectively creating a 3D background.")
        quorum5GeneralGameList:AddListItem("Made a variety of improvements to the Camera class. This includes the addition of Yaw, Pitch, and Roll as controls. Using these actions is not required, but can be simpler for many kinds of games and applications.")
        quorum5GeneralGameListItem:Add(quorum5GeneralGameList)
        
        ListItem quorum5MiscListItem = quorum5List:AddListItem("A variety of general changes or bug fixes")
        UnorderedList quorum5MiscList
        quorum5MiscList:SetClassAttribute(listStyle)
        quorum5MiscList:AddListItem("Added NetBeans 8.2 Support.")
        quorum5MiscList:AddListItem("Added a -javascript flag to the console compiler to convert a Quorum program to JavaScript.")
        quorum5MiscList:AddListItem("Updated documentation on the website for the standard library and in the console compiler.")
        quorum5MiscList:AddListItem("Fixed several minor inconsistencies in the way flags are passed to the console compiler.")
        quorum5MiscListItem:Add(quorum5MiscList)
        
        ListItem quorum5KnownIssuesListItem = quorum5List:AddListItem("Known Issues")
        UnorderedList quorum5KnownIssuesList
        quorum5KnownIssuesList:SetClassAttribute(listStyle)
        quorum5KnownIssuesList:AddListItem("Microphone support is not yet available on the web.")
        quorum5KnownIssuesListItem:Add(quorum5KnownIssuesList)
        bodyDiv:Add(quorum5List)
    end

    action Quorum_4_Patches(Section bodyDiv)
        text listStyle = "list-disc list-outside pl-8"
        AddHeading(bodyDiv, "Quorum 4.0.6 January 21st, 2017", 2)
        bodyDiv:AddParagraph("This patch includes a variety of small changes as we 
        continue with Quorum 4. Besides the fixes below, this version includes a 
        new version of the website, which should bring us one step closer to web support 
        for many of Quorum's features. ")
        UnorderedList unorderedList406
        unorderedList406:SetClassAttribute(listStyle)
        unorderedList406:AddListItem("Fixed an but pointed out by Amanda Rodda+Tyler with the JavaScript converter causing it to not properly popup input dialogs.")
        unorderedList406:AddListItem("Fixed a minor issue with the compiler causing generics to be slightly less strict than intended.")
        unorderedList406:AddListItem("Added SetInput and Empty actions to the textbox class.")
        unorderedList406:AddListItem("Fixed an issue with the textbox causing it to sometimes 
            delete two keys instead of one.")
        unorderedList406:AddListItem("Fixed a spelling mistake in one of the package names.")
        unorderedList406:AddListItem("Continued working on the documentation for the various new systems.")
        unorderedList406:AddListItem("Rewrote the the web library generator for the standard library.")
        unorderedList406:AddListItem("Fixed a variety of bugs in the JavaScript converter.")
        unorderedList406:AddListItem("Fixed a grammatical issue in one of the compiler errors.")
        unorderedList406:AddListItem("Fixed another issue with rotation in the game engine.")
        unorderedList406:AddListItem("Fixed a minor compiler bug causing an exception to be thrown on invalid input.")
        unorderedList406:AddListItem("Fixed a bug pointed out by Pete Lamonica where carriage return and line feed were flipped in the JavaScript converter.")
        unorderedList406:AddListItem("Made some additions to the game engine that will help toward running it on the web.")
        unorderedList406:AddListItem("The website has now been rewritten from scratch. A vast 
        majority of it is now written in Quorum.")
        unorderedList406:AddListItem("Many of the web tutorials have been rewritten from scratch
        and are now runnable on the web. Some lessons are now runnable online as well.")
        unorderedList406:AddListItem("Made a significant number of accessibility improvements 
        on the website, including with the development environment and in general.")
        unorderedList406:AddListItem("Added an option to compile Quorum to JavaScript 
        from the options window. The feature should be considered Beta until Quorum 5.0")
        unorderedList406:AddListItem("Added several options for changing the screen resolution
        both in windowed and full screen mode.")
        unorderedList406:AddListItem("Some features from the game library are now supported online.")
        bodyDiv:Add(unorderedList406)
        
        AddHeading(bodyDiv, "Quorum 4.0.5 September 9th, 2016", 2)
        bodyDiv:AddParagraph("This patch includes a variety of small changes as we continue with Quorum 4:")
        UnorderedList unorderedList0
        unorderedList0:SetClassAttribute(listStyle)

        bodyDiv:Add(unorderedList0)
        ListItem listItem1
        unorderedList0:Add(listItem1)
        listItem1:AddText("We have finished the 3D collision system for Quorum 4. This system now works similarly to how 2D collision works.")
        ListItem listItem2
        unorderedList0:Add(listItem2)
        listItem2:AddText("Added a new feature allowing fonts to have colors other than black. We had planned this feature for some time and are glad to finally have it in the build.")
        ListItem listItem3
        unorderedList0:Add(listItem3)
        listItem3:AddText("Fixed a bug causing SetVolume to set the volume for all sounds, not the individual instance.")
        ListItem listItem4
        unorderedList0:Add(listItem4)
        listItem4:AddText("Fixed a bug causing models to scale incorrectly if the object has been rotated.")
        ListItem listItem5
        unorderedList0:Add(listItem5)
        listItem5:AddText("Added a way to rotate children embedded in a model, which is called RotateChildren in the Item3D class. An example use case might be if we want to do things like spin spheres around a model.")
        ListItem listItem6
        unorderedList0:Add(listItem6)
        listItem6:AddText("Added an action to Item3D allowing the user to Rotate Around a point in space. This new action is in Item3D and has the following signature: action RotateAround(Vector3 point, Vector3 axis, number degrees).")
        ListItem listItem7
        unorderedList0:Add(listItem7)
        listItem7:AddText("Added a way to obtain a unique key for each loaded 3D model on the system. To get it, we call GetBlueprintKey in the model class.")
        ListItem listItem8
        unorderedList0:Add(listItem8)
        listItem8:AddText("Fixed several small bugs causing an error to be thrown for certain keys inside of a text box.")
        ListItem listItem9
        unorderedList0:Add(listItem9)
        listItem9:AddText("Fixed a bug with streamed and non-streamed audio, causing them to share the same ID. This was causing some programs to have side effects if both were used.")
        ListItem listItem10
        unorderedList0:Add(listItem10)
        listItem10:AddText("Added an action called GetSource to Mouse Events, which allows the user to determine what fired the event.")
        ListItem listItem11
        unorderedList0:Add(listItem11)
        listItem11:AddText("We adjusted the SetVolume and SetBalance actions in audio so that they properly clamp values to between -1 and 1.")
        ListItem listItem12
        unorderedList0:Add(listItem12)
        listItem12:AddText("Many of the examples for SetListenerPosition were incorrect in the online documentation. These have been fixed.")
        ListItem listItem13
        unorderedList0:Add(listItem13)
        listItem13:AddText("Added a way to connect the game engine into a Java Canvas.")
        
        AddHeading(bodyDiv, "Quorum 4.0.4 August 6th, 2016", 2)
        bodyDiv:AddParagraph("This patch fixes a variety of issues found at EPIQ 2016 and after by users. This patch includes:")
        UnorderedList unorderedList14
        unorderedList14:SetClassAttribute(listStyle)
        bodyDiv:Add(unorderedList14)
        ListItem listItem15
        unorderedList14:Add(listItem15)
        listItem15:AddText("Made Several fixes to the sound system, including a case where we accidentally flipped the axis in 3D sound for certain helper actions (e.g., rotation).")
        ListItem listItem16
        unorderedList14:Add(listItem16)
        listItem16:AddText("Increased the number of sounds that can be played at the same time in the game engine.")
        ListItem listItem17
        unorderedList14:Add(listItem17)
        listItem17:AddText("Fixed a bug causing rotation in the z-axis to rotate counterclockwise instead of clockwise. The other axes had the intended behavior.")
        ListItem listItem18
        unorderedList14:Add(listItem18)
        listItem18:AddText("Fixed a bug causing rotation hierarchies (e.g., children several levels deep) to not properly rotate.")
        ListItem listItem19
        unorderedList14:Add(listItem19)
        listItem19:AddText("Fixed a bug causing projects loaded on a networked drive in Windows 7 or 10 to not load game engine projects correctly.")
        ListItem listItem20
        unorderedList14:Add(listItem20)
        listItem20:AddText("Finished more documentation for the game classes. There is still more left to complete, but this adds quite a bit. Many examples are now included where they were previously missing.")
        ListItem listItem21
        unorderedList14:Add(listItem21)
        listItem21:AddText("Added actions to get and set the cursor position in a text box.")
        ListItem listItem22
        unorderedList14:Add(listItem22)
        listItem22:AddText("Fixed a bug in text box causing an exception to be thrown if the user typed a space.")
        ListItem listItem23
        unorderedList14:Add(listItem23)
        listItem23:AddText("Fixed a minor bug in the compiler causing the system to throw an exception if casts are used incorrectly in a particularly peculiar way.")
        ListItem listItem24
        unorderedList14:Add(listItem24)
        listItem24:AddText("Fixed a bug causing layers to not properly handle event listeners if a listener is added directly to the item.")
        ListItem listItem25
        unorderedList14:Add(listItem25)
        listItem25:AddText("Added sphere primitives.")
        ListItem listItem26
        unorderedList14:Add(listItem26)
        listItem26:AddText("Fixed a usability issue with the Camera class. Its parameter lists were inconsistent, which is now corrected.")
        bodyDiv:AddParagraph("We would like to thank Sina Bahram, Pranav Lal, and DJ Prater for their help in identifying some of the problems in the above list.")
    end

    action Quorum_4(Section bodyDiv)
        text listStyle = "list-disc list-outside pl-8"
        AddHeading(bodyDiv, "Quorum 4.0 July 5th, 2016", 2)
        bodyDiv:AddParagraph("Quorum 4.0 is the next major update to the programming language. In it, we have provided a variety of new features and improvements for many systems. The highlights of this release include support for 3D gaming (audio + visual), mobile support (iOS only), and significant improvements across the board to the development environment (e.g., navigation, folding). Besides these larger changes, we have spent considerable time making improvements to a large number of systems in Quorum and have expanded on many. This includes the addition of linear algebra libraries, improvements to the existing LEGO libraries, and significant improvements to the design of the game engine. Finally, we have added many new tutorials on a variety of systems.")
        
        AddHeading(bodyDiv, "3D Gaming", 3)
        bodyDiv:AddParagraph("One of the major features in Quorum 4.0 is a new 3D gaming system. On the backend, Quorum uses OpenGL, one of several standard gaming engines for commercial games. On the user level, however, we have spent significant effort working with people writing games in Quorum to try and iterate on our design. Overall, the 2D system has been improved and simplified in a variety of ways, the overall libraries have been unified, and accessibility support is now baked in in ways we think are easier to understand.")
        bodyDiv:AddParagraph("Besides this, 3D support itself has been modeled similarly to 2D. In other words, with 2D, you could load an image or sound and move it around. With 3D, while traditional modeling applications in OpenGL or Direct3D require quite a bit of knowledge about computer graphics, our libraries try to simplify those aspects of the system that we can. The idea is, besides the added dimension, to make the 2D and 3D systems feel as similar as possible to the programmer to aid in learning. Here are some additional highlights for the new engine:")
        UnorderedList unorderedList27
        unorderedList27:SetClassAttribute(listStyle)
        bodyDiv:Add(unorderedList27)
        ListItem listItem28
        unorderedList27:Add(listItem28)
        listItem28:AddText("We added a linear algebra library. The linear algebra libraries include: Matrices Vectors Affine Transformations Frustrum Calculations Planes Quaternions Ray calculations Generally, students do not need to use the underlying mathematical libraries unless they need something specific in their game. However, the full stack is there if people need it.")
        UnorderedList unorderedList29
        unorderedList29:SetClassAttribute(listStyle)
        listItem28:Add(unorderedList29)
        ListItem listItem30
        unorderedList29:Add(listItem30)
        listItem30:AddText("Matrices")
        ListItem listItem31
        unorderedList29:Add(listItem31)
        listItem31:AddText("Vectors")
        ListItem listItem32
        unorderedList29:Add(listItem32)
        listItem32:AddText("Affine Transformations")
        ListItem listItem33
        unorderedList29:Add(listItem33)
        listItem33:AddText("Frustrum Calculations")
        ListItem listItem34
        unorderedList29:Add(listItem34)
        listItem34:AddText("Planes")
        ListItem listItem35
        unorderedList29:Add(listItem35)
        listItem35:AddText("Quaternions")
        ListItem listItem36
        unorderedList29:Add(listItem36)
        listItem36:AddText("Ray calculations")
        ListItem listItem37
        unorderedList27:Add(listItem37)
        listItem37:AddText("Games can now be compiled to mobile platforms. In Quorum 4, we are starting with iPhone support, but hope to add Android support in a patch.")
        ListItem listItem38
        unorderedList27:Add(listItem38)
        listItem38:AddText("Games now consist of a system of layers. Each layer can contain either 2D, or 3D, content, but may not contain both. Each layer is controlled separately and includes support for both visuals and sound. The application of this approach is that it makes it easier to create independent visuals or aural components, like a user interface on top of a 3D game. Many users will have no need of layers and their use is not required.")
        ListItem listItem39
        unorderedList27:Add(listItem39)
        listItem39:AddText("Changed the Item class considerably in order to work for both 2D and 3D. Many actions have been slightly altered or moved to either an Item2D class or Item3D class. We tried not to make changes that broke previous games, except in the case where usability testing revealed a system was difficult to use.")
        ListItem listItem40
        unorderedList27:Add(listItem40)
        listItem40:AddText("Collision system: In focus groups and interviews for Quorum 3.0, users consistently had difficulty with the collision system. For Quorum 4.0, we rewrote the system from scratch. It is now, we hope, significantly easier to use. In addition, we have rewritten the technical side from scratch, now using standard approaches from the scientific literature. More enhancements are planned for the future.")
        
        AddHeading(bodyDiv, "Visual Games", 3)
        bodyDiv:AddParagraph("The visual aspect of Quorum has now been significantly improved. We now support 3D games, built on our linear algebra library. We have also conducted significant user testing on creating games with our libraries and have spent considerable time re-tooling them in order to make them easier to use. This was conducted for both the 2D game system and the newer 3D one. To make things easier, we have also unified the libraries for 2D and 3D games, so that the way you interact with them is as similar as possible. Below are some highlights from the visual part of the system.")
        UnorderedList unorderedList41
        unorderedList41:SetClassAttribute(listStyle)
        bodyDiv:Add(unorderedList41)
        ListItem listItem42
        unorderedList41:Add(listItem42)
        listItem42:AddText("Cameras: Quorum has now integrated a camera system for both 2D and 3D games. This includes the standard perspective and orthographic modes and the interfaces are unified to make it simpler across dimensions or systems.")
        ListItem listItem43
        unorderedList41:Add(listItem43)
        listItem43:AddText("Models: We are supporting two different kinds of modeling formats in this first release, namely g3db, the format used by the well known libGDX library, and wavefront's .obj and .mtl format's. We hope to support more formats in the future.")
        ListItem listItem44
        unorderedList41:Add(listItem44)
        listItem44:AddText("Added in a lighting system. Currently, we support: Ambient lights: In graphics, these lights indicate the overall lighting of the scene. Directional lights: In graphics, these lights indicate the overall lighting coming from a particular direction. Point lights: Point lights are those that can be added to the engine and moved around like any other object. You can also attach them other game objects and they will adjust automatically (e.g., a sphere that emits light).")
        UnorderedList unorderedList45
        unorderedList45:SetClassAttribute(listStyle)
        listItem44:Add(unorderedList45)
        ListItem listItem46
        unorderedList45:Add(listItem46)
        listItem46:AddText("Ambient lights: In graphics, these lights indicate the overall lighting of the scene.")
        ListItem listItem47
        unorderedList45:Add(listItem47)
        listItem47:AddText("Directional lights: In graphics, these lights indicate the overall lighting coming from a particular direction.")
        ListItem listItem48
        unorderedList45:Add(listItem48)
        listItem48:AddText("Point lights: Point lights are those that can be added to the engine and moved around like any other object. You can also attach them other game objects and they will adjust automatically (e.g., a sphere that emits light).")
        ListItem listItem49
        unorderedList41:Add(listItem49)
        listItem49:AddText("Adjusted many internal classes to account for multiple operating systems (e.g., various mobile platforms).")
        ListItem listItem50
        unorderedList41:Add(listItem50)
        listItem50:AddText("Added support for 3D textures and materials.")
        ListItem listItem51
        unorderedList41:Add(listItem51)
        listItem51:AddText("Adjusted the input system to account for changes to all of the others.")
        ListItem listItem52
        unorderedList41:Add(listItem52)
        listItem52:AddText("Primitives: Like with 2D, we wanted to simplify making basic images and shapes. For 3D, we continued this by providing a variety of 3D shapes that can be loaded easily and by default.")
        ListItem listItem53
        unorderedList41:Add(listItem53)
        listItem53:AddText("After conducting some internal and informal pilot tests, we adjusted OpenGL's coordinate system to be left-handed instead of right-handed. We then unified this across all systems in Quorum. This has no impact on, but is consistent with, the 2D system.")
        
        AddHeading(bodyDiv, "Auditory Games", 3)
        bodyDiv:AddParagraph("In addition to broad gaming features, we have expanded on the auditory system in Quorum. Here are the features we now support.")
        UnorderedList unorderedList54
        unorderedList54:SetClassAttribute(listStyle)
        bodyDiv:Add(unorderedList54)
        ListItem listItem55
        unorderedList54:Add(listItem55)
        listItem55:AddText("Added in support for creating 3D scenes. This includes making an " + dq + "Item" + dq + " version of sounds that you can attach to the game engine and manipulate in real-time. The application is that it allows you to make a character and walk around a 3D environment.")
        ListItem listItem56
        unorderedList54:Add(listItem56)
        listItem56:AddText("Added in support to change the listener position in a scene.")
        ListItem listItem57
        unorderedList54:Add(listItem57)
        listItem57:AddText("Added in the ability to have doppler shift on sounds.")
        ListItem listItem58
        unorderedList54:Add(listItem58)
        listItem58:AddText("Fully tied the auditory system with the visual system so that the libraries match. This make it easier to create games where, once characters are setup, the sounds automatically set themselves up logically without much input from the programmer.")
        
        AddHeading(bodyDiv, "Development Environment Improvements", 3)
        bodyDiv:AddParagraph("This update adds a variety of development environment features. This includes brace matchers, highlighters, a rewrite of the navigator, efficiency improvements, and a variety of other features.")
        UnorderedList unorderedList59
        unorderedList59:SetClassAttribute(listStyle)
        bodyDiv:Add(unorderedList59)
        ListItem listItem60
        unorderedList59:Add(listItem60)
        listItem60:AddText("Added brace matching into the development environment. This feature existed in a previous version of Quorum, but was removed in 3.0 temporarily. It is now back and significantly improved.")
        ListItem listItem61
        unorderedList59:Add(listItem61)
        listItem61:AddText("The navigator system has been rewritten from scratch. The new version now includes: Significant improvements to user behavior like sorting. Improvements to keyboard accessibility. The addition of control structures into the navigator window. The reason this change was made is due to the study run by Baker, Milne, and Ladner. The design of this new system is not identical to StructJumper, but it hits on the key properties and allows you to easily obtain much of the same information accessibly. A fix to an issue that was causing the navigator to be unresponsive when the development environment boots for a short time. A few new visual icons for control structures.")
        UnorderedList unorderedList62
        unorderedList62:SetClassAttribute(listStyle)
        listItem61:Add(unorderedList62)
        ListItem listItem63
        unorderedList62:Add(listItem63)
        listItem63:AddText("Significant improvements to user behavior like sorting.")
        ListItem listItem64
        unorderedList62:Add(listItem64)
        listItem64:AddText("Improvements to keyboard accessibility.")
        ListItem listItem65
        unorderedList62:Add(listItem65)
        listItem65:AddText("The addition of control structures into the navigator window. The reason this change was made is due to the study run by Baker, Milne, and Ladner. The design of this new system is not identical to StructJumper, but it hits on the key properties and allows you to easily obtain much of the same information accessibly.")
        ListItem listItem66
        unorderedList62:Add(listItem66)
        listItem66:AddText("A fix to an issue that was causing the navigator to be unresponsive when the development environment boots for a short time.")
        ListItem listItem67
        unorderedList62:Add(listItem67)
        listItem67:AddText("A few new visual icons for control structures.")
        ListItem listItem68
        unorderedList59:Add(listItem68)
        listItem68:AddText("Added code folding into the system. By default, the folds are open.")
        ListItem listItem69
        unorderedList59:Add(listItem69)
        listItem69:AddText("Added semantic coloring into the environment. This includes coloring fields green, bolding action and method names, and other features common to programming languages.")
        ListItem listItem70
        unorderedList59:Add(listItem70)
        listItem70:AddText("Added occurrence marking. This includes highlighting components that are semantically related (e.g., variables in the same scope).")
        ListItem listItem71
        unorderedList59:Add(listItem71)
        listItem71:AddText("Included a number of improvements to code completion. This includes: Better responsiveness overall. Primitive types now correctly show code completion values. Types involving parent variables now correctly walk you through a call. For example, if you type parent:, it will provide you what words are legal next. Similarly, once a parent is chosen, the actions and fields from that parent will be shown.")
        UnorderedList unorderedList72
        unorderedList72:SetClassAttribute(listStyle)
        listItem71:Add(unorderedList72)
        ListItem listItem73
        unorderedList72:Add(listItem73)
        listItem73:AddText("Better responsiveness overall.")
        ListItem listItem74
        unorderedList72:Add(listItem74)
        listItem74:AddText("Primitive types now correctly show code completion values.")
        ListItem listItem75
        unorderedList72:Add(listItem75)
        listItem75:AddText("Types involving parent variables now correctly walk you through a call. For example, if you type parent:, it will provide you what words are legal next. Similarly, once a parent is chosen, the actions and fields from that parent will be shown.")
        ListItem listItem76
        unorderedList59:Add(listItem76)
        listItem76:AddText("Quorum 4.0 now includes editor hints. When a user makes a mistake, like having a compiler error or other problem, in some cases Quorum can detect what the problem was and automatically fix it on request. This does not work for all possible types of errors that can be made, but is useful for common situations. In all cases, editor hints have the keyboard shortcut of ALT + ENTER. Some examples of the hints provided by the system are: Automatically Find Use Statements: If you want to use a library, but do not remember the correct use statement, you no longer have to. For example, if you type Game game, and get a red line, Quorum will ask if you want to " + dq + "fix" + dq + " the error, which will put the correct " + dq + "use" + dq + " on the top of the file. Automatically Compute Return Types: If you have an action that is called, like MyAction(), but you don't remember its return type, Quorum will now automatically fill in the left hand side of that expression. So for example, it may convert " + dq + "MyAction()" + dq + " to " + dq + "text value = MyAction()" + dq + "")
        UnorderedList unorderedList77
        unorderedList77:SetClassAttribute(listStyle)
        listItem76:Add(unorderedList77)
        ListItem listItem78
        unorderedList77:Add(listItem78)
        listItem78:AddText("Automatically Find Use Statements: If you want to use a library, but do not remember the correct use statement, you no longer have to. For example, if you type Game game, and get a red line, Quorum will ask if you want to " + dq + "fix" + dq + " the error, which will put the correct " + dq + "use" + dq + " on the top of the file.")
        ListItem listItem79
        unorderedList77:Add(listItem79)
        listItem79:AddText("Automatically Compute Return Types: If you have an action that is called, like MyAction(), but you don't remember its return type, Quorum will now automatically fill in the left hand side of that expression. So for example, it may convert " + dq + "MyAction()" + dq + " to " + dq + "text value = MyAction()" + dq + "")
        ListItem listItem80
        unorderedList59:Add(listItem80)
        listItem80:AddText("Fixed a wide variety of bugs involving parsing. Some of these caused red lines to show up in inappropriate times.")
        ListItem listItem81
        unorderedList59:Add(listItem81)
        listItem81:AddText("Added accessibility support for most of the new development features. The two exceptions in this release are improved accessibility support for GIT/version systems and code folding. Both systems are possible to make accessible, we think, but the way they are integrated into NetBeans. We plan to focus group the known issues this summer to evaluate whether the fixes should prioritized over other potential features.")
        
        
        AddHeading(bodyDiv, "General Improvements and Bug Fixes", 3)
        bodyDiv:AddParagraph("This section includes a variety of improvements or bug fixes the team worked on for this release.")
        UnorderedList unorderedList82
        unorderedList82:SetClassAttribute(listStyle)
        bodyDiv:Add(unorderedList82)
        ListItem listItem83
        unorderedList82:Add(listItem83)
        listItem83:AddText("Added support for the LEGO Gyro sensor.")
        ListItem listItem84
        unorderedList82:Add(listItem84)
        listItem84:AddText("Significantly reduced the delay on booting up LEGO robots in Quorum")
        ListItem listItem85
        unorderedList82:Add(listItem85)
        listItem85:AddText("Made significant improvements to the documentation generator in Quorum. These include: Updated the look and feel to try and make it easier to read. Added a summary table for actions. Added a summary table for variables.")
        UnorderedList unorderedList86
        unorderedList86:SetClassAttribute(listStyle)
        listItem85:Add(unorderedList86)
        ListItem listItem87
        unorderedList86:Add(listItem87)
        listItem87:AddText("Updated the look and feel to try and make it easier to read.")
        ListItem listItem88
        unorderedList86:Add(listItem88)
        listItem88:AddText("Added a summary table for actions.")
        ListItem listItem89
        unorderedList86:Add(listItem89)
        listItem89:AddText("Added a summary table for variables.")
        ListItem listItem90
        unorderedList82:Add(listItem90)
        listItem90:AddText("Significantly filled out the backend of Quorum in regard to how it tracks source code. This should make it easier to add support for other development environments in the future, if we decide to do so.")
        ListItem listItem91
        unorderedList82:Add(listItem91)
        listItem91:AddText("Significantly re-tooled Quorum's web support. This is part of a long-term project on the team. Technically, it could be used today, but we are intentionally not creating tutorials or lessons for it, as we are actively adjusting the system in the lab. Eventually, Quorum's website will be rewritten in Quorum using this system.")
        ListItem listItem92
        unorderedList82:Add(listItem92)
        listItem92:AddText("Made significant improvements to the Quorum to JavaScript converter. It is still not 100% complete in regard to supporting all Quorum features, but it now supports substantially more. We will continue to work on this tool for future versions, until eventually it will be released as a standalone supported tool for Quorum on the web.")
        ListItem listItem93
        unorderedList82:Add(listItem93)
        listItem93:AddText("We rewrote the random number generator class to use the standard Mersenne Twister algorithm.")
        ListItem listItem94
        unorderedList82:Add(listItem94)
        listItem94:AddText("Included one minor bugfix to bitwise operations.")
        ListItem listItem95
        unorderedList82:Add(listItem95)
        listItem95:AddText("We made a variety of optimizations to Quorum, which ultimately causes the compiler to compile itself approximately 17 percent faster on average. As the Quorum project continues, we will optimize further, and test under a variety of other conditions, over time. Users needing optimizations for particular applications can make requests on the mailing list.")
        ListItem listItem96
        unorderedList82:Add(listItem96)
        listItem96:AddText("We removed the blueprint package for data structures. This was a small optimization in our system and the package was not really used in a meaningful way anyway. This simplifies the inheritance hierarchy of our data structures.")
        ListItem listItem97
        unorderedList82:Add(listItem97)
        listItem97:AddText("We moved the Iterator class to Libraries.Containers.Iterator, out of the now removed blueprint package.")
        ListItem listItem98
        unorderedList82:Add(listItem98)
        listItem98:AddText("We have included a variety of minor compiler bug fixes the team has completed over the last year. As the compiler has become more mature, these have become increasingly esoteric (e.g., better accounting for user error).")
        ListItem listItem99
        unorderedList82:Add(listItem99)
        listItem99:AddText("Improved the clarity of some compiler messages based on user feedback. We think there is more work to do here, but we are making these changes slowly, carefully, and with user feedback.")
        ListItem listItem100
        unorderedList82:Add(listItem100)
        listItem100:AddText("We fixed a number of issues related to how various screen readers work with Sodbeans. This especially includes details of our startup scripts.")
        ListItem listItem101
        unorderedList82:Add(listItem101)
        listItem101:AddText("We changed the startup script to now say Sodbeans 6.0 instead of NetBeans. So far as we could tell, some users seemed to prefer it says Sodbeans so they can identify it when it starts up. This used to be the case, but changed in Sodbeans 5.0. It has now been changed back.")
        ListItem listItem102
        unorderedList82:Add(listItem102)
        listItem102:AddText("A list of bug fixes tracked by our bug tracker (Jira) can be found on that site.")
        
        
        AddHeading(bodyDiv, "Documentation Improvements", 3)
        bodyDiv:AddParagraph("We have made a number of changes to the online documentation in Quorum, including adding a variety of lessons and tutorials. These include:")
        UnorderedList unorderedList103
        unorderedList103:SetClassAttribute(listStyle)
        bodyDiv:Add(unorderedList103)
        ListItem listItem104
        unorderedList103:Add(listItem104)
        listItem104:AddText("The events tutorial has been split into four separate ones. These include input polling, mouse events, collision, and touch events.")
        ListItem listItem105
        unorderedList103:Add(listItem105)
        listItem105:AddText("Added a touch events tutorial for mobile platforms.")
        ListItem listItem106
        unorderedList103:Add(listItem106)
        listItem106:AddText("Updated the collision tutorial for Quorum 4.0.")
        ListItem listItem107
        unorderedList103:Add(listItem107)
        listItem107:AddText("The drawing and animation tutorials have been renamed to account for changes to the system.")
        ListItem listItem108
        unorderedList103:Add(listItem108)
        listItem108:AddText("Added a tutorial on loading 3D models and drawing them in 3D.")
        ListItem listItem109
        unorderedList103:Add(listItem109)
        listItem109:AddText("Added a tutorial on basic animations in 3D (e.g., rotations, scaling, moving)")
        ListItem listItem110
        unorderedList103:Add(listItem110)
        listItem110:AddText("Added a tutorial system on how to manipulate the camera.")
        ListItem listItem111
        unorderedList103:Add(listItem111)
        listItem111:AddText("Added a tutorial on lighting.")
        ListItem listItem112
        unorderedList103:Add(listItem112)
        listItem112:AddText("Modified the tutorial on creating 3D sound scenes, now including the use of doppler and the new Audio3D class. This new class is used to attach Audio objects to 3D moving items.")
        ListItem listItem113
        unorderedList103:Add(listItem113)
        listItem113:AddText("Added a tutorial on using 2D or 3D layers.")
        ListItem listItem114
        unorderedList103:Add(listItem114)
        listItem114:AddText("Adjusted the LEGO tutorials to include the gyro sensor.")
        ListItem listItem115
        unorderedList103:Add(listItem115)
        listItem115:AddText("Added a tutorial on team programming in Quorum.")
    end

    action Quorum_3_Patches(Section bodyDiv)
        text listStyle = "list-disc list-outside pl-8"
        AddHeading(bodyDiv, "Quorum 3.0 Update 48 July 22nd, 2015", 2)
        bodyDiv:AddParagraph("This update is deployed to the update centers.")
        UnorderedList unorderedList116
        unorderedList116:SetClassAttribute(listStyle)
        bodyDiv:Add(unorderedList116)
        ListItem listItem117
        unorderedList116:Add(listItem117)
        listItem117:AddText("Added a new action for custom colors in the Color class.")
        ListItem listItem118
        unorderedList116:Add(listItem118)
        listItem118:AddText("Fixed a bug in the speech engine causing some say statements to not output sound correctly.")
        ListItem listItem119
        unorderedList116:Add(listItem119)
        listItem119:AddText("Fixed a bug with the Error Window hotkey causing it to not work if the C++ modules are loaded.")
        ListItem listItem120
        unorderedList116:Add(listItem120)
        listItem120:AddText("Changed the Error window hotkey to CTRL + ALT + SHIFT + 9")
        ListItem listItem121
        unorderedList116:Add(listItem121)
        listItem121:AddText("Changed the text-to-speech toggle to CTRL + ALT + SHIFT + T")
        
        
        AddHeading(bodyDiv, "Quorum 3.0 Update 44 July 21st, 2015", 2)
        bodyDiv:AddParagraph("This update is deployed to the update centers.")
        UnorderedList unorderedList122
        unorderedList122:SetClassAttribute(listStyle)
        bodyDiv:Add(unorderedList122)
        ListItem listItem123
        unorderedList122:Add(listItem123)
        listItem123:AddText("Changed the loading of the game engine plugins to include a static initializer.")
        ListItem listItem124
        unorderedList122:Add(listItem124)
        listItem124:AddText("Fixed a bug causing the Enable Looping action in Audio to not work correctly.")
        ListItem listItem125
        unorderedList122:Add(listItem125)
        listItem125:AddText("Fixed a few additional minor bugs.")
        
        
        AddHeading(bodyDiv, "Quorum 3.0 Update 43 July 16th, 2015", 2)
        bodyDiv:AddParagraph("This update is deployed to the update centers only.")
        UnorderedList unorderedList126
        unorderedList126:SetClassAttribute(listStyle)
        bodyDiv:Add(unorderedList126)
        ListItem listItem127
        unorderedList126:Add(listItem127)
        listItem127:AddText("Fixed a bug causing self-voicing to fail on bootup if you were using JAWS or NVDA and you installed the sleep scripts.")
        ListItem listItem128
        unorderedList126:Add(listItem128)
        listItem128:AddText("Fixed a bug in the game engine causing children to not properly respect the scale, rotation, and orientation of their parents.")
        ListItem listItem129
        unorderedList126:Add(listItem129)
        listItem129:AddText("Added a hotkey and menu item for turning text-to-speech on and off.")
        ListItem listItem130
        unorderedList126:Add(listItem130)
        listItem130:AddText("Changed the name of the menu called Magnification to Accessibility.")
        ListItem listItem131
        unorderedList126:Add(listItem131)
        listItem131:AddText("Fixed a bug in the project properties window forcing the user to reboot NetBeans in order for a name change to take effect.")
        ListItem listItem132
        unorderedList126:Add(listItem132)
        listItem132:AddText("A few additional minor bug fixes.")
        
        
        AddHeading(bodyDiv, "Quorum 3.0 Update 42 July 9th, 2015", 2)
        bodyDiv:AddParagraph("This update is deployed to NetBeans only, but not as a separate zip file on the release servers.")
        UnorderedList unorderedList133
        unorderedList133:SetClassAttribute(listStyle)
        bodyDiv:Add(unorderedList133)
        ListItem listItem134
        unorderedList133:Add(listItem134)
        listItem134:AddText("Actually fixed bug with Lego Robot files not properly being sent over to the robot on Windows.")
        ListItem listItem135
        unorderedList133:Add(listItem135)
        listItem135:AddText("Added a test case and fixed a compiler bug.")
        
        
        AddHeading(bodyDiv, "Quorum 3.0 Update 41 July 8th, 2015", 2)
        bodyDiv:AddParagraph("This update is deployed to NetBeans only, but not as a separate zip file on the release servers.")
        UnorderedList unorderedList136
        unorderedList136:SetClassAttribute(listStyle)
        bodyDiv:Add(unorderedList136)
        ListItem listItem137
        unorderedList136:Add(listItem137)
        listItem137:AddText("Fixed a bug with scaling in the game engine.")
        ListItem listItem138
        unorderedList136:Add(listItem138)
        listItem138:AddText("Fixed a bug with code completion showing the wrong documentation.")
        ListItem listItem139
        unorderedList136:Add(listItem139)
        listItem139:AddText("Fixed a bug with Lego Robot files not properly being sent over to the robot on Windows.")
        ListItem listItem140
        unorderedList136:Add(listItem140)
        listItem140:AddText("Finished the documentation for the game engine. Items should now show up correctly in code completion.")
        ListItem listItem141
        unorderedList136:Add(listItem141)
        listItem141:AddText("Finished the documentation for the lego robot systems. These should also now show up correctly in code completion.")
        ListItem listItem142
        unorderedList136:Add(listItem142)
        listItem142:AddText("Fixed an issue in the documentation generator causing robots to not show up properly.")
    end

    action Quorum_3(Section bodyDiv)
        text listStyle = "list-disc list-outside pl-8"
        AddHeading(bodyDiv, "Quorum 3.0 June 30th, 2015", 2)
        bodyDiv:AddParagraph("Quorum 3.0 represents the most significant change to the Quorum programming language since its inception and is a near-complete rewrite. When the Quorum project first began, it was written in Java, was interpreted, and we were really just trying to make programming a little easier. As of 3.0, the project has gone further than we ever imagined: Quorum is now faster, robust, and written in itself. As is a long tradition in programming language design, once a language is sufficiently powerful to write the next version in itself, so-called self-hosting, it is a sign that the language is becoming increasingly mature. On Quorum, we have finally reached this milestone and will now be shifting our attention to improved library and development environment support. Library requests to the team, or contributions, are welcome.")
        bodyDiv:AddParagraph("We had a number of technical goals in mind for the Quorum 3.0 release. We highlight some of the most significant alterations below:")
        AddHeading(bodyDiv, "Standard library changes", 3)
        UnorderedList unorderedList143
        unorderedList143:SetClassAttribute(listStyle)
        bodyDiv:Add(unorderedList143)
        ListItem listItem144
        unorderedList143:Add(listItem144)
        listItem144:AddText("Game Engine 1.0: Quorum now supports a computer gaming 
            engine (in OpenGL). In the first release we are supporting 2D graphics and 
            basic 3D sound (through OpenAL). The design of the system was inspired in 
            part by the excellent LibGDX project. Some of the major features include:")
        UnorderedList unorderedList145
        unorderedList145:SetClassAttribute(listStyle)
        listItem144:Add(unorderedList145)
        ListItem listItem146
        unorderedList145:Add(listItem146)
        listItem146:AddText("OpenGL 2D graphics. The OpenGL aspect is wrapped using LWJGL for efficiency and is used similarly to other toolkits on the market.")
        ListItem listItem147
        unorderedList145:Add(listItem147)
        listItem147:AddText("Event handling (e.g., keyboard, mouse)")
        ListItem listItem148
        unorderedList145:Add(listItem148)
        listItem148:AddText("Font rendering through the FreeType font libraries.")
        ListItem listItem149
        unorderedList145:Add(listItem149)
        listItem149:AddText("Open AL support for audio. In this first release, we support .ogg and .wav files. This library replaces (and upgrades) the existing sound libraries.")
        ListItem listItem150
        unorderedList145:Add(listItem150)
        listItem150:AddText("A game creation architecture. This includes a variety of support classes to try and make it easier to create computer games.")
        ListItem listItem151
        unorderedList145:Add(listItem151)
        listItem151:AddText("Automatic collision detection support.")
        ListItem listItem152
        unorderedList145:Add(listItem152)
        listItem152:AddText("Basic support for texture atlases (ImageSheet objects in Quorum speak).")
        ListItem listItem153
        unorderedList145:Add(listItem153)
        listItem153:AddText("A significant amount of documentation and curricular lessons designed to help people learn how to program games in Quorum. Some of this material will come out on the June 30th release, while more will trickle out over time as we write it.")
        ListItem listItem154
        unorderedList143:Add(listItem154)
        listItem154:AddText("Lego NXT robotics toolkits are now supported. Specifically, we now support connecting to lego robot kits, which can be used for a wide variety of purposes. Most major functionality in the lego kits are supported.")
        ListItem listItem155
        unorderedList143:Add(listItem155)
        listItem155:AddText("Removed support for Botball robots. We feel as if this library was generally not used much by the community and have decided to cease support. Continuing support for this would have required us to re-tool the system to support the new Botball kits, but we decided to focus time on Lego instead, as these kits are cheaper and more popular.")
        ListItem listItem156
        unorderedList143:Add(listItem156)
        listItem156:AddText("Included a wide variety of small changes or improvements to the standard library. Many of these came about due to the bootstrapping process, or teaching Quorum to compile itself.")
        
        
        AddHeading(bodyDiv, "Integrated Development Support changes", 3)
        UnorderedList unorderedList157
        unorderedList157:SetClassAttribute(listStyle)
        bodyDiv:Add(unorderedList157)
        ListItem listItem158
        unorderedList157:Add(listItem158)
        listItem158:AddText("Sodbeans has largely been rewritten from scratch. The reason we did this is because we largely had to, given the new compiler.")
        ListItem listItem159
        unorderedList157:Add(listItem159)
        listItem159:AddText("The module system used by Quorum has been significantly condensed. This will make the update process easier in the future.")
        ListItem listItem160
        unorderedList157:Add(listItem160)
        listItem160:AddText("Accessibility Support is now in its own module. A new Accessibility preferences pane provides a variety of new accessibility options.")
        ListItem listItem161
        unorderedList157:Add(listItem161)
        listItem161:AddText("Speech now works in IDE on Mac OS X.10, even for components that do not read properly in JDK8 or NetBeans. This is only true if self-voicing is active.")
        ListItem listItem162
        unorderedList157:Add(listItem162)
        listItem162:AddText("Several bug fixes to the Quorum debugger have been implemented compared to the 4.6 release. This includes fixes for efficiency as well as user interface improvements.")
        ListItem listItem163
        unorderedList157:Add(listItem163)
        listItem163:AddText("The IDE experience has been significantly improved, with much more responsiveness from Quorum generally.")
        ListItem listItem164
        unorderedList157:Add(listItem164)
        listItem164:AddText("Integrated an Image Sheet Generator for the new game engine. This generator allows the user to automatically generate ImageSheets in IDE to simplify the process compared to kits like LibGDX, where the process can be somewhat confusing.")
        ListItem listItem165
        unorderedList157:Add(listItem165)
        listItem165:AddText("Fixed a bug related to the IDE using too many CPU cycles after a number of runs of Quorum.")
        ListItem listItem166
        unorderedList157:Add(listItem166)
        listItem166:AddText("Changed all API calls to use the new Quorum 3 implementation, with relatively little supporting Java code in the IDE. This should make it easier to port Quorum to other IDEs, for those that prefer different systems.")
        ListItem listItem167
        unorderedList157:Add(listItem167)
        listItem167:AddText("Improved the project user interface in the properties window of Quorum projects.")
        ListItem listItem168
        unorderedList157:Add(listItem168)
        listItem168:AddText("Added support to wrap in custom plugins or jar files into Quorum projects. Users should only do this if they know what they are doing, but this new system provides a much more convenient method for connecting between Java, C/C++, and Quorum, including full access to the JDK, C libraries, etc.")
        
        
        AddHeading(bodyDiv, "Major language changes", 3)
        UnorderedList unorderedList169
        unorderedList169:SetClassAttribute(listStyle)
        bodyDiv:Add(unorderedList169)
        ListItem listItem170
        unorderedList169:Add(listItem170)
        listItem170:AddText("Quorum now uses an ANTLR 4 backend. Many compiler phases in the language are now considerably faster, thanks largely to Terence Parr's clever work.")
        ListItem listItem171
        unorderedList169:Add(listItem171)
        listItem171:AddText("Quorum's type system has been significantly revised, removing some inconsistencies and significantly simplifying tiling/opcode generation. This approach is also somewhat more efficient than in previous releases and works for any future cross-compiling we have planned (e.g., Quorum to Javascript converters).")
        ListItem listItem172
        unorderedList169:Add(listItem172)
        listItem172:AddText("Quorum's exception (called Errors in Quorum) system has been redesigned from the ground up. In the new approach, users will always see Quorum errors, never the Java/other equivalent, providing a unified approach.")
        ListItem listItem173
        unorderedList169:Add(listItem173)
        listItem173:AddText("Quorum can now generate Java bytecode directly using the excellent ASM bytecode library. Others can use this library for bytecode generation as well. The entire JDK spec is not supported in our hooks to ASM, as we started with features specific to the Quorum compiler, but quite a bit is supported.")
        ListItem listItem174
        unorderedList169:Add(listItem174)
        listItem174:AddText("Quorum's backend now supports a number of potential formats, not just the Java Virtual Machine. In post 3.0, we plan to create a first additional backend with a Quorum to Javascript converter. A prototype using this technology can be found at quorumlanguage.com in our hour of code tutorial. Updates and more libraries will be supported over time.")
        ListItem listItem175
        unorderedList169:Add(listItem175)
        listItem175:AddText("Fixed a bug in Quorum 2.0 that didn't allow us to support action chaining (e.g., a:b():c()). Code completion is not yet finished for chained values.")
        ListItem listItem176
        unorderedList169:Add(listItem176)
        listItem176:AddText("A significant optimization pass has occurred for programs generated in Quorum, making programs have faster execution and bootup times under some circumstances.")
        ListItem listItem177
        unorderedList169:Add(listItem177)
        listItem177:AddText("Quorum is now fully written, and compiles in, itself. In other words, Quorum 3.0 was compiled in Quorum 2.2 (and then 3.0). The final version of Quorum 3.0 is compiled in Quorum 3.0.")
        ListItem listItem178
        unorderedList169:Add(listItem178)
        listItem178:AddText("Quorum's compiler error messages have been redesigned using evidence gathered by Lee and Ko as a loose guide. More work is needed here, as the language and messages are different than Lee/Ko's, but it's a potential improvement until more or better evidence is found.")
        ListItem listItem179
        unorderedList169:Add(listItem179)
        listItem179:AddText("Fixed a bug in the way Quorum handles inheritance, which ultimately changes how plugins are written. While users generally do not have to use this system, this causes any hidden variables written by the compiler to have slightly different names (e.g., $Interface to _). Also, because of this change, variables, actions, and classes can no longer have an underscore as its last character.")
        
        
        AddHeading(bodyDiv, "Type system/variable changes", 3)
        UnorderedList unorderedList180
        unorderedList180:SetClassAttribute(listStyle)
        bodyDiv:Add(unorderedList180)
        ListItem listItem181
        unorderedList180:Add(listItem181)
        listItem181:AddText("Removed a number of cases where Quorum was being slightly " + dq + "too flexible" + dq + " in its conversions between various types, especially in regard to auto-boxing.")
        ListItem listItem182
        unorderedList180:Add(listItem182)
        listItem182:AddText("Fixed several issues where Quorum was making strange decisions in what it was allowing users to do (e.g., action Test returns text would allow return false).")
        ListItem listItem183
        unorderedList180:Add(listItem183)
        listItem183:AddText("Fixed issues with not being able to pass undefined values to text fields under some circumstances.")
        ListItem listItem184
        unorderedList180:Add(listItem184)
        listItem184:AddText("Fixed a couple bugs with how fields and variables were implemented in bytecode.")
        ListItem listItem185
        unorderedList180:Add(listItem185)
        listItem185:AddText("Carefully adjusted the amount of type inference allowed on the inside of actions. The value is somewhat conservative and needs to be evaluated in empirical studies. Currently, we know of no randomized controlled trials on how much inference to allow. Users that do have evidence from randomized controlled trials should get in touch with our team on the mailing list.")
        ListItem listItem186
        unorderedList180:Add(listItem186)
        listItem186:AddText("Made auto-boxing as transparent as possible, with the hopes that we can eventually disallow use of capital letter types (e.g., Text vs. text).")
        ListItem listItem187
        unorderedList180:Add(listItem187)
        listItem187:AddText("In almost all cases now, actions can be called, and chained, on primitive values without any auto-boxing. In other words, calling actions on primitives is quite efficient in Quorum, as values have low memory footprints, but yet still " + dq + "look like" + dq + " calls to objects in other languages, even though they technically are not. Users should not notice a difference with previous releases, with the exception that chaining is allowed.")
        ListItem listItem188
        unorderedList180:Add(listItem188)
        listItem188:AddText("Significantly redesigned the testing for the type system, with future improvements in mind. Especially, we have been designing programs to auto-generate test cases that ensure each part of the type system is properly exercised, where, importantly, we can regenerate the entire suite if a change to the type system is made (hopefully with corresponding evidence).")
        
        
        AddHeading(bodyDiv, "Exceptions (Error) system changes", 3)
        UnorderedList unorderedList189
        unorderedList189:SetClassAttribute(listStyle)
        bodyDiv:Add(unorderedList189)
        ListItem listItem190
        unorderedList189:Add(listItem190)
        listItem190:AddText("This system has been fully redesigned. This is a backend change and does change how user's use errors. It does, however, make the system work considerably better.")
        ListItem listItem191
        unorderedList189:Add(listItem191)
        listItem191:AddText("In the new system, Quorum Error classes, must inherit from Error, and only, Error. The reason is due to a quirk in Quorum's inheritance system. This is a potential issue that needs further study, but allows the runtime system to have considerable flexibility in how it handles errors.")
        ListItem listItem192
        unorderedList189:Add(listItem192)
        listItem192:AddText("Errors generated by the underlying backend are now caught and automatically converted to Quorum style. This allows us flexibility in the system, so that we can study aspects of it in future empirical studies. Previously, we could not modify these internal aspects, giving us too little wiggle room when designing empirical studies to study this system.")
        ListItem listItem193
        unorderedList189:Add(listItem193)
        listItem193:AddText("Detect blocks can still contain multiple types (e.g., detect e is CastError), but the compiler now guarantees these are unique. the Quorum 2.0 branch was intended to work similarly, and was close, but this fixes a few edge cases.")
        ListItem listItem194
        unorderedList189:Add(listItem194)
        listItem194:AddText("Detect blocks may now be rewritten to a new location by the bytecode generator. This will not impact the semantics of a program, but we have it in the notes in case it is confusing to someone that looks at the generated bytecode.")
        ListItem listItem195
        unorderedList189:Add(listItem195)
        listItem195:AddText("Leaving off a type for a detect block makes it automatically of type Error, which is now a catch-all for all possible kinds of system or Quorum errors. This error is guaranteed to be written last in the bytecode generation. In other words, any block of type Error is written last and catches any and all errors, even if these errors were generated by the underlying virtual machine.")
        ListItem listItem196
        unorderedList189:Add(listItem196)
        listItem196:AddText("Users that find a Java/other error that gives an error message that is difficult to understand should email the mailing list. These issues are easily adjusted now without changes to the compiler itself.")
        ListItem listItem197
        unorderedList189:Add(listItem197)
        listItem197:AddText("Fixed a bug that caused Quorum to run forever and need to be killed if an exception occurred in a generated program.")
        ListItem listItem198
        unorderedList189:Add(listItem198)
        listItem198:AddText("Adjusted the API for the Error classes making them more consistent, generally, and also making them conform to more modern naming schemes used in Quorum. For example, previous studies showed the word " + dq + "output" + dq + " was more intuitive than " + dq + "print," + dq + " so this release changes PrintStackTrace to OutputStackTrace. Obviously, the difference is pretty minor, but increases consistency overall.")
        ListItem listItem199
        unorderedList189:Add(listItem199)
        listItem199:AddText("Considerably improved the stack trace information presented from errors.")
        ListItem listItem200
        unorderedList189:Add(listItem200)
        listItem200:AddText("Errors do not now have a corresponding interface type generated, unlike all other Quorum classes in bytecode. The reason is because of the way Java handles exceptions in regard to its inheritance hierarchy (e.g., Throwable and below).")
        
        
        AddHeading(bodyDiv, "Control Structure changes", 3)
        UnorderedList unorderedList201
        unorderedList201:SetClassAttribute(listStyle)
        bodyDiv:Add(unorderedList201)
        ListItem listItem202
        unorderedList201:Add(listItem202)
        listItem202:AddText("If statements now properly short circuit. This was a bug in Quorum 2.")
        ListItem listItem203
        unorderedList201:Add(listItem203)
        listItem203:AddText("Included a number of optimizations at various points in the control structure pipeline.")
        ListItem listItem204
        unorderedList201:Add(listItem204)
        listItem204:AddText("Simplified the bytecode generation for various kinds of expressions.")
        ListItem listItem205
        unorderedList201:Add(listItem205)
        listItem205:AddText("Fixed a bug in if statements that, under very rare circumstances, caused a bytecode verification error.")
        
        
        AddHeading(bodyDiv, "Compiler Support", 3)
        UnorderedList unorderedList206
        unorderedList206:SetClassAttribute(listStyle)
        bodyDiv:Add(unorderedList206)
        ListItem listItem207
        unorderedList206:Add(listItem207)
        listItem207:AddText("Added preliminary support for the ASM bytecode library to Quorum. This initial version is somewhat bare bones in this first release, but still is sufficient to implement much of a modern compiler built on JDK 7 or 8. Teams interested in using Quorum to generate bytecode that need additional support are encouraged to get in touch, as generating bytecode in Quorum is relatively easy (so far as bytecode writing goes).")
        ListItem listItem208
        unorderedList206:Add(listItem208)
        listItem208:AddText("Added parsing/semantic analysis libraries for Quorum. Others can inherit from these and garner full ANTLR 4 support for reading Quorum source")
        ListItem listItem209
        unorderedList206:Add(listItem209)
        listItem209:AddText("All symbol tables, analyzers, and generators are public and easily modified for those wanting to write support for Quorum into IDEs or tools, either online or offline.")
        ListItem listItem210
        unorderedList206:Add(listItem210)
        listItem210:AddText("Bytecode generation/semantic analysis is now done in two-passes, which simplifies finding/fixing bugs and the generation process compared to the Quorum 2 branch.")
        ListItem listItem211
        unorderedList206:Add(listItem211)
        listItem211:AddText("Added a new test suite architecture for compiling and running a large set of cross-compiled Quorum programs. Currently, the system supports programs converted from Quorum to Java Bytecode and JavaScript.")
        
        
        AddHeading(bodyDiv, "Other changes", 3)
        UnorderedList unorderedList212
        unorderedList212:SetClassAttribute(listStyle)
        bodyDiv:Add(unorderedList212)
        ListItem listItem213
        unorderedList212:Add(listItem213)
        listItem213:AddText("Fixed a host of minor bugs throughout the language.")
        ListItem listItem214
        unorderedList212:Add(listItem214)
        listItem214:AddText("Considerably improved Quorum's automated test suite generally, giving us increasing confidence that we are properly exercising each system. There's always more work to do on testing, but it's a substantial improvement.")
        ListItem listItem215
        unorderedList212:Add(listItem215)
        listItem215:AddText("Fixed a bug causing compiled Quorum programs to load very slowly.")
        ListItem listItem216
        unorderedList212:Add(listItem216)
        listItem216:AddText("Input commands now work from the command line, but do not pop-up a window. To make input scalable we have changed the in-IDE behavior as well, now using the standard input box line in NetBeans. This behavior is, we feel, somewhat confusing, but is a tradeoff that fixes a significant bug in Quorum 2.0.")
        ListItem listItem217
        unorderedList212:Add(listItem217)
        listItem217:AddText("Added a separate command called input, with no parameters, which allows the user to request input without outputting information first.")
        ListItem listItem218
        unorderedList212:Add(listItem218)
        listItem218:AddText("Quorum now requires default values for variables on the inside of actions or in fields. The reason is because Quorum was allowing seemingly rather arbitrary defaults to be selected, which appeared confusing to some users. For example, " + dq + "boolean a" + dq + " could default to either true or false. While we could argue one way or the other, forcing a right-hand-side makes the decision explicit.")
        ListItem listItem219
        unorderedList212:Add(listItem219)
        listItem219:AddText("Because of the flexibility of the ALL-STAR algorithm in ANTLR 4, it was relatively easy to fix an issue with negative numbers not correctly parsing under a few (relatively unimportant) circumstances. This was never a major problem, but does make expressions just slightly more flexible and was an annoying bug the team wanted fixed.")
        ListItem listItem220
        unorderedList212:Add(listItem220)
        listItem220:AddText("Fixed a number of issues with the way parent actions or fields were called.")
        ListItem listItem221
        unorderedList212:Add(listItem221)
        listItem221:AddText("In classes that explicitly declare system actions, the plugin generated is now accessible from inside the plugin architecture. To access it, users can access the variable named plugin_.")
        
    end

    action Quorum_2(Section bodyDiv)
        text listStyle = "list-disc list-outside pl-8"
        AddHeading(bodyDiv, "Quorum 2.1 December 16th, 2013", 2)
        UnorderedList unorderedList222
        unorderedList222:SetClassAttribute(listStyle)
        bodyDiv:Add(unorderedList222)
        ListItem listItem223
        unorderedList222:Add(listItem223)
        listItem223:AddText("Added a peer review system for Quorum's standard library.")
        ListItem listItem224
        unorderedList222:Add(listItem224)
        listItem224:AddText("Added a submission system for the standard library.")
        ListItem listItem225
        unorderedList222:Add(listItem225)
        listItem225:AddText("Added a badging system for recognizing users that contribute to Quorum.")
        ListItem listItem226
        unorderedList222:Add(listItem226)
        listItem226:AddText("Added an information page on the submission system and process.")
        ListItem listItem227
        unorderedList222:Add(listItem227)
        listItem227:AddText("Fixed a broken connection causing the accessibility libraries to not properly show up in the library list.")
        bodyDiv:AddParagraph("Standard Library and compiler Fixes/Changes")
        UnorderedList unorderedList228
        unorderedList228:SetClassAttribute(listStyle)
        bodyDiv:Add(unorderedList228)
        ListItem listItem229
        unorderedList228:Add(listItem229)
        listItem229:AddText("Fixed a bug causing certain primitive types to not hash correctly.")
        ListItem listItem230
        unorderedList228:Add(listItem230)
        listItem230:AddText("Fixed several minor bugs in the standard library.")
        ListItem listItem231
        unorderedList228:Add(listItem231)
        listItem231:AddText("Added new data libraries for reading XML files and CSV files.")
        ListItem listItem232
        unorderedList228:Add(listItem232)
        listItem232:AddText("Added a number of new additional test cases for various components.")
        ListItem listItem233
        unorderedList228:Add(listItem233)
        listItem233:AddText("Fixed a rare verifier error in the compiler.")
        ListItem listItem234
        unorderedList228:Add(listItem234)
        listItem234:AddText("Fixed several other small compiler issues.")
        
        
        AddHeading(bodyDiv, "Quorum 2.0.1 August 13th, 2013", 2)
        bodyDiv:AddParagraph("This is a bug fix release for the Quorum 2.0 branch.")
        UnorderedList unorderedList235
        unorderedList235:SetClassAttribute(listStyle)
        bodyDiv:Add(unorderedList235)
        ListItem listItem236
        unorderedList235:Add(listItem236)
        listItem236:AddText("Finished and integrated the Mac OS X version of the accessibility libraries. While the accessibility model on Mac is very different than on PC, the Quorum libraries should work as similarly as we could make them on each platform.")
        ListItem listItem237
        unorderedList235:Add(listItem237)
        listItem237:AddText("Fixed a bug causing the output buffer to not be cleared correctly on shutdown of a program.")
        ListItem listItem238
        unorderedList235:Add(listItem238)
        listItem238:AddText("Fixed a number of bugs in the accessibility libraries.")
        ListItem listItem239
        unorderedList235:Add(listItem239)
        listItem239:AddText("This is a Sodbeans release only. We are in the process of fixing one more important bug on the 2.0 branch before we put out a new Quorum installer. As such, those wanting this particular version of Quorum will need to get the updates in Sodbeans.")
        
        
        AddHeading(bodyDiv, "Quorum 2.0 June 6th, 2013", 2)
        bodyDiv:AddParagraph("Quorum 2.0 includes a host of improvements to the type system, adds the ability to call actions on primitives, includes minor syntactic improvements, and enhances the code completion helper libraries.")
        UnorderedList unorderedList240
        unorderedList240:SetClassAttribute(listStyle)
        bodyDiv:Add(unorderedList240)
        ListItem listItem241
        unorderedList240:Add(listItem241)
        listItem241:AddText("Type System Changes: A number of changes have been made to 
        the type system, finishing off a set of long planned alterations. We hope now 
        that Quorum conforms to the best available empirical evidence. ")
        
        Paragraph altPar2
        altPar2:AddText("A number of changes have been made to the type system, finishing off a set of long planned alterations. We hope now that Quorum conforms to the best available empirical evidence.")
        
        listItem241:Add(altPar2)
        
        
        
        UnorderedList unorderedList242
        unorderedList242:SetClassAttribute(listStyle)
        listItem241:Add(unorderedList242)
        ListItem listItem243
        unorderedList242:Add(listItem243)
        listItem243:AddText("Actions that return a primitive text value can now return undefined.")
        ListItem listItem244
        unorderedList242:Add(listItem244)
        listItem244:AddText("Text primitives can now be assigned as undefined.")
        ListItem listItem245
        unorderedList242:Add(listItem245)
        listItem245:AddText("Added the ability to call actions on primitive values. For example, we can now add a colon after an integer and call any action provided by the Object version of the primitive. Generally, this makes it far less necessary to instantiate an object for a primitive type. The solution for this is relatively efficient, as behind the scenes, Quorum calls a static action, with only very slightly more overhead than calling the action on the object.")
        ListItem listItem246
        unorderedList242:Add(listItem246)
        listItem246:AddText("Added all of the new type system features into the code completion APIs, meaning that integrated development environments using Quorum, like Sodbeans, should get them for automatically and without alteration.")
        ListItem listItem247
        unorderedList240:Add(listItem247)
        listItem247:AddText("Language Additions/Changes:")
        
        UnorderedList unorderedList248
        unorderedList248:SetClassAttribute(listStyle)
        listItem247:Add(unorderedList248)
        ListItem listItem249
        unorderedList248:Add(listItem249)
        listItem249:AddText("The " + dq + "print" + dq + " keyword has been changed to " + dq + "output." + dq + " This change conforms to data from our surveys with novices, in addition to conforming to common sense. For example, getting input from Quorum required using the word input, but getting output previously required using the word print. This made little sense, as print could have meant printing to a printer, not necessarily printing to a console. This way, input implies input and output implies output, making the language more consistent. All standard library materials, book materials, and curricular materials have been altered for the change.")
        ListItem listItem250
        unorderedList248:Add(listItem250)
        listItem250:AddText("Changed the phrase " + dq + "of type" + dq + " in the Error architecture to " + dq + "is." + dq + "")
        ListItem listItem251
        unorderedList248:Add(listItem251)
        listItem251:AddText("Changed the phrase " + dq + "is a" + dq + " in the inheritance system to " + dq + "is." + dq + "")
        ListItem listItem252
        unorderedList248:Add(listItem252)
        listItem252:AddText("Finished a very basic initial version of accessibility APIs for Quorum. This version is largely a proof of concept, but provides some infrastructure calls down to various operating systems and unifies accessibility calls (NSAccessible, IAccessible). This first version is available only for the Windows operating system and only works when using compiled mode. It does not yet function in interpreted mode or on Mac or Linux.")
        ListItem listItem253
        unorderedList248:Add(listItem253)
        listItem253:AddText("Fixed a bug in the compiler causing extra items to sometimes be wrapped into an output .jar file.")
        ListItem listItem254
        unorderedList248:Add(listItem254)
        listItem254:AddText("Added the -server command line flag. This flag turns Quorum into an HTTP server, where code can be sent to it and the output is returned. Additionally, the -server insecure can be called turn off security settings while in this mode. This last mode is not recommended unless the user is running the server locally.")
        ListItem listItem255
        unorderedList248:Add(listItem255)
        listItem255:AddText("Added a new flag, -java. This flag allows the user to pass an existing Java jar file to Quorum. When passed, Quorum will automatically wrap any code into the built jar's manifest on compile. This should make it easier for external groups to combine their existing Java code with Quorum projects.")
        ListItem listItem256
        unorderedList248:Add(listItem256)
        listItem256:AddText("Finished a significant optimization pass of the compiler. There is always more work that can be done in this area, but a number of the bottlenecks in the Quorum 1.7 branch and earlier have been hammered out.")
        ListItem listItem257
        unorderedList248:Add(listItem257)
        listItem257:AddText("Significantly improved the -verify flag, which now gives a much better idea as to which methods have non-compiling, missing, or otherwise broken examples in the documentation.")
        ListItem listItem258
        unorderedList248:Add(listItem258)
        listItem258:AddText("Removed the " + dq + "quote" + dq + " token from the language. Now, the text primitive or object can return special character codes by calling actions, including arbitrary unicode values. Helper methods are available for common special characters (e.g., newline, quotes, tabs).")
        ListItem listItem259
        unorderedList248:Add(listItem259)
        listItem259:AddText("Lots of bug fixes.")
        ListItem listItem260
        unorderedList240:Add(listItem260)
        listItem260:AddText("New Quorum Website")
        
        Paragraph altParagraph
        altParagraph:AddText("We have substantially revamped the Quorum website, including adding the ability to run some Quorum programs online and the ability to rate the words/symbols used in the standard library, in an effort to improve them further.")
        
        listItem260:Add(altParagraph)
        
        
        UnorderedList unorderedList261
        unorderedList261:SetClassAttribute(listStyle)
        listItem260:Add(unorderedList261)
        ListItem listItem262
        unorderedList261:Add(listItem262)
        listItem262:AddText("The website now has a much improved look and feel.")
        ListItem listItem263
        unorderedList261:Add(listItem263)
        listItem263:AddText("The page for finding files in the standard library is now grouped by category, hopefully making it easier to find classes.")
        ListItem listItem264
        unorderedList261:Add(listItem264)
        listItem264:AddText("The Quorum website is now easily searchable.")
        ListItem listItem265
        unorderedList261:Add(listItem265)
        listItem265:AddText("Users can now login to the website through google or a custom account.")
        ListItem listItem266
        unorderedList261:Add(listItem266)
        listItem266:AddText("Pages with documentation generated by the compiler now allow the user to rate various attributes of a class (e.g., the class name, variable names, action names). The user must be logged into to rate.") 
    end

    action Quorum_1(Section bodyDiv)
        text listStyle = "list-disc list-outside pl-8"
        AddHeading(bodyDiv, "Quorum 1.7 February 25th, 2013", 2)
        bodyDiv:AddParagraph("Quorum 1.7 adds in a new type inference system, upgrades the internal architecture substantially, and fixes a number of known bugs.")
        UnorderedList unorderedList267
        unorderedList267:SetClassAttribute(listStyle)
        bodyDiv:Add(unorderedList267)
        ListItem listItem268
        unorderedList267:Add(listItem268)
        listItem268:AddText("Quorum now has a type inference system that can be used on the inside of actions (but not in declarations). In effect, this means that users can write phrases like " + dq + "a = 5" + dq + " and the compiler will still statically check, but will allow the type declaration to be excluded under many circumstances. This new system partially completes changes to the Quorum 2.0 type system, which conforms to user studies with humans done by our team and Stefan Hanenberg.")
        ListItem listItem269
        unorderedList267:Add(listItem269)
        listItem269:AddText("Substantially altered the static analysis tools internally to Quorum. This greatly increases the quality of the types of tools that can be built on top of the compiler. For example, Sodbeans now has much better code completion support due to this upgrade.")
        ListItem listItem270
        unorderedList267:Add(listItem270)
        listItem270:AddText("Added new web libraries for Quorum. This initial version is in beta and will be completed in Quorum 2.0. The current version, located in Libraries.Web supports the HTML 5 specification (or by calling print " + dq + "my page here" + dq + "). There are a number of limitations in this first release, but a basic web server can be created by passing the -web tag to the compiler (or in Sodbeans).")
        ListItem listItem271
        unorderedList267:Add(listItem271)
        listItem271:AddText("Added a hash table to the standard library under Libraries.Containers.HashTable.")
        ListItem listItem272
        unorderedList267:Add(listItem272)
        listItem272:AddText("Added a class for handling bitwise operations to the standard library under Libraries.Compute.BitwiseOperations.")
        ListItem listItem273
        unorderedList267:Add(listItem273)
        listItem273:AddText("Made more changes to the compiler errors output by Quorum as part of our continuing mission to make Quorum easier to use.")
        ListItem listItem274
        unorderedList267:Add(listItem274)
        listItem274:AddText("Updated and expanded the curriculum and documentation for Quorum.")
        ListItem listItem275
        unorderedList267:Add(listItem275)
        listItem275:AddText("Added a way to pass and use command line arguments.")
        ListItem listItem276
        unorderedList267:Add(listItem276)
        listItem276:AddText("Fixed a bug with the " + dq + "me" + dq + " keyword.")
        ListItem listItem277
        unorderedList267:Add(listItem277)
        listItem277:AddText("Fixed a rare, but critical, bug in the inheritance system.")
        ListItem listItem278
        unorderedList267:Add(listItem278)
        listItem278:AddText("Fixed an odd bug in the scoping system.")
        ListItem listItem279
        unorderedList267:Add(listItem279)
        listItem279:AddText("Fixed a number of small edge-case bugs.")
        
        AddHeading(bodyDiv, "Quorum 1.6 September 9th, 2012", 2)
        bodyDiv:AddParagraph("Quorum 1.6 contains a number of important bug fixes.")
        UnorderedList unorderedList280
        unorderedList280:SetClassAttribute(listStyle)
        bodyDiv:Add(unorderedList280)
        ListItem listItem281
        unorderedList280:Add(listItem281)
        listItem281:AddText("Fixed a number of bugs with the error system (called exceptions in other languages). These changes include a near rewrite of the bytecode generation algorithms for this system.")
        ListItem listItem282
        unorderedList280:Add(listItem282)
        listItem282:AddText("In order to help identify problems in the future, we have added a considerable number of test cases for the errors system. We think these tests offer a much more complete automated suite for this part of the compiler.")
        ListItem listItem283
        unorderedList280:Add(listItem283)
        listItem283:AddText("Fixed some bugs in the control flow analysis algorithms. These fixes will not impact the runtime behavior of any Quorum programs, but will make alternative control flow sequences that are illegal or impossible a little bit more obvious.")
        ListItem listItem284
        unorderedList280:Add(listItem284)
        listItem284:AddText("Improved the clarity slightly of a few compiler errors. As always, making compiler errors easier to understand is a work in progress.")
        ListItem listItem285
        unorderedList280:Add(listItem285)
        listItem285:AddText("Fixed a number of small edge-case bugs.")
        
        
        AddHeading(bodyDiv, "Quorum 1.5 June 26th, 2012", 2)
        UnorderedList unorderedList286
        unorderedList286:SetClassAttribute(listStyle)
        bodyDiv:Add(unorderedList286)
        ListItem listItem287
        unorderedList286:Add(listItem287)
        listItem287:AddText("Significantly altered the syntax for conditional statements (if). The reason for this change is because we ran an empirical study, which showed evidence that novices using this construct made consistent errors, especially in the use of the token " + dq + "then" + dq + " and " + dq + "end" + dq + " on the inside of else if constructs. There is still one more set of tests we would like to run on this construct, to reveal whether the keywords " + dq + "else if" + dq + " lead to higher accuracy than our current choice, " + dq + "elseif." + dq + " We have not yet discovered clear empirical evidence in the academic literature, so will probably end up running the tests on our own. Below we give a quick example of the change.")
        bodyDiv:AddParagraph("We previously had the following:")
        
        bodyDiv:Add(preformatter:GeneratePreformattedCode(  
                        "if a = b then" + cr
                    +   "end else if c = d then" + cr + cr
                    +   "end else then" + cr
                    +   "end" + cr))
        
        bodyDiv:AddParagraph("The syntax is now the following:")
        
        bodyDiv:Add(preformatter:GeneratePreformattedCode(  
                        "if a = b" + cr
                    +   "elseif c = d" + cr + cr
                    +   "else" + cr
                    +   "end" + cr))
        
        bodyDiv:AddParagraph("We may change the design of this construct again in the future if we find more, or better, evidence for against any particular design. Users, or other researchers, that have conducted formal empirical studies, with corresponding evidence, that they think might illuminate more decisions here should let us know.")
        UnorderedList unorderedList288
        unorderedList288:SetClassAttribute(listStyle)
        bodyDiv:Add(unorderedList288)
        ListItem listItem289
        unorderedList288:Add(listItem289)
        listItem289:AddText("Made minor changes to check-detect syntax. Like if statements, we removed the inner " + dq + "end" + dq + " statements. We did not run a formal empirical study on this change, but we thought it was a likely conclusion, given the if statement results. Further, this change keeps our language consistent across language constructs.")
        ListItem listItem290
        unorderedList288:Add(listItem290)
        listItem290:AddText("We now have a new Quorum Interpreter In internal tests, this includes a speed increase from between 1,100% and 21,000% speed improvement for simple examples. This timing data includes just the speed the interpreter runs, not compilation speed. This interpreter is now used by default if the -interpret flag is used. For example, " + dq + "quorum -interpret Main.quorum" + dq + " would use the new version.")
        UnorderedList unorderedList291
        unorderedList291:SetClassAttribute(listStyle)
        listItem290:Add(unorderedList291)
        ListItem listItem292
        unorderedList291:Add(listItem292)
        listItem292:AddText("In internal tests, this includes a speed increase from between 1,100% and 21,000% speed improvement for simple examples. This timing data includes just the speed the interpreter runs, not compilation speed.")
        ListItem listItem293
        unorderedList291:Add(listItem293)
        listItem293:AddText("This interpreter is now used by default if the -interpret flag is used. For example, " + dq + "quorum -interpret Main.quorum" + dq + " would use the new version.")
        ListItem listItem294
        unorderedList288:Add(listItem294)
        listItem294:AddText("Added quite a few new compiler tests. These tests have helped us to identify and fix a host of bugs (mostly minor) in the compiler, including a host of edge cases.")
        ListItem listItem295
        unorderedList288:Add(listItem295)
        listItem295:AddText("Quorum now has a significantly improved documentation generation system Changed the -document flag so that it now auto-generates HTML5 documentation for Quorum libraries. Added a new flag called -verify, which automatically checks that any " + dq + "examples" + dq + " used in the documentation compile. Updated the online wiki Quorum documentation to the 1.5 syntax. Significantly improved the quality of code examples in Quorum documentation.")
        UnorderedList unorderedList296
        unorderedList296:SetClassAttribute(listStyle)
        listItem295:Add(unorderedList296)
        ListItem listItem297
        unorderedList296:Add(listItem297)
        listItem297:AddText("Changed the -document flag so that it now auto-generates HTML5 documentation for Quorum libraries.")
        ListItem listItem298
        unorderedList296:Add(listItem298)
        listItem298:AddText("Added a new flag called -verify, which automatically checks that any " + dq + "examples" + dq + " used in the documentation compile.")
        ListItem listItem299
        unorderedList296:Add(listItem299)
        listItem299:AddText("Updated the online wiki Quorum documentation to the 1.5 syntax.")
        ListItem listItem300
        unorderedList296:Add(listItem300)
        listItem300:AddText("Significantly improved the quality of code examples in Quorum documentation.")
        ListItem listItem301
        unorderedList288:Add(listItem301)
        listItem301:AddText("Fixed a major compiler bug that didn't allow the user to access parent variables.")
        ListItem listItem302
        unorderedList288:Add(listItem302)
        listItem302:AddText("Library Changes Completed a total redesign of the File class. We're looking for feedback on this class, but hope that it will be easier to use. Minor bug fixes in the music and sound classes. Fixed a number of bugs in classes like Random and the Containers. Added a new class called Libraries.Sound.Audio, which can playback media files. In this first release, it is designed to make it easy to playback .wav files easily. Future releases will probably expand the functionality further, depending on whether we get any user requests. Added a new set of Robot Control Libraries for interacting with iCreate's CBC robot controller.")
        UnorderedList unorderedList303
        unorderedList303:SetClassAttribute(listStyle)
        listItem302:Add(unorderedList303)
        ListItem listItem304
        unorderedList303:Add(listItem304)
        listItem304:AddText("Completed a total redesign of the File class. We're looking for feedback on this class, but hope that it will be easier to use.")
        ListItem listItem305
        unorderedList303:Add(listItem305)
        listItem305:AddText("Minor bug fixes in the music and sound classes.")
        ListItem listItem306
        unorderedList303:Add(listItem306)
        listItem306:AddText("Fixed a number of bugs in classes like Random and the Containers.")
        ListItem listItem307
        unorderedList303:Add(listItem307)
        listItem307:AddText("Added a new class called Libraries.Sound.Audio, which can playback media files. In this first release, it is designed to make it easy to playback .wav files easily. Future releases will probably expand the functionality further, depending on whether we get any user requests.")
        ListItem listItem308
        unorderedList303:Add(listItem308)
        listItem308:AddText("Added a new set of Robot Control Libraries for interacting with iCreate's CBC robot controller.")
        ListItem listItem309
        unorderedList288:Add(listItem309)
        listItem309:AddText("Adjusted the design of Compiler error messages. Our changes here are pretty minor, but our goal was to generally make the messages more consistent and obvious to users. users that find error messages that still are not clear should please feel free to file a bug report.")
        ListItem listItem310
        unorderedList288:Add(listItem310)
        listItem310:AddText("Lots of bug fixes.")
        
        
        AddHeading(bodyDiv, "Quorum 1.0 January 30th, 2012", 2)
        bodyDiv:AddParagraph("This is the initial release of the Quorum programming language. Currently, Quorum has the following features:")
        UnorderedList unorderedList311
        unorderedList311:SetClassAttribute(listStyle)
        bodyDiv:Add(unorderedList311)
        ListItem listItem312
        unorderedList311:Add(listItem312)
        listItem312:AddText("Fully compiled down to Java bytecode")
        ListItem listItem313
        unorderedList311:Add(listItem313)
        listItem313:AddText("Static, but flexible, type checking")
        ListItem listItem314
        unorderedList311:Add(listItem314)
        listItem314:AddText("Unique control structures, heavily tested to be easy to understand by novices and professionals")
        ListItem listItem315
        unorderedList311:Add(listItem315)
        listItem315:AddText("Object-oriented language")
        ListItem listItem316
        unorderedList311:Add(listItem316)
        listItem316:AddText("Standard Library (e.g., data structures, music generation, text-to-speech)")
        ListItem listItem317
        unorderedList311:Add(listItem317)
        listItem317:AddText("Plugin system for extending Quorum")
        ListItem listItem318
        unorderedList311:Add(listItem318)
        listItem318:AddText("Integration with the NetBeans IDE")
        ListItem listItem319
        unorderedList311:Add(listItem319)
        listItem319:AddText("Talking Omniscient debugger (The debugger literally talks to you and tells you what is going on).")
    end

    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Release Notes - Quorum Programming Language")
        AddDefaultHeaders()

        //Figure out getting main regions properly.
        Array<Division> divs = InitializeTutorialPage()
        Division leftDiv = divs:Get(0)
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)

        leftDiv:SetClassAttribute("hidden")
        bodyDiv:SetClassAttribute("flex flex-col w-5/5 sm:w-4/5 md:w-4/5 mx-4 overflow-auto gap-y-4")

        //page header
        Header headDiv
        headDiv:SetClassAttribute("pageHeader outermostContainer")
        AddHeading(headDiv, "Quorum Release Notes", 1)
        headDiv:AddText("We post changes to Quorum here")
        bodyDiv:Add(headDiv)

        text sectionStyle = "flex flex-col gap-y-2"
        
Section section7_1
        section7_1:AddClassAttribute(sectionStyle)
        QuorumStudio7_1Notes(section7_1)
        
        Section section7_0
        section7_0:AddClassAttribute(sectionStyle)
        QuorumStudio7_0Notes(section7_0)
        
        Section section6_3
        section6_3:AddClassAttribute(sectionStyle)
        QuorumStudio6_3Notes(section6_3)
        
        Section section6_2
        section6_2:AddClassAttribute(sectionStyle)
        QuorumStudio6_2Notes(section6_2)
        
        Section section6_1
        section6_1:AddClassAttribute(sectionStyle)
        QuorumStudio6_1Notes(section6_1)
        
        Section section6_0
        section6_0:AddClassAttribute(sectionStyle)
        QuorumStudio6_Notes(section6_0)
        
        Section section5_1
        section5_1:AddClassAttribute(sectionStyle)
        QuorumStudio5_1Notes(section5_1)

        Section section5_04
        section5_04:AddClassAttribute(sectionStyle)
        QuorumStudio5_04Notes(section5_04)

        Section section5_03
        section5_03:AddClassAttribute(sectionStyle)
        QuorumStudio5_03Notes(section5_03)

        Section section5_02
        section5_02:AddClassAttribute(sectionStyle)
        QuorumStudio5_02Notes(section5_02)

        Section section5_01
        section5_01:AddClassAttribute(sectionStyle)
        QuorumStudio5_01Notes(section5_01)

        Section section5_0
        section5_0:AddClassAttribute(sectionStyle)
        QuorumStudio5_0Notes(section5_0)

        Section section4_6
        section4_6:AddClassAttribute(sectionStyle)
        QuorumStudio4_6Notes(section4_6)

        Section section4_5
        section4_5:AddClassAttribute(sectionStyle)
        QuorumStudio4_5Notes(section4_5)

        Section section4_0
        section4_0:AddClassAttribute(sectionStyle)
        QuorumStudio4_0Notes(section4_0)

        Section section3_5
        section3_5:AddClassAttribute(sectionStyle)
        QuorumStudio3_5Notes(section3_5)

        Section section3_0_1
        section3_0_1:AddClassAttribute(sectionStyle)
        QuorumStudio3_0_1Notes(section3_0_1)

        Section section3_0
        section3_0:AddClassAttribute(sectionStyle)
        QuorumStudio3_0Notes(section3_0)

        Section section2_3
        section2_3:AddClassAttribute(sectionStyle)
        QuorumStudio2_3Notes(section2_3)

        Section section2_2
        section2_2:AddClassAttribute(sectionStyle)
        QuorumStudio2_2Notes(section2_2)

        Section section2_1
        section2_1:AddClassAttribute(sectionStyle)
        QuorumStudio2_1Notes(section2_1)

        Section section2QS
        section2QS:AddClassAttribute(sectionStyle)
        QuorumStudio2Notes(section2QS)

        Section section7Q
        section7Q:AddClassAttribute(sectionStyle)
        Quorum7Notes(section7Q)

        Section section6_07
        section6_07:AddClassAttribute(sectionStyle)
        Quorum6_07_Notes(section6_07)

        Section section6_01
        section6_01:AddClassAttribute(sectionStyle)
        Quorum6_01_Notes(section6_01)

        Section section6
        section6:AddClassAttribute(sectionStyle)
        Quorum6_Notes(section6)

        Section section5
        section5:AddClassAttribute(sectionStyle)
        Quorum_5_Notes(section5)

        Section section4Patches
        section4Patches:AddClassAttribute(sectionStyle)
        Quorum_4_Patches(section4Patches)

        Section section4
        section4:AddClassAttribute(sectionStyle)
        Quorum_4(section4)

        Section section3Patches
        section3Patches:AddClassAttribute(sectionStyle)
        Quorum_3_Patches(section3Patches)

        Section section3
        section3:AddClassAttribute(sectionStyle)
        Quorum_3(section3)

        Section section2
        section2:AddClassAttribute(sectionStyle)
        Quorum_2(section2)

        Section section1
        section1:AddClassAttribute(sectionStyle)
        Quorum_1(section1)

        //newer Quorum Studio Notes
bodyDiv:Add(section7_1)
        bodyDiv:Add(section7_0)
        bodyDiv:Add(section6_3)
        bodyDiv:Add(section6_2)
        bodyDiv:Add(section6_1)
        bodyDiv:Add(section6_0)
        bodyDiv:Add(section5_1)
        bodyDiv:Add(section5_04)
        bodyDiv:Add(section5_03)
        bodyDiv:Add(section5_02)
        bodyDiv:Add(section5_01)
        bodyDiv:Add(section5_0)

        bodyDiv:Add(section4_6)
        bodyDiv:Add(section4_5)
        bodyDiv:Add(section4_0)

        bodyDiv:Add(section3_5)
        bodyDiv:Add(section3_0_1)
        bodyDiv:Add(section3_0)

        bodyDiv:Add(section2_3)
        bodyDiv:Add(section2_2)
        bodyDiv:Add(section2_1)
        bodyDiv:Add(section2QS)

        //Older Quorum Notes
        bodyDiv:Add(section7Q)
        bodyDiv:Add(section6_07)
        bodyDiv:Add(section6_01)
        bodyDiv:Add(section6)
        bodyDiv:Add(section5)
        bodyDiv:Add(section4Patches)
        bodyDiv:Add(section4)
        bodyDiv:Add(section3Patches)
        bodyDiv:Add(section3)
        bodyDiv:Add(section2)
        bodyDiv:Add(section1)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Read about how the Quorum programming language has changed over time."
    end

    action GetLocation returns text
        return "release.html"
    end
end
