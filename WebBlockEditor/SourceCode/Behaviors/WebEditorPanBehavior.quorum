package WebEditor.Behaviors
use Libraries.Interface.Behaviors.Behavior
use Libraries.Interface.Events.BehaviorEvent
use Libraries.Interface.Events.GestureEvent
use Libraries.Interface.Item
use Libraries.Interface.Controls.Blocks.Palette.BlockPalette
use Libraries.Interface.Behaviors.FocusPreviousBehavior
use Libraries.Interface.Behaviors.FocusNextBehavior
use Libraries.Game.GameStateManager
use Libraries.Interface.Controls.Blocks.CodeEditor
use WebEditor.BlockEditor
use Libraries.Interface.Behaviors.Blocks.CodeEditorNewLineBehavior
use Libraries.Interface.Behaviors.Controls.ControlActivationBehavior
use Libraries.Interface.Behaviors.Blocks.BlockPickUpBehavior
use Libraries.Interface.Controls.Blocks.Palette.BlockPaletteItem
use Libraries.Interface.Events.DragAndDropEvent
use Libraries.Game.Layer2D
use Libraries.Interface.Item2D
use Libraries.Compute.Vector3
use Libraries.Game.StandardInput


class WebEditorPanBehavior is Behavior
    
    DragAndDropEvent dragEvent
    boolean startedDrag = false
    
action Run(BehaviorEvent event)
if event:GetGestureEvent() not= undefined
GestureEvent gesture = event:GetGestureEvent()
            GameStateManager manager
            StandardInput gameInput = cast(StandardInput, manager:GetInput())
            
Layer2D layer = manager:GetGame():GetCurrentLayer2D()
        integer counter = layer:GetSize()
        Item2D temp = undefined
        Item result = undefined

        Vector3 pointVector = layer:GetCamera():ScreenToWorldCoordinates(gesture:GetX(), gesture:GetY())

        repeat while counter > 0
            counter = counter - 1
            temp = layer:Get(counter):GetItemAt(pointVector:GetX(), pointVector:GetY())
                if temp not= undefined
                    result = temp
                end
        end
            if gesture:timingCode = gesture:BEGIN and result not= undefined
dragEvent:Set(dragEvent:DRAGGING_BEGAN, gesture:GetX(), gesture:GetY(), gesture:GetX(), gesture:GetY(), 0, 0, result, undefined)
            elseif gesture:timingCode = gesture:CONTINUE
if startedDrag = false
                        gameInput:ProcessDragEvent(dragEvent)
                        startedDrag = true
                    end
    
                    dragEvent:Set(dragEvent:DRAGGING_CONTINUED, dragEvent:GetStartX(), dragEvent:GetStartY(),
                        gesture:GetX(), gesture:GetY(),
                        gesture:GetX() - dragEvent:GetX(), gesture:GetY() - dragEvent:GetY(),
                        dragEvent:GetSource(), dragEvent:GetDestination())
    
                    gameInput:ProcessDragEvent(dragEvent)
                
elseif gesture:timingCode = gesture:FINISH
dragEvent:Set(dragEvent:DROPPED, dragEvent:GetStartX(), dragEvent:GetStartY(), gesture:GetX(), gesture:GetY(), 0, 0, dragEvent:GetSource(), dragEvent:GetDestination())
                    gameInput:ProcessDragEvent(dragEvent)
    
                    startedDrag = false
                    dragEvent:Set(-1, 0, 0, 0, 0, 0, 0, undefined, undefined)
            else
                
            end
end
  end
    
    
    action IsInPalette(Item item) returns boolean
        repeat until item = undefined
            if item is BlockPalette
                return true
            else
                item = item:GetAccessibleParent()
            end
        end
        return false
    end
    
    action IsInBlockEditor(Item item) returns boolean
repeat until item = undefined
            if item is CodeEditor
                return true
            else
                item = item:GetAccessibleParent()
            end
        end
        return false
    end

end



