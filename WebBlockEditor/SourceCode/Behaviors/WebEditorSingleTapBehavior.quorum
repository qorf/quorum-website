package WebEditor.Behaviors
use Libraries.Interface.Behaviors.Behavior
use Libraries.Interface.Events.BehaviorEvent
use Libraries.Interface.Events.GestureEvent
use Libraries.Interface.Item
use Libraries.Interface.Controls.Blocks.Palette.BlockPalette
use Libraries.Interface.Behaviors.FocusPreviousBehavior
use Libraries.Interface.Behaviors.FocusNextBehavior
use Libraries.Game.GameStateManager
use Libraries.Interface.Controls.Blocks.CodeEditor
use WebEditor.BlockEditor
use Libraries.Interface.Behaviors.Blocks.CodeEditorNewLineBehavior
use Libraries.Interface.Behaviors.Controls.ControlActivationBehavior
use Libraries.Interface.Item2D
use Libraries.Game.Layer2D
use Libraries.Compute.Vector3
use Libraries.Interface.Controls.Blocks.Palette.BlockPaletteItem
use Libraries.Interface.Controls.ScrollPaneRendererAnchor


class WebEditorSingleTapBehavior is Behavior
    
action Run(BehaviorEvent event)
if event:GetGestureEvent() not= undefined
GestureEvent gesture = event:GetGestureEvent()
            GameStateManager manager
if IsInBlockEditor(manager:GetFocus())
BlockEditor editor = cast(BlockEditor, manager:GetGame())
                CodeEditor blocks = editor:GetBlockEditor()    
                if blocks:IsKeyboardMovingBlocks()
                    blocks:ConfirmKeyboardMovingBlocks()
                    return now
end
                        end
        
            Layer2D layer = manager:GetGame():GetCurrentLayer2D()
        integer counter = layer:GetSize()
        Item2D temp = undefined
        Item result = undefined

        Vector3 pointVector = layer:GetCamera():ScreenToWorldCoordinates(gesture:GetX(), gesture:GetY())

        repeat while counter > 0
            counter = counter - 1
            temp = layer:Get(counter):GetItemAt(pointVector:GetX(), pointVector:GetY())

            if temp not= undefined and cast(Item, temp) not= manager:GetFocus()
                    // if currently on the palette but trying to tap on page behind it don't move focus
                    // if the pages had a proper selection this might not be neccessary
                    if manager:GetFocus() is BlockPaletteItem and temp is ScrollPaneRendererAnchor
                        return now
                    end
                    temp:Focus()
            end
        end
end
  end
    
    action IsInPalette(Item item) returns boolean
        repeat until item = undefined
            if item is BlockPalette
                return true
            else
                item = item:GetAccessibleParent()
            end
        end
        return false
    end
    
    action IsInBlockEditor(Item item) returns boolean
repeat until item = undefined
            if item is CodeEditor
                return true
            else
                item = item:GetAccessibleParent()
            end
        end
        return false
    end

end


